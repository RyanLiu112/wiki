{"config":{"lang":["ja"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"Wiki","text":"<p>Welcome to my wiki.</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/","title":"\u3010C++\u3011STL","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#vector","title":"vector","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#set","title":"set","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#string","title":"string","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#map","title":"map","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#queue","title":"queue","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#priority_queue","title":"priority_queue","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#stack","title":"stack","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#pair","title":"pair","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91STL/#algorithm","title":"algorithm","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%8E%92%E5%BA%8F/","title":"\u3010C++\u3011\u6392\u5e8f","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%8E%92%E5%BA%8F/#_1","title":"\u9009\u62e9\u6392\u5e8f","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%8E%92%E5%BA%8F/#_2","title":"\u63d2\u5165\u6392\u5e8f","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%8E%92%E5%BA%8F/#_3","title":"\u5f52\u5e76\u6392\u5e8f","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%8E%92%E5%BA%8F/#_4","title":"\u5feb\u901f\u6392\u5e8f","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%95%B0%E7%BB%84/","title":"\u3010C++\u3011\u6570\u7ec4","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%95%B0%E7%BB%84/#_1","title":"\u4e8c\u5206\u67e5\u627e","text":"<ol> <li>\u4e8c\u5206\u67e5\u627e</li> </ol> <p>https://leetcode-cn.com/problems/binary-search/</p> <p>https://programmercarl.com/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html</p> <pre><code>class Solution {\npublic:\nint search(vector&lt;int&gt;&amp; nums, int target) {\nint left = 0, right = nums.size() - 1;\nwhile (left &lt;= right) {\nint mid = left + (right - left) / 2; // \u9632\u6b62\u6ea2\u51fa\nif (nums[mid] &gt; target) right = mid - 1;\nelse if (nums[mid] &lt; target) left = mid + 1;\nelse return mid;\n}\nreturn -1;\n}\n};\n</code></pre>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%95%B0%E7%BB%84/#_2","title":"\u76f8\u5173\u9898\u76ee\uff08\u5efa\u8bae\u518d\u505a\u4e00\u904d\uff09\uff1a","text":"<ul> <li>35.\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e</li> <li>34.\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e</li> <li>69.x \u7684\u5e73\u65b9\u6839</li> <li>367.\u6709\u6548\u7684\u5b8c\u5168\u5e73\u65b9\u6570</li> </ul>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%95%B0%E7%BB%84/#_3","title":"\u79fb\u9664\u5143\u7d20","text":"<p>\u4ee3\u7801\u968f\u60f3\u5f55\uff1ahttps://programmercarl.com/0027.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0.html</p> <p>LeetCode\uff1ahttps://leetcode-cn.com/problems/remove-element/</p> <p>\u66b4\u529b\u65b9\u6cd5\u5df2\u901a\u8fc7\uff0c\u5728\u53cc\u6307\u9488\u90e8\u5206\u518d\u91cd\u65b0\u505a</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%95%B0%E7%BB%84/#_4","title":"\u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9","text":"<p>https://programmercarl.com/0977.%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9.html</p> <p>LeetCode\uff1ahttps://leetcode-cn.com/problems/squares-of-a-sorted-array/</p> <p>\u66b4\u529b\u901a\u8fc7\uff0c\u53cc\u6307\u9488\u518d\u505a</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"\u3010C++\u3011\u6808\u548c\u961f\u5217","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_1","title":"\u6808","text":"<p>\u6808\u662f\u4e00\u79cd \u540e\u8fdb\u5148\u51fa\uff08last in - first out\uff0c LIFO\uff09\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6808\u4e2d\u5143\u7d20\u4ece\u6808\u9876\uff08top\uff09\u538b\u5165\uff08push)\uff0c\u4e5f\u4ece\u6808\u9876\u5f39\u51fa\uff08pop\uff09\u3002</p> <p>\u6808\uff08stack\uff09\uff1a\u4ec5\u5728\u8868\u5c3e\u8fdb\u884c\u63d2\u5165\u6216\u5220\u9664\u3002</p> <p>\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff0cLast In First Out\uff09</p> <p>\u8868\u5c3e\uff1a\u6808\u9876\uff08top\uff09</p> <p>\u8868\u5934\uff1a\u6808\u5e95\uff08bottom\uff09</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_2","title":"\u50a8\u5b58\u65b9\u6cd5","text":"<p>\uff081\uff09\u987a\u5e8f\u6808\uff08\u6570\u7ec4\u5b9e\u73b0\uff09</p> <p>\uff082\uff09\u94fe\u6808\uff08\u94fe\u8868\u5b9e\u73b0\uff09</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_3","title":"\u961f\u5217","text":"<p>\u961f\u5217\u662f\u4e00\u79cd \u5148\u8fdb\u5148\u51fa\uff08first in - first out\uff0c FIFO\uff09\u7684\u6570\u636e\u7ed3\u6784\uff0c\u961f\u5217\u4e2d\u7684\u5143\u7d20\u90fd\u4ece\u540e\u7aef\uff08rear\uff09\u5165\u961f\uff08push\uff09\uff0c\u4ece\u524d\u7aef\uff08front\uff09\u51fa\u961f\uff08pop\uff09\u3002</p>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/","title":"\u3010C++\u3011\u8f93\u5165\u8f93\u51fa","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/#scanf","title":"scanf","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/#printf","title":"printf","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/#fgets","title":"fgets","text":"<p>\u51fd\u6570\u5b9a\u4e49</p> <pre><code>char *fgets(char * restrict str, int size, FILE * restrict stream);\n</code></pre> <p>\u4f7f\u7528\u65b9\u6cd5</p> <pre><code>int main() {\nchar str[100];\n// \u4ece\u7ec8\u7aef\u8f93\u5165\uff1astdin\nfgets(str, 101, stdin);\n// \u4ece\u6587\u4ef6\u8f93\u5165\uff1afp\nFILE *fp;\nfgets(str, 101, fp);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/#sscanf","title":"sscanf","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/#sprintf","title":"sprintf","text":""},{"location":"CS/%E3%80%90C%2B%2B%E3%80%91%E9%93%BE%E8%A1%A8/","title":"\u3010C++\u3011\u94fe\u8868","text":"<p>\u5355\u94fe\u8868</p> <pre><code>// \u5355\u94fe\u8868\nstruct ListNode {\nint val;  // \u8282\u70b9\u4e0a\u5b58\u50a8\u7684\u5143\u7d20\nListNode *next;  // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\nListNode(int x) : val(x), next(NULL) {}  // \u8282\u70b9\u7684\u6784\u9020\u51fd\u6570\n};\n</code></pre> <p>\u53cc\u94fe\u8868</p> <p>\u5faa\u73af\u94fe\u8868</p>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u80fd\u7528\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u9700\u8981\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\uff1a\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u65e0\u540e\u6548\u6027\u548c\u5b50\u95ee\u9898\u91cd\u53e0\u3002</p> <p>DP \u6b65\u9aa4\uff1a</p> <ul> <li>\u786e\u5b9a dp \u6570\u7ec4\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49\uff08dp[i][j], dp[i]\uff09</li> <li>\u786e\u5b9a\u9012\u63a8\u516c\u5f0f</li> <li>dp \u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316\uff08\u51680/1\u3001\u5f00\u59341\u540e\u97620\uff09</li> <li>\u786e\u5b9a\u904d\u5386\u987a\u5e8f</li> <li>\u4e3e\u4f8b\u63a8\u5bfc dp \u6570\u7ec4</li> </ul>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#dp","title":"DP \u57fa\u7840","text":""},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#509","title":"509.\u6590\u6ce2\u90a3\u5951\u6570","text":"<p>https://leetcode.cn/problems/fibonacci-number/</p> <p>https://programmercarl.com/0509.%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0.html</p> <pre><code>class Solution:\ndef fib(self, n: int) -&gt; int:\nif n &lt;= 1:\nreturn n\ndp = [0 for i in range(n + 1)]\ndp[0], dp[1] = 0, 1\nfor i in range(2, n + 1):\ndp[i] = dp[i - 2] + dp[i - 1]\nreturn dp[n]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#70","title":"70.\u722c\u697c\u68af","text":"<p>https://leetcode.cn/problems/climbing-stairs/</p> <p>https://programmercarl.com/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF.html</p> <pre><code>class Solution:\ndef climbStairs(self, n: int) -&gt; int:\nif n &lt;= 2:\nreturn n\ndp = [0 for i in range(n + 1)]\ndp[1], dp[2] = 1, 2\nfor i in range(3, n + 1):\ndp[i] = dp[i - 2] + dp[i - 1]\nreturn dp[n]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#746","title":"746.\u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af","text":"<p>https://leetcode.cn/problems/min-cost-climbing-stairs/</p> <p>https://programmercarl.com/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF.html</p> <pre><code>class Solution:\ndef minCostClimbingStairs(self, cost: List[int]) -&gt; int:\nn = len(cost)\ndp = [0 for i in range(n + 1)]\nfor i in range(2, n + 1):\ndp[i] = min(dp[i - 2] + cost[i - 2], dp[i - 1] + cost[i - 1])\nreturn dp[n]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#62","title":"62.\u4e0d\u540c\u8def\u5f84","text":"<p>https://leetcode.cn/problems/unique-paths/</p> <p>https://programmercarl.com/0062.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84.html</p>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_2","title":"\u89e3\u9898\u601d\u8def","text":"<ol> <li>\u786e\u5b9a dp \u6570\u7ec4\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49</li> </ol> <p>dp[i][j] \u8868\u793a\u4ece (0, 0) \u51fa\u53d1\uff0c\u5230\u8fbe (i, j) \u5904\u7684\u8def\u5f84\u6570\u91cf</p> <ol> <li>\u786e\u5b9a\u9012\u63a8\u516c\u5f0f</li> </ol> <p>\u7531\u4e8e\u673a\u5668\u4eba\u53ea\u80fd\u5411\u53f3\u548c\u5411\u4e0b\u8d70\uff0c\u56e0\u6b64\uff0c\u5230\u8fbe (i, j) (i &gt; 1, j &gt; 1) \u53ef\u4ee5\u4ece (i - 1, j) \u5411\u4e0b\u8d70\u6216\u8005 (i, j - 1) \u5411\u53f3\u8d70\uff0c\u6240\u4ee5\uff1a\\(dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\\)</p> <ol> <li>dp \u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316</li> </ol> <p>dp[i][0] \u548c dp[0][j] \u90fd\u662f1</p> <ol> <li>\u786e\u5b9a\u904d\u5386\u987a\u5e8f</li> </ol> <p>\u4ece\u5de6\u5230\u53f3\u4e00\u5c42\u4e00\u5c42\u904d\u5386</p> <ol> <li>\u4e3e\u4f8b\u63a8\u5bfc dp \u6570\u7ec4</li> </ol> <p>\u7565\u3002</p> <p>\u4ee3\u7801</p> <pre><code>class Solution:\ndef uniquePaths(self, m: int, n: int) -&gt; int:\ndp = [[0 for j in range(n)] for i in range(m)]\nfor j in range(n):\ndp[0][j] = 1\nfor i in range(m):\ndp[i][0] = 1\nfor i in range(1, m):\nfor j in range(1, n):\ndp[i][j] = dp[i - 1][j] + dp[i][j - 1]\nreturn dp[m - 1][n - 1]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#63-ii","title":"63.\u4e0d\u540c\u8def\u5f84 II","text":"<p>https://leetcode.cn/problems/unique-paths-ii/</p> <p>https://programmercarl.com/0063.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84II.html</p> <pre><code>class Solution:\ndef uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -&gt; int:\nm, n = len(obstacleGrid), len(obstacleGrid[0])\ndp = [[0 for j in range(n)] for i in range(m)]\n# \u4e0d\u80fd\u5199 dp = [[0] * n] * m\uff0c\u4f1a\u6709\u5730\u5740\u7684\u95ee\u9898\nfor j in range(n):\nif obstacleGrid[0][j] == 1:\nbreak\nelse:\ndp[0][j] = 1\nfor i in range(m):\nif obstacleGrid[i][0] == 1:\nbreak\nelse:\ndp[i][0] = 1\nfor i in range(1, m):\nfor j in range(1, n):\nif obstacleGrid[i][j] != 1:\ndp[i][j] = dp[i - 1][j] + dp[i][j - 1]\nreturn dp[m - 1][n - 1]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#343","title":"343.\u6574\u6570\u62c6\u5206","text":"<p>https://leetcode.cn/problems/integer-break/</p> <p>https://programmercarl.com/0343.%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86.html</p> <pre><code>class Solution:\ndef integerBreak(self, n: int) -&gt; int:\nif n &lt;= 3:\nreturn n - 1\ndp = [0 for i in range(n + 1)]  # dp[i] \u8868\u793a\u6b63\u6574\u6570i\u62c6\u5206\u540e\u5404\u4e2a\u56e0\u6570\u7684\u6700\u5927\u4e58\u79ef\ndp[2] = 1\ndp[3] = 2\nfor i in range(4, n + 1):\nfor j in range(1, i):\ndp[i] = max(dp[i], (i - j) * j, dp[i - j] * j)\nreturn dp[n]\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_3","title":"\u80cc\u5305\u95ee\u9898","text":""},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#0-1","title":"0-1 \u80cc\u5305","text":"<p>\u80cc\u5305\u4e2d\u5404\u79cd\u7269\u54c1\u7684\u6570\u91cf\u53ea\u67090-1\u4e24\u79cd\u72b6\u6001\u3002</p> <p>\u5047\u8bbe\u80cc\u5305\u7684\u5bb9\u91cf\u4e3a\uff0c\u6709 \\(N\\) \u4ef6\u7269\u54c1\u548c</p> <p>DP \u4e94\u90e8\u66f2</p> <ol> <li>\u786e\u5b9a dp \u6570\u7ec4\u4ee5\u53ca\u4e0b\u6807\u7684\u542b\u4e49</li> </ol> <p>dp[i][j] \u8868\u793a\u4ece (0, 0) \u51fa\u53d1\uff0c\u5230\u8fbe (i, j) \u5904\u7684\u8def\u5f84\u6570\u91cf</p> <ol> <li>\u786e\u5b9a\u9012\u63a8\u516c\u5f0f</li> </ol> <p>\u7531\u4e8e\u673a\u5668\u4eba\u53ea\u80fd\u5411\u53f3\u548c\u5411\u4e0b\u8d70\uff0c\u56e0\u6b64\uff0c\u5230\u8fbe (i, j) (i &gt; 1, j &gt; 1) \u53ef\u4ee5\u4ece (i - 1, j) \u5411\u4e0b\u8d70\u6216\u8005 (i, j - 1) \u5411\u53f3\u8d70\uff0c\u6240\u4ee5\uff1a\\(dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\\)</p> <ol> <li>dp \u6570\u7ec4\u5982\u4f55\u521d\u59cb\u5316\uff08\u51680/1\u3001\u5f00\u59341\u540e\u97620\uff09</li> </ol> <p>dp[i][0] \u548c dp[0][j] \u90fd\u662f1</p> <ol> <li>\u786e\u5b9a\u904d\u5386\u987a\u5e8f</li> </ol> <p>\u4ece\u5de6\u5230\u53f3\u4e00\u5c42\u4e00\u5c42\u904d\u5386</p> <ol> <li>\u4e3e\u4f8b\u63a8\u5bfc dp \u6570\u7ec4</li> </ol> <p>\u7565\u3002</p>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_4","title":"\u5b8c\u5168\u80cc\u5305","text":"<p>\u80cc\u5305\u4e2d\u5404\u79cd\u7269\u54c1\u6570\u91cf\u662f\u65e0\u9650\u7684\u3002</p>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#416","title":"416.\u5206\u5272\u7b49\u548c\u5b50\u96c6","text":"<p>https://leetcode.cn/problems/partition-equal-subset-sum/</p> <p>https://programmercarl.com/0416.%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86.html</p> <pre><code>class Solution:\ndef canPartition(self, nums: List[int]) -&gt; bool:\ns = sum(nums)\nif s % 2:\nreturn False\nm, n = len(nums), s // 2\ndp = [[0 for j in range(n + 1)] for i in range(m)]  # dp[i][j]\u8868\u793a\u53ea\u5141\u8bb8\u653e0-i\u4e2a\u7269\u54c1\u3001\u80cc\u5305\u5bb9\u91cf\u4e3aj\u65f6\uff0c\u80cc\u5305\u80fd\u8fbe\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\nfor j in range(n):\nif j &gt;= nums[0]:\ndp[0][j] = nums[0]\nfor i in range(1, m):\nfor j in range(1, n + 1):\nif j &lt; nums[i]:\ndp[i][j] = dp[i - 1][j]\nelse:\ndp[i][j] = max(dp[i - 1][j], dp[i - 1][j - nums[i]] + nums[i])\nreturn dp[m - 1][n] == n\n</code></pre>"},{"location":"CS/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#1049-ii","title":"1049.\u6700\u540e\u4e00\u5757\u77f3\u5934\u7684\u91cd\u91cf II","text":"<p>https://leetcode.cn/problems/last-stone-weight-ii/</p> <p>https://programmercarl.com/1049.%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8FII.html</p> <pre><code>class Solution:\ndef lastStoneWeightII(self, stones: List[int]) -&gt; int:\ns = sum(stones)\nm, n = len(stones), s // 2\ndp = [[0 for j in range(n + 1)] for i in range(m)]\nfor j in range(1, n + 1):\nif j &gt;= stones[0]:\ndp[0][j] = stones[0]\nfor i in range(1, m):\nfor j in range(1, n + 1):\nif j &lt; stones[i]:\ndp[i][j] = dp[i - 1][j]\nelse:\ndp[i][j] = max(dp[i - 1][j], dp[i - 1][j - stones[i]] + stones[i])\nreturn s - 2 * dp[m - 1][n]\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_1","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5","text":"<ul> <li>\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5</li> <li>\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5\uff08\u4e00\uff09</li> <li>\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5\uff08\u4e8c\uff09</li> <li>\u6392\u5e8f<ul> <li>\u5feb\u901f\u6392\u5e8f<ul> <li>785.\u5feb\u901f\u6392\u5e8f</li> <li>\u5feb\u6392\u6b63\u5b97\u5199\u6cd5</li> <li>786.\u7b2ck\u4e2a\u6570</li> </ul> </li> <li>\u5f52\u5e76\u6392\u5e8f<ul> <li>787.\u5f52\u5e76\u6392\u5e8f</li> <li>788.\u9006\u5e8f\u5bf9\u7684\u6570\u91cf</li> </ul> </li> <li>\u4e8c\u5206<ul> <li>\u4e8c\u5206\u7684\u672c\u8d28</li> <li>\u6574\u6570\u4e8c\u5206<ul> <li>\u6a21\u677f\u4e00\uff08\u7ea2\u8272\uff0c\u627e\u53f3\u8fb9\u754c\uff09</li> <li>\u6a21\u677f\u4e8c\uff08\u7eff\u8272\uff0c\u627e\u5de6\u8fb9\u754c\uff09</li> </ul> </li> <li>\u5982\u4f55\u9009\u62e9\u6a21\u677f\uff1f</li> <li>789.\u6570\u7684\u8303\u56f4</li> <li>\u4e8c\u5206\u6b63\u5b97\u5199\u6cd5<ul> <li>\u5de6\u95ed\u53f3\u95ed\u533a\u95f4</li> <li>\u5de6\u95ed\u53f3\u5f00\u533a\u95f4</li> </ul> </li> <li>\u6d6e\u70b9\u6570\u4e8c\u5206</li> <li>790.\u6570\u7684\u4e09\u6b21\u65b9\u6839</li> </ul> </li> <li>\u9ad8\u7cbe\u5ea6</li> <li>\u524d\u7f00\u548c\u4e0e\u5dee\u5206</li> <li>\u53cc\u6307\u9488\u7b97\u6cd5</li> <li>\u4f4d\u8fd0\u7b97</li> <li>\u79bb\u6563\u5316</li> <li>\u533a\u95f4\u5408\u5e76</li> </ul> </li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_2","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5\uff08\u4e00\uff09","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_3","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5\uff08\u4e8c\uff09","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_4","title":"\u6392\u5e8f","text":"<ul> <li>\u5feb\u901f\u6392\u5e8f</li> <li>\u5f52\u5e76\u6392\u5e8f</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_5","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u57fa\u672c\u601d\u60f3\uff1a\u5206\u6cbb</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\mathcal{O}(n\\log n)\\)\uff0c\u6ce8\u610f\u5feb\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5e73\u5747\u800c\u8a00\u7684\uff0c\u56e0\u4e3a\u5feb\u6392\u5212\u5206\u51fa\u6765\u7684\u4e24\u4e2a\u533a\u95f4\u957f\u5ea6\u4e0d\u4e00\u5b9a\u76f8\u7b49\uff0c\u4f46\u957f\u5ea6\u7684\u671f\u671b\u662fn/2\u3002\u5c42\u6570\u7684\u671f\u671b\u662fnlogn\uff0c\u6240\u4ee5\u662f2*n/2*nlogn\u3002</p> <p>\u6b65\u9aa4</p> <ul> <li>\u786e\u5b9a\u5206\u754c\u70b9\uff1a\\(q[l], q[(l+r)/2], q[r]\\), \u968f\u673a</li> <li>\u8c03\u6574\u533a\u95f4\uff08\u91cd\u96be\u70b9\uff09\uff1a\u4f7f\u5f97\u5de6\u8fb9\u533a\u95f4\u6240\u6709\u7684\u6570\u90fd\u5c0f\u4e8e\u7b49\u4e8ex\uff0c\u53f3\u8fb9\u533a\u95f4\u6240\u6709\u7684\u6570\u90fd\u5927\u4e8e\u7b49\u4e8ex</li> <li>\u9012\u5f52\u5904\u7406\u5de6\u53f3\u4e24\u6bb5</li> </ul> <p>\u5feb\u901f\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u6539\u53d8\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e24\u4e2a\u6570\u6392\u5e8f\u7ed3\u679c\u4e0d\u540c\u3002</p> <p></p> <p>\u5728\u4efb\u610f\u65f6\u523b\uff0ci \u5de6\u8fb9\u7684\u6570\u90fd\u5c0f\u4e8ex\uff0cj \u53f3\u8fb9\u7684\u6570\u90fd\u5927\u4e8ex</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#785","title":"785.\u5feb\u901f\u6392\u5e8f","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/787/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n;\nint q[N];\nvoid quick_sort(int q[], int l, int r) {\nif (l &gt;= r) return;\nint x = q[(l + r) &gt;&gt; 1], i = l - 1, j = r + 1;\nwhile (i &lt; j) {\ndo i++; while (q[i] &lt; x);\ndo j--; while (q[j] &gt; x);\nif (i &lt; j) swap(q[i], q[j]);\n}\nquick_sort(q, l, j);\nquick_sort(q, j + 1, r);\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;q[i]);\nquick_sort(q, 0, n - 1);\nfor (int i = 0; i &lt; n; ++i) printf(\"%d \", q[i]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_6","title":"\u5feb\u6392\u6b63\u5b97\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n;\nint q[N];\nvoid quick_sort(int q[], int left, int right) {\nif (left &gt;= right) return;\nint pivot = q[left], i = left, j = right;\nwhile (i &lt; j) {\nwhile (i &lt; j &amp;&amp; q[j] &gt;= pivot) j--;\nwhile (i &lt; j &amp;&amp; q[i] &lt;= pivot) i++;\nswap(q[i], q[j]);\n}\nswap(q[left], q[i]);\nquick_sort(q, left, i - 1);\nquick_sort(q, i + 1, right);\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;q[i]);\nquick_sort(q, 0, n - 1);\nfor (int i = 0; i &lt; n; ++i) printf(\"%d \", q[i]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#786k","title":"786.\u7b2ck\u4e2a\u6570","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/788/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n;\nint q[N];\nvoid quick_sort(int q[], int l, int r) {\nif (l &gt;= r) return;\nint x = q[(l + r) &gt;&gt; 1], i = l - 1, j = r + 1;\nwhile (i &lt; j) {\ndo i++; while (q[i] &lt; x);\ndo j--; while (q[j] &gt; x);\nif (i &lt; j) swap(q[i], q[j]);\n}\nquick_sort(q, l, j);\nquick_sort(q, j + 1, r);\n}\nint main() {\nint k;\nscanf(\"%d%d\", &amp;n, &amp;k);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;q[i]);\nquick_sort(q, 0, n - 1);\nprintf(\"%d\\n\", q[k - 1]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_7","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u57fa\u672c\u601d\u60f3\uff1a\u5206\u6cbb</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\mathcal{O}(n\\log n)\\)\uff0c\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u7a33\u5b9a\u3002</p> <p></p> <p>\u6b65\u9aa4\uff1a</p> <ul> <li>\u786e\u5b9a\u5206\u754c\u70b9\uff1amid = (l + r) / 2</li> <li>\u9012\u5f52\u6392\u5e8fleft\u548cright</li> <li>\uff08\u91cd\u96be\u70b9\uff09\u5f52\u5e76\uff0c\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u5408\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\uff08\\(\\mathcal{O}(n)\\)\uff0c\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u88ab\u6bd4\u8f83\u4e00\u6b21\uff09\u3002</li> </ul> <p>\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#787","title":"787.\u5f52\u5e76\u6392\u5e8f","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/789/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n;\nint q[N], tmp[N]; // tmp \u7528\u4e8e\u50a8\u5b58\u5f52\u5e76\u6392\u5e8f\u540e\u7684\u7ed3\u679c\nvoid merge_sort(int q[], int l, int r) { // [l, r] \u95ed\u533a\u95f4\nif (l &gt;= r) return;\nint mid = (l + r) &gt;&gt; 1;\nmerge_sort(q, l, mid); // \u9012\u5f52\u6392\u5e8f\u5de6\u8fb9 [l, mid]\nmerge_sort(q, mid + 1, r); // \u9012\u5f52\u6392\u5e8f\u53f3\u8fb9 [mid + 1, r]\nint k = 0, i = l, j = mid + 1; // i \u6307\u5411\u5de6\u8fb9\u7684\u8d77\u70b9\uff0cj \u6307\u5411\u53f3\u8fb9\u7684\u8d77\u70b9\nwhile (i &lt;= mid &amp;&amp; j &lt;= r) {\nif (q[i] &lt;= q[j]) tmp[k++] = q[i++];\nelse tmp[k++] = q[j++];\n}\nwhile (i &lt;= mid) tmp[k++] = q[i++];\nwhile (j &lt;= r) tmp[k++] = q[j++];\nfor (i = l, j = 0; i &lt;= r; ++i, ++j) q[i] = tmp[j];\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;q[i]);\nmerge_sort(q, 0, n - 1);\nfor (int i = 0; i &lt; n; ++i) printf(\"%d \", q[i]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#788","title":"788.\u9006\u5e8f\u5bf9\u7684\u6570\u91cf","text":"<p>\u94fe\u63a5\uff1a</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_8","title":"\u4e8c\u5206","text":"<ul> <li>\u6574\u6570\u4e8c\u5206\uff08\u5f88\u86cb\u75bc\uff0c\u4f1a\u6709\u5f88\u591a\u8fb9\u754c\u95ee\u9898\uff0c\u5199\u4e0d\u597d\u4f1a\u6b7b\u5faa\u73af\uff09</li> <li>\u6d6e\u70b9\u6570\u4e8c\u5206</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_9","title":"\u4e8c\u5206\u7684\u672c\u8d28","text":"<p>\u4e8c\u5206\u7684\u672c\u8d28\u662f\u8fb9\u754c\uff0c\u800c\u4e0d\u662f\u5355\u8c03\u6027\u3002</p> <p>\u5982\u679c\u6709\u5355\u8c03\u6027\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u4e8c\u5206\uff1b\u4f46\u53ef\u4ee5\u4e8c\u5206\u7684\u9898\u76ee\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u5355\u8c03\u6027\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_10","title":"\u6574\u6570\u4e8c\u5206","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_11","title":"\u6a21\u677f\u4e00\uff08\u7ea2\u8272\uff0c\u627e\u53f3\u8fb9\u754c\uff09","text":"<ul> <li>\u627e\u4e2d\u95f4\u70b9\uff1amid = (l + r + 1) / 2</li> <li>\u68c0\u67e5mid\u662f\u5426\u6ee1\u8db3</li> <li>if (check(mid))\uff1a\u5219mid\u5728\u5de6\u8fb9\u533a\u95f4\uff0c\u5219\u7b54\u6848\u5728[mid, r]\uff0cl = mid</li> <li>else\uff1a\u5219\u7b54\u6848\u5728[l, mid - 1]\uff0cr = mid - 1</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_12","title":"\u6a21\u677f\u4e8c\uff08\u7eff\u8272\uff0c\u627e\u5de6\u8fb9\u754c\uff09","text":"<ul> <li>\u627e\u4e2d\u95f4\u70b9\uff1amid = (l + r) / 2</li> <li>\u68c0\u67e5mid\u662f\u5426\u6ee1\u8db3</li> <li>if (check(mid))\uff1a\u5219mid\u5728\u53f3\u8fb9\u533a\u95f4\uff0c\u5219\u7b54\u6848\u5728[l, mid]\uff0cr = mid</li> <li>else\uff1a\u5219\u7b54\u6848\u5728[mid + 1, r]\uff0cl = mid + 1</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_13","title":"\u5982\u4f55\u9009\u62e9\u6a21\u677f\uff1f","text":"<p>\u5148\u5199check\u51fd\u6570\uff0c\u6839\u636echeck\u60f3\u5982\u4f55\u66f4\u65b0\u533a\u95f4\uff0cl = mid\u5219\u7528\u6a21\u677f\u4e00\uff08mid = (l + r + 1) / 2\uff09\uff0cr = mid\u5219\u7528\u6a21\u677f\u4e8c\u3002</p> <p>\u6a21\u677f\u4e00\u4e2dmid = (l + r + 1) / 2\u662f\u56e0\u4e3a\uff0c\u5047\u8bbemid = (l + r) / 2\uff0c\u5f53l = r-1\u65f6\uff0cmid=l\uff0c\u82e5check(mid)\u4e3atrue\uff0c\u5219\u66f4\u65b0\u533a\u95f4\u65f6l = mid = l\uff0c\u4f1a\u6b7b\u5faa\u73af\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#789","title":"789.\u6570\u7684\u8303\u56f4","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/791/</p> <p>\u6a21\u677f\u4e00</p> <pre><code>int binary_search() {\nint l = 0, r = n - 1;\nwhile (l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif (check(mid)) l = mid;\nelse r = mid + 1;\n}\nreturn l;\n}\n</code></pre> <p>\u6a21\u677f\u4e8c</p> <pre><code>int binary_search() {\nint l = 0, r = n - 1;\nwhile (l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif (check(mid)) r = mid;\nelse l = mid - 1;\n}\nreturn l;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n, m;\nint q[N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;q[i]);\nwhile (m--) {\nint x;\nscanf(\"%d\", &amp;x);\nint l = 0, r = n - 1;\nwhile (l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif (q[mid] &gt;= x) r = mid;\nelse l = mid + 1;\n}\nif (q[l] != x) printf(\"-1 -1\\n\");\nelse {\nprintf(\"%d \", l);\nint l = 0, r = n - 1;\nwhile (l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif (q[mid] &lt;= x) l = mid;\nelse r = mid - 1;\n}\nprintf(\"%d\\n\", l);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_14","title":"\u4e8c\u5206\u6b63\u5b97\u5199\u6cd5","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_15","title":"\u5de6\u95ed\u53f3\u95ed\u533a\u95f4","text":"<pre><code>int binary_search(vector&lt;int&gt;&amp; nums, int target) {\nint left = 0, right = nums.size() - 1;\nwhile (left &lt;= right) { // \u6839\u636e\u95ed\u533a\u95f4\u5b9a\u4e49\uff0c\u53ef\u4ee5\u52a0\u7b49\u53f7\nint mid = (left + right) &gt;&gt; 1;\nif (nums[mid] &gt; target) r = mid - 1;\nelse if (nums[mid] &lt; target) l = mid + 1;\nelse return mid;\n}\nreturn -1;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_16","title":"\u5de6\u95ed\u53f3\u5f00\u533a\u95f4","text":"<pre><code>int binary_search(vector&lt;int&gt;&amp; nums, int target) {\nint left = 0, right = nums.size() - 1;\nwhile (left &lt; right) { // \u6839\u636e\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u5b9a\u4e49\uff0c\u4e0d\u80fd\u52a0\u7b49\u53f7\nint mid = (left + right) &gt;&gt; 1;\nif (nums[mid] &gt; target) r = mid;\nelse if (nums[mid] &lt; target) l = mid + 1;\nelse return mid;\n}\nreturn -1;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_17","title":"\u6d6e\u70b9\u6570\u4e8c\u5206","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#790","title":"790.\u6570\u7684\u4e09\u6b21\u65b9\u6839","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/792/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main() {\ndouble n;\nscanf(\"%lf\", &amp;n);\ndouble l = -10000, r = 10000;\nwhile (r - l &gt; 1e-8) { // \u8981\u6c42\u4fdd\u75596\u4f4d\u5c0f\u6570\uff0c\u6240\u4ee5\u81f3\u5c11\u89811e-8\ndouble mid = (l + r) / 2;\nif (mid * mid * mid &gt;= n) r = mid;\nelse l = mid;\n}\nprintf(\"%.6lf\\n\", l);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_18","title":"\u9ad8\u7cbe\u5ea6","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_19","title":"\u524d\u7f00\u548c\u4e0e\u5dee\u5206","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_20","title":"\u53cc\u6307\u9488\u7b97\u6cd5","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_21","title":"\u4f4d\u8fd0\u7b97","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_22","title":"\u79bb\u6563\u5316","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_23","title":"\u533a\u95f4\u5408\u5e76","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/","title":"\u7b2c\u4e09\u7ae0 \u641c\u7d22\u4e0e\u56fe\u8bba","text":"<ul> <li>\u7b2c\u4e09\u7ae0 \u641c\u7d22\u4e0e\u56fe\u8bba<ul> <li>\u7b2c\u4e09\u7ae0 \u641c\u7d22\u4e0e\u56fe\u8bba\uff08\u4e00\uff09</li> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09</li> <li>\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09<ul> <li>BFS\u6846\u67b6</li> <li>844.\u8d70\u8ff7\u5bab</li> </ul> </li> <li>\u6811\u4e0e\u56fe\u7684\u5b58\u50a8</li> <li>\u6811\u4e0e\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386<ul> <li>846.\u6811\u7684\u91cd\u5fc3</li> </ul> </li> <li>\u6811\u4e0e\u56fe\u7684\u5bbd\u5ea6\u4f18\u5148\u904d\u5386</li> </ul> </li> </ul> <p>DFS\u4e0eBFS</p> <p>\u6811\u4e0e\u56fe\u7684\u904d\u5386\uff1a\u62d3\u6251\u6392\u5e8f</p> <p>\u6700\u77ed\u8def</p> <p>\u6700\u5c0f\u751f\u6210\u6811</p> <p>\u4e8c\u5206\u56fe\uff1a\u67d3\u8272\u6cd5\u3001\u5308\u7259\u5229\u7b97\u6cd5</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_2","title":"\u7b2c\u4e09\u7ae0 \u641c\u7d22\u4e0e\u56fe\u8bba\uff08\u4e00\uff09","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22</li> <li>\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22</li> <li>\u6811\u4e0e\u56fe\u7684\u5b58\u50a8</li> <li>\u6811\u4e0e\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386</li> <li>\u6811\u4e0e\u56fe\u7684\u5bbd\u5ea6\u4f18\u5148\u904d\u5386</li> <li>\u62d3\u6251\u6392\u5e8f</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#dfs","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09","text":"<p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08Depth First Search\uff0cDFS\uff09\uff1a\u5c3d\u53ef\u80fd\u5f80\u6df1\u641c\uff0c\u641c\u5230\u53f6\u8282\u70b9\u4f1a\u56de\u6eaf\uff0c\u4fd7\u79f0\u66b4\u641c\u3002</p> <p>\u6570\u636e\u7ed3\u6784\uff1a\u6808</p> <p>\u7a7a\u95f4\uff1a\\(\\mathcal{O}(h)\\)</p> <p>\u4f18\u70b9\uff1a\u7a7a\u95f4\u5c11</p> <p>\u7f3a\u70b9\uff1a\u641c\u7d22\u8def\u5f84\u4e0d\u5177\u6709\u6700\u77ed\u6027</p> <ul> <li>\u7b97\u6cd5\u601d\u8def\u6bd4\u8f83\u5947\u602a\u7684\u6216\u5bf9\u7a7a\u95f4\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u7528DFS</li> <li>DFS\u5c31\u662f\u9012\u5f52\uff0c\u6808\u662f\u901a\u8fc7\u9012\u5f52\uff0c\u7cfb\u7edf\u81ea\u52a8\u5b9e\u73b0\u7684\uff0c\u4e0d\u9700\u8981\u624b\u5199</li> <li>\u56de\u6eaf\u6700\u91cd\u8981\u7684\u662f\uff1a\u6062\u590d\u73b0\u573a</li> </ul> <p></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 10;\nint n;\nint path[N];\nbool st[N];\nvoid dfs(int u) {\nif (u == n) {\nfor (int i = 0; i &lt; n; ++i) printf(\"%d \", path[i]);\nprintf(\"\\n\");\nreturn;\n}\nfor (int i = 1; i &lt;= n; ++i) {\nif (!st[i]) {\npath[u] = i;\nst[i] = true;\ndfs(u + 1);\nst[i] = false;\n}\n}\n}\nint main() {\nscanf(\"%d\", &amp;n);\ndfs(0);\nreturn 0;\n}\n</code></pre> <p>\u526a\u679d\uff1a\u5f53\u524d\u8def\u5f84\u4e0d\u662f\u6700\u4f18\u89e3\u6216\u4e0d\u5408\u6cd5\uff0c\u505c\u6b62\u5f53\u524d\u8def\u5f84\u7684\u641c\u7d22\uff0c\u63d0\u524d\u56de\u6eaf</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 20;\nint n;\nchar g[N][N];\nbool col[N], dg[N], udg[N];\nvoid dfs(int u) {\nif (u == n) {\nfor (int i = 0; i &lt; n; ++i) printf(\"%s\\n\", g[i]);\nprintf(\"\\n\");\nreturn;\n}\nfor (int i = 0; i &lt; n; ++i) {\nif (!col[i] &amp;&amp; !dg[u + i] &amp;&amp; !udg[n - u + i]) {\ng[u][i] = 'Q';\ncol[i] = dg[u + i] = udg[n - u + i] = true;\ndfs(u + 1);\ncol[i] = dg[u + i] = udg[n - u + i] = false;\ng[u][i] = '.';\n}\n}\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i)\nfor (int j = 0; j &lt; n; ++j)\ng[i][j] = '.';\ndfs(0);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#bfs","title":"\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09","text":"<p>\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08Breadth First Search\uff0cBFS\uff09\uff1a\u4e00\u5c42\u4e00\u5c42\u641c\u7d22\uff0c\u773c\u89c2\u516d\u8def\u8033\u542c\u516b\u65b9\u3002</p> <p>\u6570\u636e\u7ed3\u6784\uff1a\u961f\u5217</p> <p>\u7a7a\u95f4\uff1a\\(\\mathcal{O}(2^h)\\)</p> <p>\u4f18\u70b9\uff1a\u8def\u5f84\u5177\u6709\u6700\u77ed\u6027\uff0c\u53ef\u4ee5\u7528\u4e8e\u5bfb\u627e\u6700\u77ed\u8def\uff08\u6240\u6709\u8fb9\u7684\u6743\u91cd\u4e3a1\u65f6\u53ef\u4ee5\u4f7f\u7528\uff09</p> <p>\u7f3a\u70b9\uff1a\u7a7a\u95f4\u591a</p> <p>\u5173\u952e\u8bcd\uff1a\u6700\u77ed\u8ddd\u79bb\u3001\u6700\u5c11\u6b65\u6570\u3001\u6700\u5c11\u64cd\u4f5c\u51e0\u6b21</p> <p>DP\u95ee\u9898 \\(\\sub\\) \u6700\u77ed\u8def\u95ee\u9898\uff0cDP\u662f\u6ca1\u6709\u73af\u7684\u6700\u77ed\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\uff0c\u6240\u4ee5DP\u4e0d\u4f1a\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u89e3\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#bfs_1","title":"BFS\u6846\u67b6","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#844","title":"844.\u8d70\u8ff7\u5bab","text":"<p>\u94fe\u63a5\uff1a</p> <p>\u4e00\u822c\u7528STL\u7684\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\ntypedef pair&lt;int, int&gt; PII;\nconst int N = 110;\nint n, m;\nint g[N][N];\nint d[N][N];\nPII q[N * N];\nint bfs() {\nint hh = 0, tt = 0;\nq[0] = {0, 0};\nmemset(d, -1, sizeof d);\nd[0][0] = 0;\nint dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};\nwhile (hh &lt;= tt) {\nauto t = q[hh++]; // \u53d6\u961f\u5934\nfor (int i = 0; i &lt; 4; ++i) {\nint x = t.first + dx[i], y = t.second + dy[i];\nif (x &gt;= 0 &amp;&amp; x &lt; n &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; m &amp;&amp; g[x][y] == 0 &amp;&amp; d[x][y] == -1) {\nd[x][y] = d[t.first][t.second] + 1;\nq[++tt] = {x, y};\n}\n}\n}\nreturn d[n - 1][m - 1];\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt; n; ++i)\nfor (int j = 0; j &lt; m; ++j)\nscanf(\"%d\", &amp;g[i][j]);\nprintf(\"%d\\n\", bfs());\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_3","title":"\u6811\u4e0e\u56fe\u7684\u5b58\u50a8","text":"<p>\u6811\u662f\u65e0\u73af\u8fde\u901a\u56fe\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\u3002</p> <p>\u56fe</p> <ul> <li>\u6709\u5411\u56fe</li> <li>\u65e0\u5411\u56fe\uff08\u53ef\u4ee5\u770b\u4f5c\u6709\u5411\u56fe\uff0cab\u548cba\uff09</li> </ul> <p>\u50a8\u5b58\u65b9\u5f0f</p> <ul> <li>\u90bb\u63a5\u77e9\u9635</li> </ul> <p>\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u50a8 \\(g[a][b]\\)\uff0c\u8868\u793a \\(a\\) \u5230 \\(b\\) \u662f\u5426\u6709\u8fb9\uff08\u6709\u5411\uff09\uff0c\u5982\u679c\u5927\u4e8e1\u8868\u793a\u8fb9\u7684\u6743\u91cd</p> <p>\u9002\u7528\u4e8e\u5b58\u50a8\u7a20\u5bc6\u56fe\uff0c\u590d\u6742\u5ea6\u4e3a \\(n^2\\)</p> <ul> <li>\u90bb\u63a5\u8868\uff08\u5373\u5355\u94fe\u8868\uff0c\u7528\u7684\u6700\u591a\uff09</li> </ul> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_4","title":"\u6811\u4e0e\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"<p>\u6bcf\u4e2a\u70b9\u90fd\u53ea\u904d\u5386\u4e00\u6b21\uff0c\u9700\u8981\u5f00\u4e00\u4e2abool\u6570\u7ec4\u50a8\u5b58\u662f\u5426\u904d\u5386</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#846","title":"846.\u6811\u7684\u91cd\u5fc3","text":"<p>\u94fe\u63a5\uff1a</p> <p></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nconst int N = 100010, M = N * 2;\nint n, m;\nint h[N], e[M], ne[M], idx;\nbool st[N];\nint ans = N;\nvoid add(int a, int b) {\ne[idx] = b;\nne[idx] = h[a];\nh[a] = idx++;\n}\n// \u8fd4\u56de\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u70b9\u7684\u6570\u91cf\nint dfs(int u) {\nst[u] = true; // \u6807\u8bb0\u4e00\u4e0b\uff0c\u8868\u793au\u5df2\u7ecf\u88ab\u641c\u8fc7\u4e86\nint sum = 1, res = 0;\nfor (int i = h[u]; i != -1; i = ne[i]) {\nint j = e[i];\nif (!st[j]) {\nint s = dfs(j);\nres = max(res, s);\nsum += s;\n}\n}\nres = max(res, n - sum);\nans = min(ans, res);\nreturn sum;\n}\nint main() {\nscanf(\"%d\", &amp;n);\nmemset(h, -1, sizeof h);\nfor (int i = 0; i &lt; n - 1; ++i) {\nint a, b;\nscanf(\"%d%d\", &amp;a, &amp;b);\nadd(a, b), add(b, a);\n}\ndfs(1); // \u4ece1\u53f7\u70b9\u5f00\u59cb\u641c\uff0c\u5176\u5b9e\u4ece\u54ea\u4e00\u4e2a\u70b9\u5f00\u59cb\u90fd\u53ef\u4ee5\nprintf(\"%d\\n\", ans);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_5","title":"\u6811\u4e0e\u56fe\u7684\u5bbd\u5ea6\u4f18\u5148\u904d\u5386","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784","text":"<ul> <li>\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784<ul> <li>\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e00\uff09</li> <li>\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e8c\uff09</li> <li>\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e09\uff09</li> <li>\u94fe\u8868\u4e0e\u90bb\u63a5\u8868<ul> <li>\u4e3a\u4ec0\u4e48\u52a8\u6001\u94fe\u8868\u6162\uff1f</li> <li>\u4e3a\u4ec0\u4e48\u7528\u6570\u7ec4\u6a21\u62df\u94fe\u8868\uff08\u9759\u6001\u94fe\u8868\uff09\uff1f</li> <li>\u5355\u94fe\u8868\uff08\u6570\u7ec4\u6a21\u62df\uff09<ul> <li>826.\u5355\u94fe\u8868</li> </ul> </li> <li>\u53cc\u94fe\u8868\uff08\u6570\u7ec4\u6a21\u62df\uff09<ul> <li>827.\u53cc\u94fe\u8868</li> </ul> </li> <li>\u90bb\u63a5\u8868</li> </ul> </li> <li>\u6808\u4e0e\u961f\u5217<ul> <li>\u6808\uff08\u6570\u7ec4\u6a21\u62df\uff09<ul> <li>828.\u6a21\u62df\u6808</li> </ul> </li> <li>\u961f\u5217\uff08\u6570\u7ec4\u6a21\u62df\uff09<ul> <li>829.\u6a21\u62df\u961f\u5217</li> </ul> </li> <li>\u5355\u8c03\u6808<ul> <li>830.\u5355\u8c03\u6808</li> </ul> </li> <li>\u5355\u8c03\u961f\u5217<ul> <li>154.\u6ed1\u52a8\u7a97\u53e3</li> </ul> </li> </ul> </li> <li>KMP<ul> <li>KMP\u7684\u89e3\u9898\u601d\u8def</li> <li>831.KMP\u5b57\u7b26\u4e32</li> </ul> </li> <li>Trie \u6811\uff08\u5b57\u5178\u6811\uff09<ul> <li>835.Trie\u5b57\u7b26\u4e32\u7edf\u8ba1</li> <li>143.\u6700\u5927\u5f02\u6216\u5bf9</li> </ul> </li> <li>\u5e76\u67e5\u96c6<ul> <li>\u4f5c\u7528</li> <li>\u57fa\u672c\u539f\u7406</li> <li>\u5982\u4f55\u5224\u65ad\u6811\u6839\uff1f</li> <li>\u5982\u4f55\u6c42 \\(x\\) \u7684\u96c6\u5408\u7f16\u53f7</li> <li>\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u96c6\u5408</li> <li>\u5e76\u67e5\u96c6\u7684\u4f18\u5316\u2014\u2014\u8def\u5f84\u538b\u7f29\uff08\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff09</li> <li>\u5173\u952e</li> <li>836.\u5408\u5e76\u96c6\u5408</li> <li>837.\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u6570\u91cf</li> <li>240.\u98df\u7269\u94fe</li> </ul> </li> <li>\u5806<ul> <li>\u5806\u7684\u5b58\u50a8</li> <li>\u5806\u7684\u64cd\u4f5c</li> <li>838.\u5806\u6392\u5e8f</li> <li>839.\u6a21\u62df\u5806</li> </ul> </li> <li>\u54c8\u5e0c\u8868<ul> <li>\u54c8\u5e0c\u8868</li> <li>\u54c8\u5e0c\u51fd\u6570</li> <li>\u54c8\u5e0c\u51fd\u6570\u7684\u5e38\u7528\u5f62\u5f0f</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6</li> <li>\u5b58\u50a8\u7ed3\u6784<ul> <li>\u62c9\u94fe\u6cd5</li> </ul> </li> <li>840.\u6a21\u62df\u6563\u5217\u8868<ul> <li>\u62c9\u94fe\u6cd5</li> <li>\u5f00\u653e\u5bfb\u5740\u6cd5</li> </ul> </li> <li>\u5b57\u7b26\u4e32\u54c8\u5e0c\u65b9\u5f0f<ul> <li>\u8fd9\u6837\u7684\u54c8\u5e0c\u65b9\u5f0f + \u524d\u7f00\u54c8\u5e0c\u6709\u4f55\u597d\u5904\uff1f</li> </ul> </li> </ul> </li> </ul> </li> <li>01:02<ul> <li>STL<ul> <li>vector</li> <li>pair</li> <li>string</li> <li>queue</li> <li>priority_queue<ul> <li>\u5982\u4f55\u5b9a\u4e49\u5c0f\u6839\u5806\uff1f<ul> <li>\u65b9\u6cd5\u4e00</li> <li>\u65b9\u6cd5\u4e8c</li> </ul> </li> </ul> </li> <li>stack</li> <li>deque</li> <li>set, map, multiset, multimap<ul> <li>set, multiset</li> <li>map, multimap</li> </ul> </li> <li>unordered_set, unordered_map, unordered_multiset, unordered_multimap<ul> <li>unordered_set, unordered_multiset</li> <li>unordered_map, unordered_multimap</li> </ul> </li> <li>bitset</li> </ul> </li> </ul> </li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","title":"\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e00\uff09","text":"<p>\u89c6\u9891\u94fe\u63a5\uff1ahttps://www.acwing.com/video/15/</p> <p>\u4e3b\u8981\u5185\u5bb9\uff1a</p> <ul> <li>\u94fe\u8868\u4e0e\u90bb\u63a5\u8868</li> <li>\u6808\u4e0e\u961f\u5217</li> <li>kmp</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","title":"\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e8c\uff09","text":"<ul> <li>Trie</li> <li>\u5e76\u67e5\u96c6</li> <li>\u5806</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","title":"\u7b2c\u4e8c\u7ae0 \u6570\u636e\u7ed3\u6784\uff08\u4e09\uff09","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","title":"\u94fe\u8868\u4e0e\u90bb\u63a5\u8868","text":"<p>\u52a8\u6001\u94fe\u8868\u5b9e\u73b0\uff1a\u7ed3\u6784\u4f53+\u6307\u9488\uff08y\u603b\u4e0d\u8bb2\uff09</p> <pre><code>struct Node {\nint val;\nNode *next;\n};\nnew Node(); // \u975e\u5e38\u6162\uff01\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","title":"\u4e3a\u4ec0\u4e48\u52a8\u6001\u94fe\u8868\u6162\uff1f","text":"<p>\u200b       C++ new \u52a8\u6001\u5206\u914d\u5f88\u6162\uff0c\u7528new\u751f\u6210\u8282\u70b9\u5f88\u5bb9\u6613\u8d85\u65f6</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","title":"\u4e3a\u4ec0\u4e48\u7528\u6570\u7ec4\u6a21\u62df\u94fe\u8868\uff08\u9759\u6001\u94fe\u8868\uff09\uff1f","text":"<p>\u200b       \u5feb\uff01</p> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u5199\u6210\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u4f46\u4ee3\u7801\u91cf\u4f1a\u7a0d\u5927\u4e00\u4e9b</p> <pre><code>struct Node {\nint e;\nint ne;\n}nodes[N];\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","title":"\u5355\u94fe\u8868\uff08\u6570\u7ec4\u6a21\u62df\uff09","text":"<p>\u7b97\u6cd5\u9898\u4e2d\u5e38\u7528\u90bb\u63a5\u8868\uff0c\u90bb\u63a5\u8868\u5e38\u7528\u4e8e\u5b58\u50a8\u56fe\u548c\u6811\u3002</p> <pre><code>// \u7528\u76f8\u540c\u7684\u4e0b\u6807\u5173\u8054e\u548cne\nint e[N]; // \u7528\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\nint ne[N]; // \u7528\u6570\u7ec4\u5b58\u50a8\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\n</code></pre> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#826","title":"826.\u5355\u94fe\u8868","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/828/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\n// head \u8868\u793a\u5934\u8282\u70b9\u7684\u4e0b\u6807\n// e[i] \u8868\u793a\u8282\u70b9i\u7684\u503c\n// ne[i] \u8868\u793a\u8282\u70b9i\u7684next\u6307\u9488\n// idx \u8868\u793a\u5f53\u524d\u5df2\u7ecf\u7528\u5230\u4e86\u54ea\u4e2a\u70b9\nint head, e[N], ne[N], idx;\n// \u521d\u59cb\u5316\nvoid init() {\nhead = -1;\nidx = 0;\n}\n// \u5c06x\u63d2\u5230\u5934\u8282\u70b9\nvoid add_to_head(int x) {\ne[idx] = x; // \u50a8\u5b58x\nne[idx] = head; // \u5c06x\u7684next\u6307\u5411head\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\nhead = idx++; // \u5c06head\u6307\u5411x\uff0c\u5e76\u66f4\u65b0idx\n}\n// \u5c06x\u63d2\u5230\u4e0b\u6807\u4e3ak\u7684\u8282\u70b9\u540e\u9762\nvoid add(int k, int x) {\ne[idx] = x; // \u50a8\u5b58x\nne[idx] = ne[k]; // \u5c06x\u7684next\u6307\u5411k\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\nne[k] = idx++; // \u5c06k\u6307\u5411x\uff0c\u5e76\u66f4\u65b0idx\n}\n// \u5220\u9664\u4e0b\u6807\u4e3ak\u7684\u540e\u9762\u7684\u8282\u70b9\nvoid remove(int k) {\nne[k] = ne[ne[k]];\n}\nint main() {\nint m;\nscanf(\"%d\", &amp;m);\ninit();\nwhile (m--) {\nchar op[2];\nint k, x;\nscanf(\"%s\", op);\nif (op[0] == 'H') {\nscanf(\"%d\", &amp;x);\nadd_to_head(x);\n} else if (op[0] == 'D') {\nscanf(\"%d\", &amp;k);\nif (!k) head = ne[head];\nremove(k - 1);\n} else {\nscanf(\"%d%d\", &amp;k, &amp;x);\nadd(k - 1, x);\n}\n}\nfor (int i = head; i != -1; i = ne[i]) printf(\"%d \", e[i]);\nprintf(\"\\n\");\nreturn 0;\n}\n</code></pre> <p>\u6613\u9519\uff1aif (!k) head = ne[head];</p> <p>k-1</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_9","title":"\u53cc\u94fe\u8868\uff08\u6570\u7ec4\u6a21\u62df\uff09","text":"<p>\u53cc\u94fe\u8868\u5e38\u7528\u4e8e\u4f18\u5316\u67d0\u4e9b\u95ee\u9898\u3002</p> <p>\u53cc\u94fe\u8868\u540c\u65f6\u6307\u5411\u524d\u540e\u3002</p> <pre><code>// \u53cc\u94fe\u8868\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4\u50a8\u5b58\u6307\u9488\nint l[N]; // \u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u7684\u524d\u4e00\u4e2a\u8282\u70b9\nint r[N]; // \u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u7684\u540e\u4e00\u4e2a\u8282\u70b9\n// \u53cc\u94fe\u8868\u4f7f\u7528\u4e0b\u6807\u4e3a0\u7684\u70b9\u50a8\u5b58\u5934\u8282\u70b9\uff08head\uff09\n// \u53cc\u94fe\u8868\u4f7f\u7528\u4e0b\u6807\u4e3a1\u7684\u70b9\u50a8\u5b58\u5c3e\u8282\u70b9\uff08tail\uff09\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#827","title":"827.\u53cc\u94fe\u8868","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/829/</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nconst int N = 100010;\n// e[i] \u8868\u793a\u8282\u70b9i\u7684\u503c\n// l[i] \u8868\u793a\u8282\u70b9i\u6307\u5411\u7684\u524d\u4e00\u4e2a\u8282\u70b9\n// r[i] \u8868\u793a\u8282\u70b9i\u6307\u5411\u7684\u540e\u4e00\u4e2a\u8282\u70b9\n// idx \u8868\u793a\u5f53\u524d\u5df2\u7ecf\u7528\u5230\u4e86\u54ea\u4e2a\u70b9\nint e[N], l[N], r[N], idx;\n// \u521d\u59cb\u5316\nvoid init() {\nr[0] = 1, l[1] = 0; // \u5934\u8282\u70b9\uff08head\uff09\u7684\u4e0b\u6807\u4e3a0\uff0c\u5c3e\u8282\u70b9\uff08tail\uff09\u7684\u4e0b\u6807\u4e3a1\nidx = 2;\n}\n// \u5c06x\u63d2\u5230\u4e0b\u6807\u4e3ak\u7684\u8282\u70b9\u540e\u9762\n// \u5728k\u7684\u524d\u9762\u63d2\u5165\u53ef\u4ee5\u5199\u6210 add(l[k], x)\nvoid add(int k, int x) {\ne[idx] = x;\nl[idx] = k, r[idx] = r[k];\nl[r[k]] = idx, r[k] = idx;\nidx++;\n}\n// \u5220\u9664\u4e0b\u6807\u4e3ak\u7684\u8282\u70b9\nvoid remove(int k) {\nl[r[k]] = l[k];\nr[l[k]] = r[k];\n}\nint main() {\nint m;\nscanf(\"%d\", &amp;m);\ninit();\nwhile (m--) {\nchar op[5];\nint k, x;\nscanf(\"%s\", op);\nif (op[0] == 'L') {\nscanf(\"%d\", &amp;x);\nadd(0, x);\n} else if (op[0] == 'R') {\nscanf(\"%d\", &amp;x);\nadd(l[1], x);\n} else if (op[0] == 'D') {\nscanf(\"%d\", &amp;k);\nremove(k + 1);\n} else if (op[0] == 'I' &amp;&amp; op[1] == 'L') {\nscanf(\"%d%d\", &amp;k, &amp;x);\nadd(l[k + 1], x);\n} else {\nscanf(\"%d%d\", &amp;k, &amp;x);\nadd(k + 1, x);\n}\n}\nfor (int i = r[0]; i != 1; i = r[i]) printf(\"%d \", e[i]);\nprintf(\"\\n\");\nreturn 0;\n}\n</code></pre> <p>\u6613\u9519\uff1ak+1</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_10","title":"\u90bb\u63a5\u8868","text":"<p>\u90bb\u63a5\u8868\uff1a\u628a\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u90bb\u8fb9\u50a8\u5b58\u4e0b\u6765\uff08n\u4e2a\u5355\u94fe\u8868\uff09</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_11","title":"\u6808\u4e0e\u961f\u5217","text":"<p>\u7528\u6570\u7ec4\u6a21\u62df\u6808\u548c\u961f\u5217\u3002STL\u80fd\u505a\u7684\uff0c\u6570\u7ec4\u90fd\u53ef\u4ee5\u505a\uff1b\u4f46\u6570\u7ec4\u80fd\u505a\u7684\uff0cSTL\u4e0d\u4e00\u5b9a\u80fd\u505a\u3002</p> <p>y\u603b\u8bf4\u6570\u7ec4\u6a21\u62df\u6808\u548c\u961f\u5217\u76f8\u6bd4STL\u7684\u81f4\u547d\u7684\u597d\u5904\uff1a\u5feb\uff01</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_12","title":"\u6808\uff08\u6570\u7ec4\u6a21\u62df\uff09","text":"<p>\u5148\u8fdb\u540e\u51fa\uff08First-In-Last-OUT\uff0cFILO\uff09</p> <pre><code>#include &lt;iostream&gt;\nusing namaspace std;\nconst int N = 100010;\nint stk[N], tt = -1; // tt\u4e3a\u6808\u9876\u4e0b\u6807\uff0cy\u603b\u7528\u7684 tt \u4ece 0 \u5f00\u59cb\uff0c\u4f46\u5f88\u591a\u4e66\u4e0a\u90fd\u662f\u4ece -1 \u5f00\u59cb\n// \u63d2\u5165\nstk[++tt] = x;\n// \u5f39\u51fa\ntt--;\n// \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\nif (tt &gt; 0) not empty;\nelse empty;\n// \u53d6\u51fa\u6808\u9876\u5143\u7d20\nstk[tt];\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#828","title":"828.\u6a21\u62df\u6808","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/830/</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nconst int N = 100010;\nint stk[N], tt = -1;\nint main() {\nint m;\nscanf(\"%d\", &amp;m);\nwhile (m--) {\nchar op[10];\nint x;\nscanf(\"%s\", op);\nif (strcmp(op, \"push\") == 0) {\nscanf(\"%d\", &amp;x);\nstk[++tt] = x;\n} else if (strcmp(op, \"pop\") == 0) {\ntt--;\n} else if (strcmp(op, \"empty\") == 0) {\nif (tt &gt;= 0) printf(\"NO\\n\");\nelse printf(\"YES\\n\");\n} else {\nprintf(\"%d\\n\", stk[tt]);\n}\n}\nreturn 0;\n}\n</code></pre> <p>3302.\u8868\u8fbe\u5f0f\u6c42\u503c</p> <p>\u94fe\u63a5\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint stk[N], tt;\nint main() {\nint return 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_13","title":"\u961f\u5217\uff08\u6570\u7ec4\u6a21\u62df\uff09","text":"<p>\u5148\u8fdb\u5148\u51fa\uff08First-In-First-OUT\uff0cFIFO\uff09</p> <pre><code>#include &lt;iostream&gt;\nusing namaspace std;\nconst int N = 100010;\n// \u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20\uff0c\u5728\u961f\u5934\u5f39\u51fa\u5143\u7d20\nint q[N], hh = 0, tt = -1; // hh\u4e3a\u961f\u5934\u4e0b\u6807\uff0ctt\u4e3a\u961f\u5c3e\u4e0b\u6807\n// \u63d2\u5165\nq[++tt] = x;\n// \u5f39\u51fa\nhh++;\n// \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nif (hh &lt;= tt) not empty;\nelse empty;\n// \u53d6\u51fa\u961f\u5934\u3001\u961f\u5c3e\u5143\u7d20\nq[hh];\nq[tt];\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#829","title":"829.\u6a21\u62df\u961f\u5217","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/831/</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nconst int N = 100010;\nint q[N], hh = 0, tt = -1;\nint main() {\nint m;\nscanf(\"%d\", &amp;m);\nwhile (m--) {\nchar op[10];\nint x;\nscanf(\"%s\", op);\nif (strcmp(op, \"push\") == 0) {\nscanf(\"%d\", &amp;x);\nq[++tt] = x;\n} else if (strcmp(op, \"pop\") == 0) {\nhh++;\n} else if (strcmp(op, \"empty\") == 0) {\nif (hh &lt;= tt) printf(\"NO\\n\");\nelse printf(\"YES\\n\");\n} else {\nprintf(\"%d\\n\", q[hh]);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_14","title":"\u5355\u8c03\u6808","text":"<p>\u5355\u8c03\u6808\u9898\u76ee\u7c7b\u578b\u4e0d\u591a\uff0c\u6700\u5e38\u89c1\u7684\u662f\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u6bcf\u4e2a\u6570\u5de6\u8fb9\u79bb\u5b83\u6700\u8fd1\u7684\u4e14\u6bd4\u5b83\u5c0f\u7684\u6570\u3002</p> <p>\u7c7b\u4f3c\u53cc\u6307\u9488\u7684\u505a\u6cd5\uff0c\u5148\u60f3\u66b4\u529b\u505a\u6cd5\uff0c\u7136\u540e\u6316\u6398\u6027\u8d28\u7b80\u5316\u95ee\u9898</p> <p>\u82e5 \\(a_i \\ge a_j\\) \u4e14 \\(i &lt; j\\)\uff0c\u5219\u53ef\u4ee5\u5220\u53bb \\(a_i\\)\u3002</p> <p>\u6545\u6700\u540e\u5269\u4e0b\u7684\u6808\u662f\u4e00\u4e2a\u5355\u8c03\u6808\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#830","title":"830.\u5355\u8c03\u6808","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/832/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint stk[N], tt = -1;\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nwhile (n--) {\nint x;\nscanf(\"%d\", &amp;x);\nwhile (tt &gt;= 0 &amp;&amp; stk[tt] &gt;= x) tt--;\nif (tt &gt;= 0) printf(\"%d \", stk[tt]);\nelse printf(\"-1 \");\nstk[++tt] = x;\n}\nreturn 0;\n}\n</code></pre> <p>\u6613\u9519\uff1awhile (tt &amp;&amp; stk[tt] &gt;= x) tt--;</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_15","title":"\u5355\u8c03\u961f\u5217","text":"<p>\u9898\u578b\u4e0d\u591a\uff0c\u6700\u5e38\u89c1\u7684\u662f\u6ed1\u52a8\u7a97\u53e3\uff0c\u7a97\u53e3\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u3002</p> <p>\u7c7b\u4f3c\u53cc\u6307\u9488\u7684\u505a\u6cd5\uff0c\u5148\u60f3\u66b4\u529b\u505a\u6cd5\uff0c\u7136\u540e\u6316\u6398\u6027\u8d28\u7b80\u5316\u95ee\u9898</p> <p>\u82e5 \\(a_i \\ge a_j\\) \u4e14 \\(i &lt; j\\)\uff0c\u5219\u53ef\u4ee5\u5220\u53bb \\(a_i\\)\u3002</p> <p>\u6545\u6700\u540e\u5269\u4e0b\u7684\u961f\u5217\u662f\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#154","title":"154.\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/156/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 1000010;\nint n, k;\nint a[N], q[N], hh = 0, tt = -1;\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;k);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;a[i]);\nfor (int i = 0; i &lt; n; ++i) {\n// \u5224\u65ad\u961f\u5934\u662f\u5426\u5df2\u7ecf\u6ed1\u51fa\u7a97\u53e3\nif (hh &lt;= tt &amp;&amp; i - k + 1 &gt; q[hh]) hh++;\nwhile (hh &lt;= tt &amp;&amp; a[q[tt]] &gt;= a[i]) tt--;\nq[++tt] = i;\nif (i &gt;= k - 1) printf(\"%d \", a[q[hh]]);\n}\nprintf(\"\\n\");\nhh = 0, tt = -1;\nfor (int i = 0; i &lt; n; ++i) {\n// \u5224\u65ad\u961f\u5934\u662f\u5426\u5df2\u7ecf\u6ed1\u51fa\u7a97\u53e3\nif (hh &lt;= tt &amp;&amp; i - k + 1 &gt; q[hh]) hh++;\nwhile (hh &lt;= tt &amp;&amp; a[q[tt]] &lt;= a[i]) tt--;\nq[++tt] = i;\nif (i &gt;= k - 1) printf(\"%d \", a[q[hh]]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#kmp","title":"KMP","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#kmp_1","title":"KMP\u7684\u89e3\u9898\u601d\u8def","text":"<ul> <li> <p>\u5148\u60f3\u66b4\u529b\u7b97\u6cd5\u600e\u4e48\u505a</p> </li> <li> <p>\u8bbe \\(S[N]\\) \u662f\u6bd4\u8f83\u957f\u7684\u4e32\uff08\u8981\u5339\u914d\u7684\u4e32\uff09\uff0c\\(P[M]\\) \u662f\u6bd4\u8f83\u77ed\u7684\u4e32\uff08\u6a21\u677f\u4e32\uff09</p> </li> <li> <p>```c++     int s[N], p[M];</p> <p>// KMP\u4e0b\u6807\u4ece1\u5f00\u59cb\uff08y\u603b\u4e2a\u4eba\u4e60\u60ef\uff09 for (int i = 1; i &lt;= n; ++i) {     bool flag = true;     for (int j = 1; j &lt;= m; ++j) {         if (s[i] != p[j]) {             flag = false;             break;         }     } } ```</p> </li> <li> <p>\u518d\u60f3\u5982\u4f55\u53bb\u4f18\u5316</p> </li> <li> <p>\u5047\u8bbe\u73b0\u5728 \\(P\\) \u7684\u8d77\u59cb\u4f4d\u7f6e \\(P[0]\\) \u5728 \\(S\\) \u7684\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e \\(S[i]\\)\uff0c\u4ece \\(i\\) \u5230 \\(i+k\\)\uff0c\\(S\\) \u548c \\(P\\) \u5b8c\u5168\u5339\u914d\uff0c\u4f46 \\(S[i+k+1]\\) \u548c \\(P[k+1]\\) \u4e0d\u5339\u914d\u3002</p> </li> <li>\u5982\u679c\u6309\u7167\u66b4\u529b\u7b97\u6cd5\uff0c\u6211\u4eec\u628a \\(P\\) \u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u4f1a\u6d6a\u8d39\u6389 \\(S[i:i+k+1]\\) \u548c \\(P[0:k+1]\\) \u5b8c\u5168\u5339\u914d\u7684\u4fe1\u606f\u3002</li> <li>\u53cd\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\uff0c\u5c06 \\(P\\) \u5411\u540e\u79fb\u52a8 \u4e2a\u4f4d\u7f6e\uff0c</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#831kmp","title":"831.KMP\u5b57\u7b26\u4e32","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/activity/content/problem/content/869/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010, M = 1000010;\nint n, m;\nchar p[N], s[M];\nint ne[N];\nint main() {\ncin &gt;&gt; n &gt;&gt; p + 1 &gt;&gt; m &gt;&gt; s + 1;\n// \u6c42 next \u8fc7\u7a0b\nfor (int i = 2, j = 0; i &lt;= n; ++i) {\nwhile (j &amp;&amp; p[i] != p[j + 1]) j = ne[j];\nif (p[i] == p[j + 1]) j++;\nne[i] = j;\n}\n// KMP \u5339\u914d\u8fc7\u7a0b\nfor (int i = 1, j = 0; i &lt;= m; ++i) {\nwhile (j &amp;&amp; s[i] != p[j + 1]) j = ne[j];\nif (s[i] == p[j + 1]) j++;\nif (j == n) { // \u5339\u914d\u6210\u529f\nprintf(\"%d \", i - n);\nj = ne[j];\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#trie","title":"Trie \u6811\uff08\u5b57\u5178\u6811\uff09","text":"<p>Trie\uff1a\u9ad8\u6548\u5730\u5b58\u50a8\u548c\u67e5\u627e\u5b57\u7b26\u4e32\u96c6\u5408\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u5b57\u7b26\u4e32\u8981\u4e48\u5168\u662f\u5927\u5199\uff0c\u8981\u4e48\u5168\u662f\u5c0f\u5199\uff0c\u8981\u4e48\u5168\u662f\u6570\u5b57\uff0c\u2026\u2026</p> <p>\u50a8\u5b58\u7684\u65f6\u5019\u5728\u6bcf\u4e2a\u5355\u8bcd\u7ed3\u5c3e\u7684\u5730\u65b9\u505a\u4e00\u4e2a\u6807\u8bb0\uff0c\u8fd9\u6837\u5728\u67e5\u627e\u67d0\u4e00\u4e2a\u5355\u8bcd\u7684\u65f6\u5019\uff0c\u65e2\u8981\u6ee1\u8db3\u8fd9\u4e2a\u5355\u8bcd\u5b58\u5728\uff08\u6709\u4e00\u6761\u901a\u8def\uff09\uff0c\u4e5f\u8981\u6ee1\u8db3\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u6709\u6807\u8bb0\u3002</p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#835trie","title":"835.Trie\u5b57\u7b26\u4e32\u7edf\u8ba1","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/837/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\n// son \u8868\u793a\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08\u6700\u591a26\u4e2a\uff09\n// cnt \u8868\u793a\u4ee5\u5f53\u524d\u8282\u70b9\u7ed3\u5c3e\u7684\u5355\u8bcd\u6709\u591a\u5c11\u4e2a\n// idx \u8868\u793a\u5f53\u524d\u7528\u5230\u4e86\u54ea\u4e2a\u4e0b\u6807\uff08\u4e0e\u5355\u94fe\u8868\u76f8\u540c\uff09\nint son[N][26], cnt[N], idx; // \u4e0b\u6807\u662f0\u7684\u70b9\uff0c\u65e2\u662f\u6839\u8282\u70b9\uff0c\u53c8\u662f\u7a7a\u8282\u70b9\nchar str[N];\nvoid insert(char str[]) {\nint p = 0;\nfor (int i = 0; str[i]; ++i) { // \u5b57\u7b26\u4e32\u7ed3\u5c3e\u4e3a'\\0'\uff0cstr[i] \u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5230\u8fbe\u7ed3\u5c3e\nint u = str[i] - 'a'; // \u5f53\u524d\u5b50\u8282\u70b9\u7684\u7f16\u53f7\uff08\u6620\u5c04\u52300-25\uff09\nif (!son[p][u]) son[p][u] = ++idx;\np = son[p][u];\n}\ncnt[p]++;\n}\nint query(char str[]) {\nint p = 0;\nfor (int i = 0; str[i]; ++i) {\nint u = str[i] - 'a';\nif (!son[p][u]) return 0;\np = son[p][u];\n}\nreturn cnt[p];\n}\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nwhile (n--) {\nchar op[2];\nscanf(\"%s%s\", op, str);\nif (op[0] == 'I') insert(str);\nelse printf(\"%d\\n\", query(str));\n}\nreturn 0;\n}\n</code></pre> <p>\u6613\u9519\uff1a</p> <pre><code>if (!son[p][u]) return 0;\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#143","title":"143.\u6700\u5927\u5f02\u6216\u5bf9","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/145/</p> <p>\u5206\u6790\uff1a\u6839\u636e\u9898\u76ee \\(1 \\le N \\le 10^5\\)\uff0c\u53ef\u4ee5\u63a8\u7b97\u51fa\u8fd9\u4e2a\u9898\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662f \\(\\mathcal{O}(n\\log n)\\)\u3002</p> <p>y\u603b\u8bf4\u4e00\u9053\u9898\u5148\u7528\u66b4\u529b\u53bb\u5199\uff0c\u7136\u540e\u518d\u8003\u8651\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u53bb\u4f18\u5316\u3002</p> <p>\u66b4\u529b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 100010;\nint a[N];\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;a[i]);\nint res = 0;\nfor (int i = 0; i &lt; n; ++i)\nfor (int j = 0; j &lt; n; ++j)\nres = max(res, a[i] ^ a[j]);\nprintf(\"%d\\n\", res);\nreturn 0;\n}\n</code></pre> <p>\u4f18\u5316\u601d\u8def\uff1a\u904d\u5386 \\(A[i]\\) \u4e0d\u53d8\uff0c\u8003\u8651\u4f18\u5316\u904d\u5386 \\(A[j]\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(10^5\\times 31\\approx 3\\times 10^6\\)</p> <p>\u4f7f\u7528 Trie \u6811\u4f18\u5316\u540e\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 100010, M = 3000000;\nint son[M][2], idx;\nint a[N];\nvoid insert(int x) {\nint p = 0;\nfor (int i = 30; i &gt;= 0; --i) {\nint u = x &gt;&gt; i &amp; 1; // x\u7684\u7b2ci\u4f4d\u662f0\u8fd8\u662f1\nif (!son[p][u]) son[p][u] = ++idx;\np = son[p][u];\n}\n}\nint query(int x) {\nint res = 0, p = 0;\nfor (int i = 30; i &gt;= 0; --i) {\nint u = x &gt;&gt; i &amp; 1; // x\u7684\u7b2ci\u4f4d\u662f0\u8fd8\u662f1\nif (son[p][!u]) {\nres += 1 &lt;&lt; i;\np = son[p][!u];\n} else p = son[p][u];\n}\nreturn res;\n}\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; ++i) {\nscanf(\"%d\", &amp;a[i]);\ninsert(a[i]);\n}\nint res = 0;\nfor (int i = 0; i &lt; n; ++i) res = max(res, query(a[i]));\nprintf(\"%d\\n\", res);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_16","title":"\u5e76\u67e5\u96c6","text":"<p>\u9762\u8bd5\u548c\u6bd4\u8d5b\u5e38\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee3\u7801\u77ed\u4f46\u601d\u8def\u5de7\u5999\u3002</p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_17","title":"\u4f5c\u7528","text":"<p>\u5feb\u901f\u5730\uff08\u4ee5\u8fd1\u4e4e \\(\\mathcal{O}(1)\\) \u7684\u590d\u6742\u5ea6\uff09\u5904\u7406\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li>\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76</li> <li>\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d</li> </ol>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_18","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u4ee5\u6811\u7684\u5f62\u5f0f\u7ef4\u62a4\u6240\u6709\u96c6\u5408\uff08\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u6811\uff09\uff0c\u6bcf\u4e2a\u96c6\u5408\u90fd\u7528\u6811\u6765\u7ef4\u62a4\u3002</p> <p>\u6bcf\u4e2a\u96c6\u5408\u7684\u7f16\u53f7\u4e3a\u5176\u6839\u8282\u70b9\u7684\u7f16\u53f7\u3002\u6bcf\u4e2a\u70b9\u90fd\u5b58\u50a8\u5b83\u7684\u7236\u8282\u70b9 \\(p[x]\\)\u3002</p> <p>\u5f53\u6211\u4eec\u60f3\u6c42\u67d0\u4e2a\u8282\u70b9\u7684\u6240\u5c5e\u96c6\u5408\u65f6\uff0c\u5148\u627e\u5b83\u7684\u7236\u8282\u70b9\uff0c\u7136\u540e\u4e00\u5c42\u4e00\u5c42\u627e\u5230\u6839\u8282\u70b9\u3002</p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_19","title":"\u5982\u4f55\u5224\u65ad\u6811\u6839\uff1f","text":"<pre><code>if (p[x] == x)\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#x","title":"\u5982\u4f55\u6c42 \\(x\\) \u7684\u96c6\u5408\u7f16\u53f7","text":"<pre><code>while (p[x] != x) x = p[x];\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_20","title":"\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u96c6\u5408","text":"<p>\u76f4\u63a5\u628a\u5176\u4e2d\u4e00\u4e2a\u6811\u7684\u6839\u8282\u70b9\u63d2\u5230\u53e6\u4e00\u4e2a\u6811\u7684\u67d0\u4e00\u4e2a\u8282\u70b9</p> <p>\u8bbe \\(p[x]\\) \u662f \\(x\\) \u7684\u96c6\u5408\u7f16\u53f7\uff0c\\(p[y]\\) \u662f \\(y\\) \u7684\u96c6\u5408\u7f16\u53f7\uff0c\u4ee4 \\(p[x]=y\\)</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_21","title":"\u5e76\u67e5\u96c6\u7684\u4f18\u5316\u2014\u2014\u8def\u5f84\u538b\u7f29\uff08\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff09","text":"<p>\u5728\u6c42 \\(x\\) \u7684\u96c6\u5408\u7f16\u53f7\u65f6\uff0c\u628a\u8def\u5f84\u4e0a\u6240\u6709\u5b50\u8282\u70b9\u90fd\u6307\u5411\u6839\u8282\u70b9\u3002</p> <p>\u5e76\u67e5\u96c6\u7528\u8fd9\u4e2a\u4f18\u5316\u540e\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f \\(\\mathcal{O}(1)\\) \u7684\u590d\u6742\u5ea6\u3002</p> <p>\u5e76\u67e5\u96c6\u8fd8\u6709\u4e00\u79cd\u4f18\u5316\u662f\u6309\u79e9\u5408\u5e76\uff0c\u4f46\u4f18\u5316\u6548\u679c\u4e0d\u660e\u663e\uff0c\u6ca1\u4ec0\u4e48\u7528\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_22","title":"\u5173\u952e","text":"<p>\u53ea\u9700\u8981\u8bb0\u4f4f find \u51fd\u6570\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#836","title":"836.\u5408\u5e76\u96c6\u5408","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/838/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint n, m;\nint p[N]; // \u50a8\u5b58\u6bcf\u4e2a\u5143\u7d20\u7684\u7236\u8282\u70b9\nint find(int x) { // \u8fd4\u56de x \u7684\u7956\u5b97\u8282\u70b9\uff08\u4e0d\u662f\u7236\u8282\u70b9\uff09 + \u8def\u5f84\u538b\u7f29\nif (p[x] != x) p[x] = find(p[x]);\nreturn p[x];\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) p[i] = i; // \u6bcf\u4e2a\u5143\u7d20\u81ea\u5df1\u4e00\u4e2a\u96c6\u5408\uff0c\u6839\u8282\u70b9\u4e3a\u81ea\u5df1\nwhile (m--) {\nchar op[2]; // \u5982\u679c\u7528 op \u548c %c \u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u8bfb\u5165\u4e00\u4e9b\u7a7a\u683c\u3001\u56de\u8f66\u6216\u5236\u8868\u7b26\uff0c\u4f46\u5b57\u7b26\u4e32\u4f1a\u5ffd\u7565\u7a7a\u683c\u3001\u56de\u8f66\u548c\u5236\u8868\u7b26\nint a, b;\nscanf(\"%s%d%d\", op, &amp;a, &amp;b);\nif (op[0] == 'M') p[find(a)] = find(b);\nelse {\nif (find(a) == find(b)) printf(\"Yes\\n\");\nelse printf(\"No\\n\");\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#837","title":"837.\u8fde\u901a\u5757\u4e2d\u70b9\u7684\u6570\u91cf","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/839/</p> <p>\u7ef4\u62a4\u4e00\u4e2a cnt \u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u8fde\u901a\u5757\u7684\u8282\u70b9\u6570\u91cf\uff0c\u4f46\u53ea\u4fdd\u8bc1\u6839\u8282\u70b9\u7684 cnt \u6709\u610f\u4e49\u3002</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint p[N], cnt[N]; // \u4f46\u53ea\u4fdd\u8bc1\u6839\u8282\u70b9\u7684 cnt \u6709\u610f\u4e49\uff0c\u4e0d\u80fd\u7528 size \uff01size \u4f1a\u4e0e C++ \u5173\u952e\u5b57\u51b2\u7a81\uff01\nint find(int x) {\nif (p[x] != x) p[x] = find(p[x]);\nreturn p[x];\n}\nint main() {\nint n, m;\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\np[i] = i;\ncnt[i] = 1;\n}\nwhile (m--) {\nchar op[2];\nint a, b;\nscanf(\"%s\", op);\nif (op[0] == 'C') {\nscanf(\"%d%d\", &amp;a, &amp;b);\nint pa = find(a), pb = find(b);\nif (pa != pb) {\np[pa] = pb;\ncnt[pb] += cnt[pa];\n}\n} else if (op[1] == '1') {\nscanf(\"%d%d\", &amp;a, &amp;b);\nif (find(a) == find(b)) printf(\"Yes\\n\");\nelse printf(\"No\\n\");\n} else {\nscanf(\"%d\", &amp;a);\nprintf(\"%d\\n\", cnt[find(a)]);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#240","title":"240.\u98df\u7269\u94fe","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/242/</p> <p>\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u53ea\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e0d\u9700\u8981\u4e24\u4e24\u5224\u65ad\u4e00\u6b21\uff08\\(\\mathcal{O}(n^2)\\)\uff09\u3002</p> <p></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 50010;\nint n, k;\nint p[N], d[N];\nint find(int x) {\nif (p[x] != x) {\nint t = find(p[x]);\nd[x] += d[p[x]]; // \u6839\u636e\u8def\u5f84\u538b\u7f29\uff0c\u5c06x\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u52a0\u4e0ax\u7684\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\np[x] = t; // \u8def\u5f84\u538b\u7f29\n}\nreturn p[x];\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;k);\nfor (int i = 1; i &lt;= n; ++i) p[i] = i;\nint cnt = 0;\nwhile (k--) {\nint t, x, y;\nscanf(\"%d%d%d\", &amp;t, &amp;x, &amp;y);\nif (x &gt; n || y &gt; n) cnt++;\nelse {\nint px = find(x), py = find(y);\nif (t == 1) {\nif (px == py &amp;&amp; (d[x] - d[y]) % 3) cnt++;\nelse if (px != py) {\np[px] = py;\nd[px] = d[y] - d[x];\n}\n} else {\nif (px == py &amp;&amp; (d[x] - d[y] - 1) % 3) cnt++;\nelse if (px != py) {\np[px] = py;\nd[px] = d[y] - d[x] + 1;\n}\n}\n}\n}\nprintf(\"%d\\n\", cnt);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_23","title":"\u5806","text":"<p>STL \u91cc\u7684\u5806\u662f\u4f18\u5148\u961f\u5217\uff08priority_queue\uff09</p> <p>\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5806\uff1f</p> <p>\u5806\uff1a\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5806\u9876\u662f\u6700\u5c0f\u503c\u3002\u9664\u4e86\u6700\u540e\u4e00\u5c42\uff0c\u4e0a\u9762\u6240\u6709\u5c42\u90fd\u662f\u6ee1\u7684\uff0c\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u4ece\u5de6\u5230\u53f3\u6392\u5217\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_24","title":"\u5806\u7684\u5b58\u50a8","text":"<p>\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\uff0c\u4e0b\u6807\u4ece 1 \u5f00\u59cb\u3002</p> <p>\\(x\\) \u7684\u5de6\u513f\u5b50\uff1a\\(2x\\)</p> <p>\\(x\\) \u7684\u53f3\u513f\u5b50\uff1a\\(2x+1\\)</p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_25","title":"\u5806\u7684\u64cd\u4f5c","text":"<ol> <li>\u63d2\u5165\u4e00\u4e2a\u6570</li> <li>\u6c42\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c</li> <li>\u5220\u9664\u6700\u5c0f\u503c</li> <li>\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u5143\u7d20</li> <li>\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u5143\u7d20</li> </ol> <p>STL \u7684\u5806\u53ef\u4ee5\u5b9e\u73b0 1-3\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u5b9e\u73b0 4-5\u3002</p> <p></p> <p>up \u548c down \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(\\mathcal{O}(\\log n)\\)\uff08\u548c\u6811\u7684\u9ad8\u5ea6\u6210\u6b63\u6bd4\uff09</p> <p>4\u30015 \u4e2d\u7684 up \u548c down \u4e0d\u4f1a\u90fd\u6267\u884c\uff0c\u53ea\u4f1a\u6267\u884c\u4e00\u4e2a\uff0c\u8fd9\u6837\u5199\u662f\u4e3a\u4e86\u7b80\u4fbf\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#838","title":"838.\u5806\u6392\u5e8f","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/840/</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 100010;\nint n, m;\nint h[N], idx;\nvoid down(int u) {\nint t = u; // \u4e09\u4e2a\u70b9\u4e2d\u6700\u5c0f\u503c\u7684\u7f16\u53f7\nif (u * 2 &lt;= idx &amp;&amp; h[u * 2] &lt; h[t]) t = u * 2;\nif (u * 2 + 1 &lt;= idx &amp;&amp; h[u * 2 + 1] &lt; h[t]) t = u * 2 + 1;\nif (u != t) {\nswap(h[u], h[t]);\ndown(t);\n}\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) scanf(\"%d\", &amp;h[i]);\nidx = n;\nfor (int i = n / 2; i; --i) down(i); // O(n) \u5efa\u5806\uff08\u9519\u4f4d\u76f8\u51cf\uff09\uff0c\u6700\u540e\u4e00\u5c42\u4e0d\u9700\u8981 down\nwhile (m--) {\nprintf(\"%d \", h[1]);\nh[1] = h[idx];\nidx--;\ndown(1);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#839","title":"839.\u6a21\u62df\u5806","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/841/</p> <p>\u7528 \\(ph[k]\\) \u50a8\u5b58\u7b2c \\(k\\) \u4e2a\u63d2\u5165\u7684\u6570\u5728\u5806\u91cc\u7684\u4e0b\u6807\uff0c\u7528 \\(hp[k]\\) \u50a8\u5b58\u5806\u91cc\u7b2c \\(k\\) \u4e2a\u70b9\u662f\u7b2c\u51e0\u4e2a\u63d2\u5165\u7684\u3002</p> <p>\u5173\u4e8e ph \u548c hp \u7684\u89e3\u91ca\uff1ap \u8868\u793a\u4e0b\u6807 / \u6307\u9488\uff08pointer\uff09\uff0ch \u662f\u5806\uff08heap\uff09\u7684\u9996\u5b57\u6bcd\uff0cph \u8868\u793a\u4ece p \u6620\u5c04\u5230 h\uff0chp \u8868\u793a\u4ece h \u5230 p \u7684\u6620\u5c04\u3002</p> <p></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nconst int N = 100010;\nint h[N], ph[N], hp[N], idx;\n// ph[k] \u8868\u793a\u7b2c k \u4e2a\u63d2\u5165\u7684\u6570\u5728\u5806\u91cc\u7684\u4e0b\u6807\n// hp[k] \u8868\u793a\u5806\u91cc\u7b2c k \u4e2a\u70b9\u662f\u7b2c\u51e0\u4e2a\u63d2\u5165\u7684\nvoid heap_swap(int a, int b) {\nswap(ph[hp[a]], ph[hp[b]]);\nswap(hp[a], hp[b]);\nswap(h[a], h[b]);\n}\nvoid down(int u) {\nint t = u;\nif (u * 2 &lt;= idx &amp;&amp; h[u * 2] &lt; h[t]) t = u * 2;\nif (u * 2 + 1 &lt;= idx &amp;&amp; h[u * 2 + 1] &lt; h[t]) t = u * 2 + 1;\nif (u != t) {\nheap_swap(u, t);\ndown(t);\n}\n}\nvoid up(int u) {\nwhile (u / 2 &amp;&amp; h[u / 2] &gt; h[u]) {\nheap_swap(u / 2, u);\nu /= 2;\n}\n}\nint main() {\nint n, m = 0; // m \u8868\u793a\u7b2c\u51e0\u4e2a\u63d2\u5165\u7684\u6570\nscanf(\"%d\", &amp;n);\nwhile (n--) {\nchar op[5];\nint k, x;\nscanf(\"%s\", op);\nif (!strcmp(op, \"I\")) {\nscanf(\"%d\", &amp;x);\nidx++;\nm++;\nph[m] = idx, hp[idx] = m;\nh[idx] = x;\nup(idx);\n} else if (!strcmp(op, \"PM\")) printf(\"%d\\n\", h[1]);\nelse if (!strcmp(op, \"DM\")) {\nheap_swap(1, idx);\nidx--;\ndown(1);\n} else if (!strcmp(op, \"D\")) {\nscanf(\"%d\", &amp;k);\nk = ph[k];\nheap_swap(k, idx);\nidx--;\ndown(k), up(k);\n} else {\nscanf(\"%d%d\", &amp;k, &amp;x);\nk = ph[k];\nh[k] = x;\ndown(k), up(k);\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_26","title":"\u54c8\u5e0c\u8868","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_27","title":"\u54c8\u5e0c\u8868","text":"<p>\u628a\u4e00\u4e2a\u8f83\u5927\u7684\u7a7a\u95f4\u6620\u5c04\u5230 \\(0\\sim n\\)\uff0c\u4f8b\u5982\u5c06 \\(-10^9 \\sim 10^9 \\rightarrow 0\\sim 10^5\\)\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_28","title":"\u54c8\u5e0c\u51fd\u6570","text":"<p>\\(\\exist \\ h(x)\\)\uff0c\\(\\text{s.t.} \\ \\forall \\ x \\in [-10^9,10^9]\\)\uff0c\\(h(x) \\in [0, 10^5]\\)\uff0c\u5219\u79f0 \\(h(x)\\) \u4e3a\u54c8\u5e0c\u51fd\u6570\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_29","title":"\u54c8\u5e0c\u51fd\u6570\u7684\u5e38\u7528\u5f62\u5f0f","text":"<ul> <li>mod</li> </ul> <p>\\(x \\ \\text{mod} \\ 10^5 \\in [0, 10^5)\\)\uff0c\u53d6\u6a21\u7684\u6570\u6700\u597d\u53d6\u8d28\u6570\uff0c\u5e76\u4e14\u8be5\u8d28\u6570\u6700\u597d\u79bb 2 \u7684\u6574\u6570\u6b21\u5e42\u6bd4\u8f83\u8fdc\uff08\u8fd9\u6837\u53d6\u51b2\u7a81\u7684\u6982\u7387\u6700\u5c0f\uff09\u3002</p> <ul> <li>\u51b2\u7a81\uff08\u82e5\u5e72\u4e0d\u540c\u6570\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u6570\uff09</li> </ul> <p>\u6309\u7167\u51b2\u7a81\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u54c8\u5e0c\u8868\u5206\u4e3a\u5f00\u653e\u5bfb\u5740\u6cd5\u548c\u62c9\u94fe\u6cd5\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_30","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u54c8\u5e0c\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u4f5c\u662f \\(\\mathcal{O}(1)\\)\uff0c\u6bd4\u5982\u62c9\u94fe\u6cd5\u867d\u7136\u6bcf\u4e2a\u54c8\u5e0c\u503c\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u6570\uff0c\u4f46\u6240\u6709\u54c8\u5e0c\u503c\u5e73\u5747\u4e0b\u6765\u53ef\u4ee5\u628a\u6bcf\u6761\u94fe\uff08\u5355\u94fe\u8868\uff09\u770b\u4f5c\u662f\u5e38\u6570\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_31","title":"\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>\u5f00\u653e\u5bfb\u5740\u6cd5\uff08y\u603b\u559c\u6b22\u7528\uff09</li> <li>\u62c9\u94fe\u6cd5\uff08\u7b80\u5355\uff09</li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_32","title":"\u62c9\u94fe\u6cd5","text":"<p>\u5f00\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6765\u5b58\u50a8\u6240\u6709\u7684\u54c8\u5e0c\u503c\uff0c\u4e0b\u6807\u4ece \\(0\\) \u5230 \\(10^5-1\\)\uff0c\u5982\u679c \\(h(11)=3,\\ h(23)=3\\)\uff0c\u5219\u5728 \\(3\\) \u5bf9\u5e94\u7684\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u6761\u94fe\uff08\u5355\u94fe\u8868\uff09\uff0c\u50a8\u5b58 \\(11\\) \u548c \\(23\\)\u3002</p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#840","title":"840.\u6a21\u62df\u6563\u5217\u8868","text":"<p>\u94fe\u63a5\uff1ahttps://www.acwing.com/problem/content/842/</p> <p>\u6ce8\uff1a\u5728\u7b97\u6cd5\u9898\u4e2d\uff0c\u4e00\u822c\u53ea\u6709\u6dfb\u52a0\u548c\u67e5\u627e\u64cd\u4f5c\uff0c\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\u3002\u5982\u679c\u4e00\u5b9a\u8981\u5b9e\u73b0\u5220\u9664\uff0c\u4e5f\u4e0d\u9700\u8981\u771f\u6b63\u5220\u9664\uff0c\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a bool \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u6807\u8bb0\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_33","title":"\u62c9\u94fe\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nconst int N = 100003; // \u5927\u4e8e 100000 \u7684\u7b2c\u4e00\u4e2a\u8d28\u6570\nint h[N], e[N], ne[N], idx; // h \u50a8\u5b58\u7684\u662f\u6bcf\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9\nvoid insert(int x) {\nint k = (x % N + N) % N; // k \u662f\u54c8\u5e0c\u503c\uff0c\u5728 C++ \u4e2d\uff0c\u8d1f\u6570\u7684\u6a21\u662f\u8d1f\u6570\uff0c\u56e0\u6b64\u52a0\u4e0a N \u4e4b\u540e\u518d\u6a21 N \u53ef\u4ee5\u4fdd\u8bc1\u6a21\u4e00\u5b9a\u662f\u6b63\u6570\u3002\ne[idx] = x;\nne[idx] = h[k];\nh[k] = idx++;\n}\nbool find(int x) {\nint k = (x % N + N) % N;\nfor (int i = h[k]; i != -1; i = ne[i])\nif (e[i] == x)\nreturn true;\nreturn false;\n}\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nmemset(h, -1, sizeof h); // \u628a\u6240\u6709\u7684\u69fd\u6e05\u7a7a\uff0c-1 \u8868\u793a\u7a7a\u6307\u9488\nwhile (n--) {\nchar op[2];\nint x;\nscanf(\"%s%d\", op, &amp;x);\nif (op[0] == 'I') insert(x);\nelse {\nif (find(x)) printf(\"Yes\\n\");\nelse printf(\"No\\n\");\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_34","title":"\u5f00\u653e\u5bfb\u5740\u6cd5","text":"<p>\u53ea\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e0d\u9700\u8981\u5f00\u94fe\u8868\u3002</p> <p>\u6570\u7ec4\u957f\u5ea6\u9700\u8981\u5f00\u5230\u9898\u76ee\u6570\u636e\u8303\u56f4\u7684 \\(2\\sim 3\\) \u500d\uff0c\u5982\u9898\u76ee\u4e2d \\(1 \\le N \\le 10^5\\)\uff0c\u5219\u6570\u7ec4\u9700\u8981\u5f00\u5230 \\(2\\times 10^5 \\sim 3\\times 10^5\\)\uff0c\u53ef\u4ee5\u627e\u5927\u4e8e \\(2\\times 10^5\\) \u7684\u6700\u5c0f\u7684\u8d28\u6570\u3002</p> <p>\u6dfb\u52a0\uff1a\u8bbe \\(h(x)=k\\)\uff0c\u5148\u770b\u7b2c \\(k\\) \u4e2a\u4f4d\u7f6e\u662f\u5426\u6709\u503c\uff0c\u5982\u679c\u6709\u503c\u5219\u53bb\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u7a7a\u4f4d\u5b58\u50a8\u3002</p> <p>\u67e5\u627e\uff1a\u8bbe \\(h(x)=k\\)\uff0c\u4ece\u7b2c \\(k\\) \u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5411\u540e\u67e5\u627e\uff0c\u770b\u8be5\u4f4d\u7f6e\u662f\u5426\u6709\u503c\u3001\u662f\u5426\u7b49\u4e8e \\(x\\)\uff0c\u5982\u679c\u6709\u503c\u4e14\u4e0d\u7b49\u4e8e \\(x\\)\uff0c\u5219\u53bb\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7ee7\u7eed\u67e5\u627e\uff1b\u5982\u679c\u6ca1\u6709\u503c\u5219 \\(x\\) \u4e0d\u5b58\u5728\u3002</p> <p>\u5220\u9664\uff1a\u6309\u7167\u67e5\u627e\u7684\u65b9\u5f0f\u627e \\(x\\)\uff0c\u7136\u540e\u7528 bool \u6570\u7ec4\u6807\u8bb0 \\(x\\)\u3002</p> <p>\u6838\u5fc3\uff1afind \u51fd\u6570\uff08\u8e72\u5751\u6cd5\uff09</p> <p>\u5982\u679c \\(x\\) \u5728\u54c8\u5e0c\u8868\u4e2d\u5b58\u5728\u7684\u8bdd\uff0cfind \u51fd\u6570\u4f1a\u8fd4\u56de\u5b83\u5b58\u50a8\u7684\u4f4d\u7f6e\uff1b</p> <p>\u5982\u679c \\(x\\) \u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u5219\u4f1a\u8fd4\u56de\u5b83\u5e94\u8be5\u5b58\u50a8\u7684\u4f4d\u7f6e\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\nconst int N = 200003, flag = 0x3f3f3f3f; // 100000 \u7684 2-3 \u500d\uff0c\u4e14\u662f\u8d28\u6570\uff1b0x3f3f3f3f \u5927\u4e8e 10^9\nint h[N]; // h \u50a8\u5b58\u7684\u662f\u6bcf\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9\nint find(int x) {\nint k = (x % N + N) % N;\nwhile(h[k] != flag &amp;&amp; h[k] != x) {\nk++;\nif (k == N) k = 0;\n}\nreturn k;\n}\nint main() {\nint n;\nscanf(\"%d\", &amp;n);\nmemset(h, 0x3f, sizeof h); // \u628a\u6240\u6709\u7684\u69fd\u6e05\u7a7a\uff0c-1 \u8868\u793a\u7a7a\u6307\u9488\nwhile (n--) {\nchar op[2];\nint x;\nscanf(\"%s%d\", op, &amp;x);\nint k = find(x);\nif (op[0] == 'I') h[k] = x;\nelse {\nif (h[k] != flag) printf(\"Yes\\n\");\nelse printf(\"No\\n\");\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_35","title":"\u5b57\u7b26\u4e32\u54c8\u5e0c\u65b9\u5f0f","text":"<p>\u5b57\u7b26\u4e32\u524d\u7f00\u54c8\u5e0c\u6cd5</p> <ol> <li> <p>\u5c06\u5b57\u7b26\u4e32\u770b\u6210 p \u8fdb\u5236\u7684\u6570</p> </li> <li> <p>\u5c06 p \u8fdb\u5236\u6570\u8f6c\u5316\u6210 10 \u8fdb\u5236\u6570\uff0c\u4f8b\u5982 \"ABCD\" \u53ef\u4ee5\u770b\u4f5c \\((1234)_p\\)    $$    res = 1 \\times p^3 + 2 \\times p^2 + 3 \\times p^1 + 4 \\times p^0    $$</p> </li> <li> <p>\u5c06\u7ed3\u679c mod Q\uff08\u7ed3\u679c\u53ef\u80fd\u6bd4\u8f83\u5927\uff09\uff0c\u5c06\u5b57\u7b26\u4e32\u6620\u5c04\u5230 \\([0, Q-1]\\)</p> </li> </ol> <p>\u6ce8\uff1a</p> <ol> <li> <p>\u4e0d\u80fd\u5c06\u67d0\u4e00\u5b57\u7b26\u7ecf\u8fc7 hash \u540e\u6620\u5c04\u6210 0\uff0c\u5982 \\(hash(A) = 0\\)\uff0c\u5219 \\(hash(AA)=0\\)\uff0c\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002</p> </li> <li> <p>\u5047\u8bbe\u4eba\u54c1\u8db3\u591f\u597d\uff0c\u4e0d\u5b58\u5728\u51b2\u7a81\uff0c\u6709\u4e00\u7ec4\u7ecf\u9a8c\u503c\uff0899.99% \u7684\u60c5\u51b5\u4e0b\u90fd\u6ca1\u95ee\u9898\uff09    $$    \\begin{aligned}    &amp; p = 131 &amp; Q = 2^{64} \\    \\text{or} \\quad &amp; p = 13331 &amp; Q = 2^{64}    \\end{aligned}    $$</p> </li> </ol> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_36","title":"\u8fd9\u6837\u7684\u54c8\u5e0c\u65b9\u5f0f + \u524d\u7f00\u54c8\u5e0c\u6709\u4f55\u597d\u5904\uff1f","text":"<p>\u597d\u5904\u662f\u53ef\u4ee5\u5229\u7528\u524d\u7f00\u54c8\u5e0c\u7b97\u51fa\u6240\u6709\u5b50\u4e32\u7684\u54c8\u5e0c\u503c</p> <p>\u5982\u5df2\u77e5 \\(h[L-1]\\) \u548c \\(h[R]\\)\uff0c\u6c42 \\(h[L,R]\\)</p> <p></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 100010;\nint main() {\nscanf(\"%d\", &amp;n);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#0102","title":"01:02","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#stl","title":"STL","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#vector","title":"vector","text":"<p>\u53d8\u957f\u6570\u7ec4\uff0c\u6570\u7ec4\u957f\u5ea6\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\uff0c\u500d\u589e\u7684\u601d\u60f3\uff08\u7cfb\u7edf\u4e3a\u67d0\u4e00\u7a0b\u5e8f\u5206\u914d\u7a7a\u95f4\u7684\u6240\u9700\u65f6\u95f4\u4e0e\u7a7a\u95f4\u5927\u5c0f\u65e0\u5173\uff0c\u4e0e\u7533\u8bf7\u6b21\u6570\u6709\u5173\uff09\u3002</p> <p>\u5934\u6587\u4ef6\uff1a <p>\u521d\u59cb\u5316</p> <pre><code>vector&lt;int&gt; a; // \u5b9a\u4e49\u4e00\u4e2a vector\nvector&lt;int&gt; a(10); // \u5b9a\u4e49\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684 vector\nvector&lt;int&gt; a(10, 3); // \u5b9a\u4e49\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684 vector\uff0c\u4e14\u5c06\u6bcf\u4e2a\u5143\u7d20\u90fd\u521d\u59cb\u5316\u4e3a 3\nvector&lt;int&gt; a[10]; // \u5b9a\u4e49\u4e00\u4e2a vector \u6570\u7ec4\n</code></pre> <p>\u65b9\u6cd5</p> <pre><code>a.size(); // \u8fd4\u56de vector \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0cO(1)\uff0c\u6240\u6709 STL \u5bb9\u5668\u90fd\u6709\na.empty(); // \u8fd4\u56de a \u662f\u5426\u4e3a\u7a7a\uff0cO(1)\uff0c\u6240\u6709 STL \u5bb9\u5668\u90fd\u6709\na.clear(); // \u6e05\u7a7a a\na.front(), a.back(); // \u8fd4\u56de a \u7684\u7b2c\u4e00\u4e2a\u6570 / \u6700\u540e\u4e00\u4e2a\u6570\na.push_back(x), a.pop_back(); // \u5411 a \u7684\u6700\u540e\u6dfb\u52a0 x / \u5220\u9664 a \u7684\u6700\u540e\u4e00\u4e2a\u6570\na.begin(), a.end(); // vector \u7684\u8fed\u4ee3\u5668\uff08\u53ef\u4ee5\u770b\u4f5c\u6307\u9488\uff09\uff0c\u5206\u522b\u4e3a vector \u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u6700\u540e\u4e00\u4e2a\u6570\u7684\u540e\u9762\u4e00\u4e2a\u6570\na[i]; // vector \u652f\u6301\u968f\u673a\u5bfb\u5740\n// \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u6309\u5b57\u5178\u5e8f\n</code></pre> <p>\u4f8b\u5b50</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() {\nvector&lt;int&gt; a;\nfor (int i = 0; i &lt; 10; ++i) a.push_back(i);\nfor (int i = 0; i &lt; a.size(); ++i) cout &lt;&lt; a[i] &lt;&lt; ' ';\ncout &lt;&lt; endl;\nfor (vector&lt;int&gt;::iterator i = a.begin(); i != a.end(); ++i) cout &lt;&lt; *i &lt;&lt; ' ';\ncout &lt;&lt; endl;\nfor (auto i = a.begin(); i != a.end(); ++i) cout &lt;&lt; *i &lt;&lt; ' ';\ncout &lt;&lt; endl;\nfor (auto x : a) cout &lt;&lt; x &lt;&lt; ' ';\ncout &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>vector \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff08\u6309\u5b57\u5178\u5e8f\uff09</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() {\nvector&lt;int&gt; a(4, 3), b(3, 4);\nif (a &lt; b) printf(\"a &lt; b\");\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#pair","title":"pair","text":"<p>pair \u548c\u7ed3\u6784\u4f53\u7684\u533a\u522b\uff1a</p> <ul> <li>pair \u81ea\u52a8\u5b9e\u73b0\u4e86\u4e8c\u5143\u7ed3\u6784\u4f53\uff08\u7701\u4ee3\u7801\uff09</li> <li>\u81ea\u5e26\u6bd4\u8f83\u51fd\u6570</li> </ul> <p>\u50a8\u5b58\u4e8c\u5143\u7ec4</p> <pre><code>pair&lt;int, string&gt; p; // \u5b9a\u4e49\u4e00\u4e2a pair\np = make_pair(10, \"yxc\");\n// \u6216\np = {20, \"abc\"};\n</code></pre> <p>\u50a8\u5b58\u4e09\u5143\u7ec4</p> <pre><code>pair&lt;int, pair&lt;int, int&gt;&gt; p;\n</code></pre> <p>\u65b9\u6cd5</p> <pre><code>p.first; // \u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\np.second; // \u53d6\u7b2c\u4e8c\u4e2a\u5143\u7d20\n// \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4ee5 first \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5 second \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff08\u5b57\u5178\u5e8f\uff09\n</code></pre> <p>pair \u6bd4\u8f83\u5927\u5c0f</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() {\npair&lt;int, string&gt; p;\nif (a &lt; b) printf(\"a &lt; b\");\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#string","title":"string","text":"<p>\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7528\u4f5c\u6808</p> <p>\u5934\u6587\u4ef6\uff1a <pre><code>string a; // \u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\nstring a = \"yxc\"; // \u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a yxc\na += \"def\"; // \u5728 a \u7684\u540e\u9762\u52a0\u4e0a def\n</code></pre> <p>\u65b9\u6cd5</p> <pre><code>a.size(), a.length(); // \u8fd4\u56de a \u7684\u957f\u5ea6\uff0c\u4e24\u4e2a\u51fd\u6570\u4f5c\u7528\u76f8\u540c\na.empty(); // \u8fd4\u56de a \u662f\u5426\u4e3a\u7a7a\na.clear(); // \u6e05\u7a7a a\na.substr(1); // \u8fd4\u56de a \u4ece\u4e0b\u6807 1 \u5f00\u59cb\u7684\u5b50\u4e32\na.substr(1, 2); // \u8fd4\u56de a \u4ece\u4e0b\u6807 1 \u5f00\u59cb\u957f\u5ea6\u4e3a 2 \u7684\u5b50\u4e32\na.substr(1, 10); // \u8fd4\u56de a \u4ece\u4e0b\u6807 1 \u5f00\u59cb\u957f\u5ea6\u4e3a 10 \u7684\u5b50\u4e32\uff08\u5982\u679c\u8d85\u51fa a \u7684\u7ed3\u5c3e\u5219\u53ea\u8fd4\u56de\u5230 a \u7684\u7ed3\u5c3e\uff09\na.c_str(); // \u8fd4\u56de\u5b57\u7b26\u4e32 a \u5b58\u50a8\u5b57\u7b26\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\uff0c\u7528\u6cd5\u5982\u4e0b\nprintf(\"%s\\n\", a.c_str());\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#queue","title":"queue","text":"<p>\u961f\u5217</p> <p>\u5934\u6587\u4ef6\uff1a <pre><code>queue&lt;int&gt; q;\nq.size(); // \u8fd4\u56de\u961f\u5217\u5927\u5c0f\nq.empty(); // \u8fd4\u56de\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nq.push(x); // \u5411\u961f\u5c3e\u63d2\u5165 x\nq.front(); // \u8fd4\u56de\u961f\u5934\u5143\u7d20\nq.back(); // \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\nq.pop(); // \u5f39\u51fa\u961f\u5934\u5143\u7d20\n</code></pre> <p>queue, priority_queue \u548c stack \u90fd\u6ca1\u6709 clear \u51fd\u6570\uff0c\u5982\u679c\u60f3\u6e05\u7a7a\uff0c\u76f4\u63a5\u91cd\u65b0\u65b0\u5efa\u4e00\u4e2a\u5c31\u884c\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#priority_queue","title":"priority_queue","text":"<p>\u4f18\u5148\u961f\u5217\uff08\u5806\uff09\uff0c\u9ed8\u8ba4\u662f\u5927\u6839\u5806</p> <p>\u5934\u6587\u4ef6\uff1a <pre><code>priority_queue&lt;int&gt; heap;\nheap.size();\nheap.empty();\nheap.push(x); // \u63d2\u5165\u4e00\u4e2a\u5143\u7d20\nheap.top(); // \u8fd4\u56de\u5806\u9876\u5143\u7d20\nheap.pop(); // \u5f39\u51fa\u5806\u9876\u5143\u7d20\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_37","title":"\u5982\u4f55\u5b9a\u4e49\u5c0f\u6839\u5806\uff1f","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_38","title":"\u65b9\u6cd5\u4e00","text":"<p>\u63d2\u5165 \\(-x\\)\uff0c\u5219\u53ef\u4ee5\u53d8\u6210\u5c0f\u6839\u5806\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_39","title":"\u65b9\u6cd5\u4e8c","text":"<pre><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; heap;\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#stack","title":"stack","text":"<p>\u6808</p> <p>\u5934\u6587\u4ef6\uff1a <pre><code>stack&lt;int&gt; stk;\nstk.size();\nstk.empty();\nstk.push(x); // \u5411\u6808\u9876\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\nstk.top(); // \u8fd4\u56de\u6808\u9876\u5143\u7d20\nstk.pop(); // \u5f39\u51fa\u6808\u9876\u5143\u7d20\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#deque","title":"deque","text":"<p>\u53cc\u7aef\u961f\u5217\uff0c\u662f\u52a0\u5f3a\u7248\u7684 vector\uff0c\u65b9\u6cd5\u591a\u4f46\u901f\u5ea6\u4f1a\u6162\u4e00\u4e9b\uff08\u6bd4\u4e00\u822c\u7684\u6570\u7ec4\u6162\u597d\u51e0\u500d\uff09</p> <p>\u5934\u6587\u4ef6\uff1a <pre><code>deque&lt;int&gt; q;\nq.size();\nq.empty();\nq.clear();\nq.front(), q.back();\nq.push_back(), q.pop_back();\nq.push_front(), q.pop_front();\n// []\uff0c\u652f\u6301\u968f\u673a\u5bfb\u5740\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#set-map-multiset-multimap","title":"set, map, multiset, multimap","text":"<p>\u57fa\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811\uff08\u7ea2\u9ed1\u6811\uff09\u5b9e\u73b0\uff0c\u52a8\u6001\u7ef4\u62a4\u6709\u5e8f\u5e8f\u5217\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#set-multiset","title":"set, multiset","text":"<p>set \u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20\uff08\u91cd\u590d\u4f1a\u88ab\u5ffd\u7565\uff09\uff0cmultiset \u4e2d\u53ef\u4ee5\u6709\u91cd\u590d\u5143\u7d20</p> <p>\u5934\u6587\u4ef6\uff1a <p>\u9664 size(), empty() \u548c clear() \u662f \\(\\mathcal{O}(1)\\) \u5916\uff0cset \u5176\u4ed6\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(\\mathcal{O}(\\log n)\\)\u3002</p> <p>set, multiset \u6700\u6838\u5fc3\u7684\u64cd\u4f5c\u662f lower_bound() \u548c upper_bound()\uff08\u6700\u5c0f\u4e0a\u754c\u548c\u6700\u5927\u4e0b\u754c\uff09</p> <pre><code>set&lt;int&gt; s;\nmultiset&lt;int&gt; ms;\ns.size(), ms.size();\ns.empty(), ms.empty();\ns.clear(), ms.clear();\ns.begin(), ms.begin(); // \u652f\u6301 ++ -- \u64cd\u4f5c\uff0c\u8fd4\u56de\u524d\u9a71 O(logn)\ns.end(), ms.end(); // \u652f\u6301 ++ -- \u64cd\u4f5c\uff0c\u8fd4\u56de\u540e\u7ee7 O(logn)\ns.insert(x), ms.insert(x); // \u63d2\u5165 x\ns.find(x), ms.find(x); // \u67e5\u627e x\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de end \u8fed\u4ee3\u5668\ns.count(x), ms.count(x); // \u8fd4\u56de set \u4e2d x \u7684\u4e2a\u6570\uff080, 1\uff09\ns.erase(), ms.erase(); // \u82e5\u8f93\u5165\u662f\u4e00\u4e2a\u6570 x\uff0c\u5219\u5220\u9664\u6240\u6709 x\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(k + logn)\uff0ck \u4e3a x \u7684\u4e2a\u6570\uff1b\u82e5\u8f93\u5165\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5219\u5220\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\uff08multiset\uff09\ns.lower_bound(x), ms.lower_bound(x); // \u8fd4\u56de\u5927\u4e8e\u7b49\u4e8e x \u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8fd4\u56de end\ns.upper_bound(x), ms.upper_bound(x); // \u8fd4\u56de\u5927\u4e8e x \u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8fd4\u56de end\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#map-multimap","title":"map, multimap","text":"<p>\u5934\u6587\u4ef6\uff1a <p>\u9664 size(), empty() \u548c clear() \u662f \\(\\mathcal{O}(1)\\) \u5916\uff0cmap \u5176\u4ed6\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(\\mathcal{O}(\\log n)\\)\u3002</p> <pre><code>map&lt;string, int&gt; mp;\nmp.size();\nmp.empty();\nmp.clear();\nmp.begin(), mp.end(); // \u652f\u6301 ++ -- \u64cd\u4f5c\uff0c\u8fd4\u56de\u524d\u9a71\u548c\u540e\u7ee7 O(logn)\nmp.insert(x); // \u7528\u7684\u4e0d\u591a\uff0c\u63d2\u5165\u7684\u6570\u662f\u4e00\u4e2a pair\nmp.erase(x); // \u7528\u7684\u8f83\u591a\uff0c\u8f93\u5165\u7684\u53c2\u6570\u662f pair \u6216\u8fed\u4ee3\u5668\nmp.find(x);\nmp.lower_bound(x), mp.upper_bound(x);\n// [] \u53ef\u4ee5\u50cf\u6570\u7ec4\u4e00\u6837\u4f7f\u7528 map\uff0c\u4f46\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn)\n</code></pre> <p>\u4f8b\u5b50</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nint main() {\nmap&lt;string, int&gt; mp;\nmp[\"yxc\"] = 1;\ncout &lt;&lt; mp[\"yxc\"] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#unordered_set-unordered_map-unordered_multiset-unordered_multimap","title":"unordered_set, unordered_map, unordered_multiset, unordered_multimap","text":"<p>\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u589e\u5220\u6539\u67e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\mathcal{O}(1)\\)</p> <p>\u4e0d\u652f\u6301 <code>lower_bound()</code> \u548c <code>upper_bound()</code> \u51fd\u6570\uff0c\u4e5f\u4e0d\u652f\u6301\u8fed\u4ee3\u5668 <code>++</code> \u548c <code>--</code>\uff08\u6240\u6709\u6392\u5e8f\u7684\u64cd\u4f5c\u90fd\u4e0d\u652f\u6301\uff09\u3002</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#unordered_set-unordered_multiset","title":"unordered_set, unordered_multiset","text":"<p>\u5934\u6587\u4ef6\uff1a"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#unordered_map-unordered_multimap","title":"unordered_map, unordered_multimap","text":"<p>\u5934\u6587\u4ef6\uff1a"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#bitset","title":"bitset","text":"<p>\u538b\u4f4d</p> <p>bool </p> <p>\u4f8b\u5982\u50a8\u5b58 \\(10000 \\times 10000\\) \u7684 bool \u77e9\u9635\uff0c\u6b63\u5e38\u50a8\u5b58\u9700\u8981 \\(10^8 \\approx 100 \\text{MB}\\) \u7a7a\u95f4\uff0c\u82e5\u4f7f\u7528 bitset\uff0c\u53ea\u9700\u8981 \\(1/8\\) \u7684\u7a7a\u95f4\uff08\\(12 \\text{MB}\\)\uff09\u3002</p> <pre><code>bitset&lt;10000&gt; s; // \u5b9a\u4e49\u957f\u5ea6\u4e3a 10000 \u7684 bitset\n~, &amp;, |, ^; // \u53ef\u4ee5\u5c06 bitset \u770b\u4f5c\u4e00\u4e2a\u6574\u6570\uff0c\u652f\u6301\u4f4d\u8fd0\u7b97\n&gt;&gt;, &lt;&lt;;\n==, !=;\n// []\uff0c\u652f\u6301\u53d6\u51fa\u6765\u67d0\u4e00\u4f4d\ns.count(); // \u8fd4\u56de bitset \u4e2d\u6709\u591a\u5c11\u4e2a 1\ns.any(); // \u8fd4\u56de\u662f\u5426\u81f3\u5c11\u6709\u4e00\u4e2a 1\ns.none(); // \u8fd4\u56de\u662f\u5426\u5168\u4e3a 0\ns.set(); // \u628a\u6240\u6709\u4f4d\u7f6e\u4e3a 1\ns.set(k, v); // \u628a\u7b2c k \u4f4d\u53d8\u6210 v\ns.reset(); // \u628a\u6240\u6709\u4f4d\u7f6e\u4e3a 0\ns.flip(); // \u7b49\u4ef7\u4e8e ~\ns.flip(k); // \u628a\u7b2c k \u4f4d\u53d6\u53cd\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u7b2c\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212","text":"<ul> <li>\u7b2c\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212<ul> <li>\u7b2c\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212\uff08\u4e00\uff09<ul> <li>0-1\u80cc\u5305\u95ee\u9898<ul> <li>\u6734\u7d20\u5199\u6cd5</li> </ul> </li> <li>\u5b8c\u5168\u80cc\u5305\u95ee\u9898<ul> <li>\u6734\u7d20\u5199\u6cd5</li> <li>\u4f18\u5316\u5199\u6cd5</li> </ul> </li> <li>\u591a\u91cd\u80cc\u5305\u95ee\u9898<ul> <li>\u6734\u7d20\u5199\u6cd5</li> <li>\u4f18\u5316\u5199\u6cd5</li> </ul> </li> <li>\u5206\u7ec4\u80cc\u5305\u95ee\u9898</li> </ul> </li> </ul> </li> </ul>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_1","title":"\u7b2c\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212","text":"<ul> <li>\u5e38\u7528\u6a21\u578b\uff1a\u80cc\u5305\u95ee\u9898\u7b49</li> <li>\u7ebf\u6027DP\u7b49</li> </ul> <p>\u52a8\u6001\u89c4\u5212\u6ca1\u6709\u6a21\u677f\uff0c\u4ee3\u7801\u5b9e\u73b0\u90fd\u662ffor\u5faa\u73af\uff0c\u6bd4\u8f83\u50cf\u6570\u5b66</p> <p>\u6838\u5fc3\uff1a\u72b6\u6001\u7684\u8868\u793a\u3001\u72b6\u6001\u7684\u8f6c\u79fb</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_2","title":"\u7b2c\u4e94\u7ae0 \u52a8\u6001\u89c4\u5212\uff08\u4e00\uff09","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#0-1","title":"0-1\u80cc\u5305\u95ee\u9898","text":"<p>\u6bcf\u4ef6\u7269\u54c1\u53ea\u80fd\u75281\u6b21\u62160\u6b21\uff080-1\u80cc\u5305\uff09</p> <p>\u4f7f\u5f97\u603b\u4f53\u79ef \\(\\le V\\)\uff0c\u5e76\u6700\u5927\u5316\u603b\u4ef7\u503c\uff0c\u4e0d\u4e00\u5b9a\u8981\u88c5\u6ee1\u80cc\u5305</p> <p>Dp</p> <ul> <li>\u72b6\u6001\u8868\u793a\uff1a\\(f(i,j)\\) \u8868\u793a\u6ee1\u8db3 \u2460 \u2461 \u4e24\u4e2a\u6761\u4ef6\u7684\u6240\u6709\u9009\u6cd5\u7684\u96c6\u5408\u4e2d\u7684\u6700\u5927\u4ef7\u503c</li> <li>\u96c6\u5408<ul> <li>\u6240\u6709\u9009\u6cd5</li> <li>\u6761\u4ef6</li> <li>\u2460 \u53ea\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u4e2d\u9009</li> <li>\u2461 \u9009\u51fa\u6765\u7269\u54c1\u7684\u603b\u4f53\u79ef \\(\\le j\\)</li> </ul> </li> <li>\u5c5e\u6027\uff1a\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u6570\u91cf</li> <li>\u72b6\u6001\u8ba1\u7b97\uff1a\u96c6\u5408\u7684\u5212\u5206\uff08\u539f\u5219\uff1a\u4e0d\u91cd\u4e0d\u6f0f\uff09</li> </ul> \\[ f(i,j) = \\max(f(i-1, j), \\ f(i-1, j-v_i) + w_i) \\] <p></p> <p></p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_3","title":"\u6734\u7d20\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m;\nint v[N], w[N];\nint f[N][N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\nscanf(\"%d%d\", &amp;v[i], &amp;w[i]);\n}\nfor (int i = 1; i &lt;= n; ++i) {\nfor (int j = 1; j &lt;= m; ++j) {\nf[i][j] = f[i - 1][j];\nif (j &gt;= v[i]) f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]);\n}\n}\nprintf(\"%d\\n\", f[n][m]);\nreturn 0;\n}\n</code></pre> <p>\u4f18\u5316\u5199\u6cd5</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_4","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>\u6bcf\u4ef6\u7269\u54c1\u53ef\u4ee5\u7528\u65e0\u9650\u6b21</p> <p> $$ f(i,j) = \\max_{k=0...} (f(i-1, j-v_ik) + w_ik) $$ </p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_5","title":"\u6734\u7d20\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m;\nint v[N], w[N];\nint f[N][N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\nscanf(\"%d%d\", &amp;v[i], &amp;w[i]);\n}\nfor (int i = 1; i &lt;= n; ++i) {\nfor (int j = 1; j &lt;= m; ++j) {\nfor (int k = 0; v[i] * k &lt;= j; ++k) {\nf[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n}\n}\n}\nprintf(\"%d\\n\", f[n][m]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_6","title":"\u4f18\u5316\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m;\nint v[N], w[N];\nint f[N][N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\nscanf(\"%d%d\", &amp;v[i], &amp;w[i]);\n}\nfor (int i = 1; i &lt;= n; ++i) {\nfor (int j = 1; j &lt;= m; ++j) {\nf[i][j] = f[i - 1][j];\nif (j &gt;= v[i]) f[i][j] = max(f[i][j], f[i][j - v[i]] + w[i]);\n}\n}\nprintf(\"%d\\n\", f[n][m]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_7","title":"\u591a\u91cd\u80cc\u5305\u95ee\u9898","text":"<p>\u6bcf\u4ef6\u7269\u54c1\u7684\u4e2a\u6570\u4e0d\u540c</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_8","title":"\u6734\u7d20\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m;\nint v[N], w[N], s[N];\nint f[N][N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\nscanf(\"%d%d%d\", &amp;v[i], &amp;w[i], &amp;s[i]);\n}\nfor (int i = 1; i &lt;= n; ++i) {\nfor (int j = 1; j &lt;= m; ++j) {\nfor (int k = 0; v[i] * k &lt;= j &amp;&amp; k &lt;= s[i]; ++k) {\nf[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n}\n}\n}\nprintf(\"%d\\n\", f[n][m]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_9","title":"\u4f18\u5316\u5199\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m;\nint v[N], w[N], s[N];\nint f[N][N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; ++i) {\nscanf(\"%d%d%d\", &amp;v[i], &amp;w[i], &amp;s[i]);\n}\nfor (int i = 1; i &lt;= n; ++i) {\nfor (int j = 1; j &lt;= m; ++j) {\nf[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n}\n}\nprintf(\"%d\\n\", f[n][m]);\nreturn 0;\n}\n</code></pre>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_10","title":"\u5206\u7ec4\u80cc\u5305\u95ee\u9898","text":"<p>\u7269\u54c1\u6709n\u7ec4\uff0c\u6bcf\u4e00\u7ec4\u6709\u82e5\u5e72\u79cd\u7269\u54c1\uff0c\u6bcf\u4e00\u7ec4\u53ea\u80fd\u9009\u4e00\u4e2a</p>"},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E8%B4%AA%E5%BF%83/","title":"\u7b2c\u516d\u7ae0 \u8d2a\u5fc3","text":""},{"location":"CS/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86/","title":"\u7b2c\u56db\u7ae0 \u6570\u5b66\u77e5\u8bc6","text":""},{"location":"CS285/01.Introduction%20and%20Course%20Overview/","title":"01.Introduction and Course Overview","text":""},{"location":"CS285/02.Supervised%20Learning%20of%20Behaviors/","title":"02.Supervised Learning of Behaviors","text":""},{"location":"CS285/03.PyTorch%20Tutorial/","title":"03.PyTorch Tutorial","text":""},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/","title":"4. Introduction to Reinforcement Learning","text":""},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#definitions","title":"Definitions","text":""},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#terminology-notation","title":"Terminology &amp; Notation","text":"<p>state: \\(\\mathbf{s}_t\\)</p> <p>observation: \\(\\mathbf{o}_t\\)</p> <p>action: \\(\\mathbf{a}_t\\)</p> <p>policy: \\(\\pi_\\theta(\\mathbf{a}_t\\mid \\mathbf{o}_t)\\)</p> <p>policy: \\(\\pi_\\theta(\\mathbf{a}_t\\mid \\mathbf{s}_t)\\) (fully observed)</p>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#reward-functions","title":"Reward functions","text":"<p>reward function: \\(r(\\mathbf{s}, \\mathbf{a})\\)</p> <p>Markov Decision Process</p> <p>\u4e94\u5143\u7ec4\uff1a\\(\\mathcal{M}=\\{\\mathcal{S},\\mathcal{A},\\mathcal{T},r,\\gamma\\}\\)</p> <p>State space: \\(\\mathcal{S}\\), state \\(s \\in \\mathcal{S}\\) (discrete or continuous)</p> <p>Action space: \\(\\mathcal{A}\\), action \\(a \\in \\mathcal{A}\\) (discrete or continuous)</p> <p>Transition operator: \\(\\mathcal{T}\\)</p> <p>Reward function: \\(r: \\mathcal{S}\\times\\mathcal{A}\\to\\mathbb{R}\\)</p>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#partially-observed-markov-decision-process-pomdp","title":"Partially Observed Markov Decision Process (POMDP)","text":"<p>\\(\\mathcal{M}=\\{\\mathcal{S},\\mathcal{A},\\mathcal{O},\\mathcal{T},\\mathcal{E},r,\\gamma\\}\\)</p> <p>State space: \\(\\mathcal{S}\\), state \\(s \\in \\mathcal{S}\\) (discrete or continuous)</p> <p>Action space: \\(\\mathcal{A}\\), action \\(a \\in \\mathcal{A}\\) (discrete or continuous)</p> <p>Observation space: \\(\\mathcal{O}\\), observation \\(o \\in \\mathcal{O}\\) (discrete or continuous)</p> <p>Transition operator: \\(\\mathcal{T}\\)</p> <p>Emission probability: \\(p(o_t\\mid s_t)\\)</p> <p>Reward function: \\(r: \\mathcal{S}\\times\\mathcal{A}\\to\\mathbb{R}\\)</p> <p>The goal of reinforcement learning</p> <p>\u5bf9\u4e8e\u6709\u9650\u65f6\u95f4 MDP\uff0c\u8f68\u8ff9\u5206\u5e03</p> \\[ p_\\theta(\\tau) = p_\\theta(\\mathbf{s}_1, \\mathbf{a}_1, \\ldots, \\mathbf{s}_T, \\mathbf{a}_T)=p(\\mathbf{s}_1) \\prod_{t=1}^T \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t) \\] <p>RL \u7684\u76ee\u6807\u4e3a\uff1a\u5bfb\u627e\u7b56\u7565\u7684\u53c2\u6570 \\(\\theta\\)\uff0c\u6700\u5927\u5316\u8be5\u7b56\u7565\u8f68\u8ff9\u7d2f\u8ba1\u5956\u52b1\u7684\u671f\u671b</p> \\[ \\theta^{\\star}=\\arg \\max_\\theta \\mathbb{E}_{\\tau \\sim p_\\theta(\\tau)}\\left[\\sum_t r(\\mathbf{s}_t, \\mathbf{a}_t)\\right] \\] <p>\\(T=\\infty\\)?</p> \\[ \\theta^{\\star}=\\arg \\max_\\theta E_{(\\mathbf{s}, \\mathbf{a}) \\sim p_\\theta(\\mathbf{s}, \\mathbf{a})}[r(\\mathbf{s}, \\mathbf{a})] \\]"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#algorithms","title":"Algorithms","text":"<p>While True:</p> <ul> <li>generate samples (i.e. run the policy)</li> <li>fit a model/estimate the return</li> <li>improve the policy</li> </ul>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#value-functions","title":"Value Functions","text":""},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#q-function","title":"Q-function","text":"\\[ Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)=\\sum_{t^{\\prime}=t}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t, \\mathbf{a}_t\\right] \\]"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#value-function","title":"Value function","text":"\\[ V^\\pi(\\mathbf{s}_t)=\\sum_{t^{\\prime}=t}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t\\right] \\] \\[ V^\\pi(\\mathbf{s}_t)=\\sum_{t^{\\prime}=t}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t\\right] \\]"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#using-q-functions-and-value-functions","title":"Using Q-functions and value functions","text":"<p>Idea 1: if we have policy \\(\\pi\\), and we know \\(Q^\\pi(\\mathbf{s},\\mathbf{a})\\), then we can improve \\(\\pi\\)</p> <p>Idea 2: compute gradient to increase probability of good actions \\(\\mathbf{a}\\)</p> <p>if \\(Q^\\pi(\\mathbf{s},\\mathbf{a}) &gt; V^\\pi(\\mathbf{s})\\), then \\(\\mathbf{a}\\) is better than average</p> <p>(\\(V^\\pi(\\mathbf{s}) = \\mathbb{E} [Q^\\pi(\\mathbf{s},\\mathbf{a})]\\) under \\(\\pi(\\mathbf{a}\\mid\\mathbf{s})\\))</p>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#types-of-rl-algorithms","title":"Types of RL algorithms","text":"<ul> <li>Policy gradients</li> <li>Value-based</li> <li>Actor-Critic</li> <li>Model-based RL</li> <li>Use it for planning</li> <li>Use it to improve a policy</li> <li>Something else</li> </ul>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#why-so-many-rl-algorithms","title":"Why so many RL algorithms?","text":"<ul> <li>Different trade-offs</li> <li>Sample efficiency</li> <li>Stability &amp; ease of use</li> <li>Different assumptions</li> <li>Stochastic or deterministic?</li> <li>Continuous or discrete?</li> <li>Episodic or infinite horizon?</li> <li>Different things are easy or hard in different settings</li> <li>Easier to represent the policy?</li> <li>Easier to represent the model?</li> </ul>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#comparison-sample-efficiency","title":"Comparison: sample efficiency","text":"<p>Sample efficiency: how many samples do we need to get a good policy?</p> <p>Most important question: is the algorithm off-policy?</p> <ul> <li>Off-policy: \u63d0\u5347\u7b56\u7565\u65f6\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u7b56\u7565\u751f\u6210\u65b0\u7684\u6837\u672c</li> <li>On-policy: \u9700\u8981\u4f7f\u7528\u6539\u53d8\u540e\u7684\u7b56\u7565\u751f\u6210\u65b0\u7684\u6837\u672c</li> </ul>"},{"location":"CS285/04.Introduction%20to%20Reinforcement%20Learning/#comparison-stability-and-ease-of-use","title":"Comparison: stability and ease of use","text":""},{"location":"CS285/05.Policy%20Gradients/","title":"5. Policy Gradients","text":""},{"location":"CS285/05.Policy%20Gradients/#51-policy-gradient","title":"5.1 Policy Gradient","text":"\\[ p_\\theta(\\tau) = p_\\theta(\\mathbf{s}_1, \\mathbf{a}_1, \\ldots, \\mathbf{s}_T, \\mathbf{a}_T)=p(\\mathbf{s}_1) \\prod_{t=1}^T \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t) \\] <p>\u5176\u4e2d \\(p(\\mathbf{s}_1)\\) \u548c \\(p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t)\\) \u90fd\u662f\u672a\u77e5\u7684\uff0c\u6211\u4eec\u4ec5\u4ec5\u5047\u8bbe agent \u53ef\u4ee5\u4e0e\u73af\u5883\u4ea4\u4e92</p>"},{"location":"CS285/05.Policy%20Gradients/#evaluating-the-objective","title":"Evaluating the objective","text":"\\[ \\theta^{\\star}=\\arg \\max _\\theta \\underbrace{E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\sum_t r(\\mathbf{s}_t, \\mathbf{a}_t)\\right]}_{J(\\theta)} \\] <p>\u53ef\u4ee5\u4f7f\u7528 \\(\\pi_\\theta\\) \u91c7\u6837 \\(N\\) \u6761\u8f68\u8ff9\uff0c\u5f97\u5230 \\(J(\\theta)\\) \u7684\u65e0\u504f\u4f30\u8ba1\uff1a</p> \\[ J(\\theta)=E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\sum_t r(\\mathbf{s}_t, \\mathbf{a}_t)\\right] \\approx \\frac{1}{N} \\sum_i \\sum_t r(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) \\]"},{"location":"CS285/05.Policy%20Gradients/#directly-policy-differentiation","title":"Directly policy differentiation","text":"\\[ \\begin{gathered} J(\\theta)=E_{\\tau \\sim p_\\theta(\\tau)}[\\underbrace{r(\\tau)}]=\\int p_\\theta(\\tau) r(\\tau) d \\tau \\\\ \\sum_{t=1}^T r(\\mathbf{s}_t, \\mathbf{a}_t) \\end{gathered} \\] <p>\u7531\u4e8e Log-gradient trick</p> \\[ \\nabla_\\theta p_\\theta(\\tau) = p_\\theta(\\tau) \\frac{\\nabla_\\theta p_\\theta(\\tau)}{p_\\theta(\\tau)} = p_\\theta(\\tau) \\nabla_\\theta \\log p_\\theta(\\tau) \\] <p>\u6545</p> \\[ \\nabla_\\theta J(\\theta)=\\int \\nabla_\\theta p_\\theta(\\tau) r(\\tau) d \\tau=\\int p_\\theta(\\tau) \\nabla_\\theta \\log p_\\theta(\\tau) r(\\tau) d \\tau=E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\nabla_\\theta \\log p_\\theta(\\tau) r(\\tau)\\right] \\] <p>\u7531\u4e8e</p> \\[ p_\\theta(\\tau) = p_\\theta(\\mathbf{s}_1, \\mathbf{a}_1, \\ldots, \\mathbf{s}_T, \\mathbf{a}_T)=p(\\mathbf{s}_1) \\prod_{t=1}^T \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t) \\] <p>\u4e24\u8fb9\u540c\u65f6\u53d6 log</p> \\[ \\log p_\\theta(\\tau)=\\log p\\left(\\mathbf{s}_1\\right)+\\sum_{t=1}^T \\log \\pi_\\theta\\left(\\mathbf{a}_t \\mid \\mathbf{s}_t\\right)+\\log p\\left(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t\\right) \\] <p>\u4e24\u8fb9\u540c\u65f6\u5bf9 \\(\\theta\\) \u6c42\u68af\u5ea6</p> \\[ \\begin{aligned} \\nabla_\\theta \\log p_\\theta(\\tau) =&amp; \\nabla_\\theta \\left[\\log p(\\mathbf{s}_1) + \\sum_{t=1}^T \\log \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) + \\log p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t) \\right] \\\\ =&amp; \\nabla_\\theta \\sum_{t=1}^T \\log \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) \\\\ =&amp; \\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t) \\\\ \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\nabla_\\theta J(\\theta) =&amp; E_{\\tau \\sim p_\\theta(\\tau)} \\left[\\nabla_\\theta \\log p_\\theta(\\tau) r(\\tau)\\right] \\\\ =&amp; E_{\\tau \\sim p_\\theta(\\tau)} \\left[\\left(\\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t)\\right)\\left(\\sum_{t=1}^T r(\\mathbf{s}_t, \\mathbf{a}_t)\\right)\\right] \\end{aligned} \\] <p>\u91c7\u6837</p> \\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N\\left(\\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})\\right)\\left(\\sum_{t=1}^T r(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t})\\right) \\]"},{"location":"CS285/05.Policy%20Gradients/#reinforce","title":"REINFORCE","text":"<pre><code>graph LR\n    A[\"1. \u4f7f\u7528\u5f53\u524d\u7b56\u7565\u91c7\u96c6\u4e00\u4e2a batch \u7684\u8f68\u8ff9\"] --&gt; B[\"2. \u8ba1\u7b97 J(\u03b8) \u76f8\u5bf9\u4e8e \u03b8 \u7684\u68af\u5ea6\"];\n    B --&gt; C[\"3. \u68af\u5ea6\u4e0a\u5347\u66f4\u65b0 \u03b8\"];\n    C --&gt; A;</code></pre>"},{"location":"CS285/05.Policy%20Gradients/#52-understanding-policy-gradient","title":"5.2 Understanding Policy Gradient","text":"<p>BC \u53ea\u662f\u5355\u7eaf\u6700\u5927\u5316\u4e13\u5bb6\u8f68\u8ff9\u7684 likelihood\uff0c</p> <p>PG \u53ef\u4ee5\u770b\u4f5c\u5bf9 maximum likelihood \u52a0\u6743\uff0c\u589e\u52a0\u597d\u8f68\u8ff9\u7684 likelihood\uff0c\u51cf\u5c11\u574f\u8f68\u8ff9\u7684 likelihood</p>"},{"location":"CS285/05.Policy%20Gradients/#partial-observability","title":"Partial observability","text":"<p>states \u6ee1\u8db3\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff08\u7ed9\u5b9a\u5f53\u524d\u72b6\u6001\uff0c\u672a\u6765\u72b6\u6001\u4e0e\u8fc7\u53bb\u72b6\u6001\u6761\u4ef6\u72ec\u7acb\uff09\uff0c\u4f46\u662f observations \u901a\u5e38\u4e0d\u6ee1\u8db3\u3002</p> <p>\u7531\u4e8e PG \u4e0d\u9700\u8981\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u6240\u4ee5\u90e8\u5206\u53ef\u89c2\u7684 PG \u4e0e\u5168\u53ef\u89c2 PG \u7684\u63a8\u5bfc\u76f8\u540c\uff0c\u53ea\u9700\u8981\u628a states \u6362\u6210 observations\uff0cPG \u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e POMDP\u3002</p>"},{"location":"CS285/05.Policy%20Gradients/#pg","title":"PG \u7684\u7f3a\u70b9","text":"<ul> <li>\u65b9\u5dee\u5927\uff1aPG \u7684\u65b9\u5dee\u53d6\u51b3\u4e8e\u9047\u5230\u7684\u6837\u672c</li> </ul>"},{"location":"CS285/05.Policy%20Gradients/#53-reducing-variance","title":"5.3 Reducing Variance","text":""},{"location":"CS285/05.Policy%20Gradients/#causality","title":"Causality","text":"<p>Causality: \u5f53 \\(t &lt; t'\\) \u65f6\uff0c\u65f6\u523b \\(t'\\) \u7684\u7b56\u7565\u65e0\u6cd5\u5f71\u54cd\u65f6\u523b \\(t\\) \u7684\u5956\u52b1\u3002</p> <p>\u4e0d\u540c\u4e8e\u9a6c\u5c14\u53ef\u592b\u6027\uff0cCausality \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u6210\u7acb\u7684\uff0c\u4f46\u9a6c\u5c14\u53ef\u592b\u6027\u672a\u5fc5\u3002</p> <p>\u524d\u9762\u7684 PG \u5e76\u672a\u7528\u5230\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5047\u8bbe\u51cf\u5c0f\u65b9\u5dee\u3002</p> <p>\\(\\nabla J(\\theta)\\) \u4e2d\u6709 log pi \u548c\u5bf9\u5e94\u8f68\u8ff9 return \u7684\u4e58\u79ef\uff0c\u6839\u636e Causality\uff0c\u5f53\u524d\u65f6\u523b\u7684\u7b56\u7565\u65e0\u6cd5\u5f71\u54cd\u8fc7\u53bb\u65f6\u523b\u7684\u5956\u52b1\uff0c\u56e0\u6b64\u6bcf\u4e00\u9879 log pi \u53ea\u9700\u8981\u4e58\u4ee5\u73b0\u5728\u548c\u672a\u6765\u65f6\u523b\u7684\u5956\u52b1\uff0c\u4e14\u6539\u53d8\u540e\u7684 estimator \u4ecd\u7136\u662f\u65e0\u504f\u7684\u3002</p> <p>\u7531\u4e8e\u79fb\u9664\u4e86\u90e8\u5206\u9879\uff0c\u6c42\u548c\u540e\u7684\u503c\u6bd4\u539f\u6765\u66f4\u5c0f\u4e86\uff0c\u6c42\u671f\u671b\u4e4b\u540e\u503c\u4e5f\u76f8\u5e94\u51cf\u5c0f\uff0c\u4ece\u800c\u51cf\u5c0f\u4e86\u65b9\u5dee\u3002</p> \\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}) \\left(\\sum_{t'=t}^T r(\\mathbf{s}_{i, t'}, \\mathbf{a}_{i, t'})\\right) \\] <p>\u5176\u4e2d\u4ece\u5f53\u524d\u65f6\u523b \\(t\\) \u5f00\u59cb\u7684 reward \u4e4b\u548c\u4e5f\u88ab\u79f0\u4e3a <code>reward to go</code>\uff0c\u8bb0\u4f5c \\(\\hat{Q}_{i,t} = \\sum_{t'=t}^T r(\\mathbf{s}_{i, t'}, \\mathbf{a}_{i, t'})\\)\u3002</p>"},{"location":"CS285/05.Policy%20Gradients/#baselines","title":"Baselines","text":"\\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N \\nabla_\\theta \\log p_\\theta(\\tau)[r(\\tau)-b] \\] <p>\u5176\u4e2d \\(\\(b=\\frac{1}{N} \\sum_{i=1}^N r(\\tau)\\)\\)\u3002</p> <p>\u7531\u4e8e</p> \\[ E\\left[\\nabla_\\theta \\log p_\\theta(\\tau) b\\right]=\\int p_\\theta(\\tau) \\nabla_\\theta \\log p_\\theta(\\tau) b d \\tau=\\int \\nabla_\\theta p_\\theta(\\tau) b d \\tau=b \\nabla_\\theta \\int p_\\theta(\\tau) d \\tau=b \\nabla_\\theta 1=0 \\] <p>\u56e0\u6b64\u51cf\u53bb baseline \u4ecd\u7136\u662f\u65e0\u504f\u7684\uff0c\u4f46\u7531\u4e8e</p> \\[ \\begin{aligned} Var(X-\\bar{X}) &amp;= E[(X-\\bar{X}-E[X-\\bar{X}])^2] \\\\ &amp;= E[X^2-2X\\bar{X}+\\bar{X}^2] \\\\ &amp;= EX^2-2E^2X+E\\bar{X}^2 \\\\ &amp;= EX^2-2E^2X+E^2\\bar{X}+Var(\\bar{X}) \\\\ &amp;= EX^2-E^2X+Var(\\bar{X}) \\\\ &amp;= EX^2-E^2X+Var(X)/n \\\\ &amp;&lt; EX^2-E^2X \\\\ &amp;= Var(X) \\end{aligned} \\] <p>\u65b9\u5dee\u6bd4\u539f\u6765\u6709\u6240\u51cf\u5c0f\u3002\u7136\u800c\uff0c\u6211\u4eec\u65e0\u6cd5\u627e\u5230\u6700\u4f18\u7684 baseline\u3002</p>"},{"location":"CS285/05.Policy%20Gradients/#analyzing-variance","title":"Analyzing variance","text":"\\[ \\operatorname{Var}[X]=E[X^2]-E[X]^2 \\] <p>\u65b9\u5dee\u4e3a\uff1a</p> \\[ \\operatorname{Var}=E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\left(\\nabla_\\theta \\log p_\\theta(\\tau)(r(\\tau)-b)\\right)^2\\right]-E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\nabla_\\theta \\log p_\\theta(\\tau)(r(\\tau)-b)\\right]^2 \\] <p>\u5c06\u65b9\u5dee\u5bf9 baseline \u6c42\u5bfc\uff1a</p> \\[ \\begin{aligned} \\frac{d \\operatorname{Var}}{d b} &amp;= \\frac{d}{d b} E\\left[g(\\tau)^2(r(\\tau)-b)^2\\right] \\\\ &amp;= \\frac{d}{d b}\\left(E\\left[q(\\tau)^2 r(\\tau)^2\\right]-2 E\\left[g(\\tau)^2 r(\\tau) b\\right]+b^2 E\\left[g(\\tau)^2\\right]\\right) \\\\ &amp;= -2 E\\left[g(\\tau)^2 r(\\tau)\\right]+2 b E\\left[g(\\tau)^2\\right] \\\\ &amp;=0 \\end{aligned} \\] <p>\u56e0\u6b64\u80fd\u8fbe\u5230\u6700\u5c0f\u65b9\u5dee\u7684\u6700\u4f18 baseline \u4e3a\uff1a</p> \\[ b=\\frac{E\\left[g(\\tau)^2 r(\\tau)\\right]}{E\\left[g(\\tau)^2\\right]} \\] <p>\u7136\u800c\u5728\u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4e0d\u4f7f\u7528\u6700\u4f18 baseline\uff0c\u800c\u4f7f\u7528 return \u5747\u503c\u4f5c\u4e3a baseline\u3002</p>"},{"location":"CS285/05.Policy%20Gradients/#54-off-policy-policy-gradient","title":"5.4 Off-policy Policy Gradient","text":""},{"location":"CS285/05.Policy%20Gradients/#policy-gradient-is-on-policy","title":"Policy gradient is on-policy","text":"<p>\u7531\u4e8e REINFORCE \u7b97\u6cd5\u9700\u8981\u5148\u7528\u5f53\u524d\u7b56\u7565\u91c7\u6570\u636e\uff0c\u518d\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u505a\u66f4\u65b0\uff0c\u56e0\u6b64 PG \u662f on-policy \u7684\u3002</p> <p>On-policy \u5b66\u4e60\u5341\u5206\u4f4e\u6548\uff08inefficient\uff09</p> <p>\u7531\u4e8e\u6bcf\u6b21\u66f4\u65b0\u65f6\uff0c\u7b56\u7565\u53c2\u6570\u53ea\u6709\u5f88\u5c0f\u7684\u6539\u53d8\uff0c</p> <p>Importance sampling\uff08\u91cd\u8981\u6027\u91c7\u6837\uff09</p> \\[ \\begin{aligned} E_{x \\sim p(x)}[f(x)] &amp;= \\int p(x) f(x) d x \\\\ &amp;= \\int \\frac{q(x)}{q(x)} p(x) f(x) d x \\\\ &amp;= \\int q(x) \\frac{p(x)}{q(x)} f(x) d x \\\\ &amp;= E_{x \\sim q(x)}\\left[\\frac{p(x)}{q(x)} f(x)\\right] \\end{aligned} \\] <p>\u6211\u4eec\u5e0c\u671b\u5c06\u7b97\u6cd5\u8c03\u6574\u4e3a off-policy\uff0c\u5047\u5982\u6211\u4eec\u73b0\u5728\u6709\u6765\u81ea\u53e6\u4e00\u5206\u5e03 \\(\\bar{p}(\\tau)\\) \u7684\u8f68\u8ff9\uff0c</p> \\[ \\nabla_{\\theta^{\\prime}} J(\\theta^{\\prime}) = E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\frac{\\nabla_{\\theta^{\\prime}} p_{\\theta^{\\prime}}(\\tau)}{p_\\theta(\\tau)} r(\\tau)\\right] = E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\frac{p_{\\theta^{\\prime}}(\\tau)}{p_\\theta(\\tau)} \\nabla_{\\theta^{\\prime}} \\log p_{\\theta^{\\prime}}(\\tau) r(\\tau)\\right] \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\nabla_{\\theta^{\\prime}} J\\left(\\theta^{\\prime}\\right) &amp;= E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\frac{p_{\\theta^{\\prime}}(\\tau)}{p_\\theta(\\tau)} \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}(\\tau) r(\\tau)\\right] \\quad \\text { when } \\theta \\neq \\theta^{\\prime} \\\\ &amp;= E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\left(\\prod_{t=1}^T \\frac{\\pi_{\\theta^{\\prime}}\\left(\\mathbf{a}_t \\mid \\mathbf{s}_t\\right)}{\\pi_\\theta\\left(\\mathbf{a}_t \\mid \\mathbf{s}_t\\right)}\\right)\\left(\\sum_{t=1}^T \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}\\left(\\mathbf{a}_t \\mid \\mathbf{s}_t\\right)\\right)\\left(\\sum_{t=1}^T r\\left(\\mathbf{s}_t, \\mathbf{a}_t\\right)\\right)\\right] \\\\ &amp;= E_{\\tau \\sim p_\\theta(\\tau)}\\left[\\sum_{t=1}^T \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}(\\mathbf{a}_t \\mid \\mathbf{s}_t) \\left(\\prod_{t'=1}^t \\frac{\\pi_{\\theta^{\\prime}}(\\mathbf{a}_{t'} \\mid \\mathbf{s}_{t'})}{\\pi_\\theta(\\mathbf{a}_{t'} \\mid \\mathbf{s}_{t'})}\\right) \\left(\\sum_{t'=t}^T r(\\mathbf{s}_{t'}, \\mathbf{a}_{t'}) \\left(\\prod_{t''=t}^{t'} \\frac{\\pi_{\\theta^{\\prime}}(\\mathbf{a}_{t''} \\mid \\mathbf{s}_{t''})}{\\pi_\\theta(\\mathbf{a}_{t''} \\mid \\mathbf{s}_{t''})}\\right) \\right)\\right] \\\\ \\end{aligned} \\]"},{"location":"CS285/05.Policy%20Gradients/#a-first-order-approximation-for-is-preview","title":"A first-order approximation for IS (preview)","text":"\\[ \\begin{aligned} \\nabla_{\\theta^{\\prime}} J\\left(\\theta^{\\prime}\\right) &amp;\\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\frac{\\pi_{\\theta^{\\prime}}\\left(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}\\right)}{\\pi_\\theta\\left(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}\\right)} \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}\\left(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}\\right) \\hat{Q}_{i, t} \\\\ &amp;= \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\frac{\\pi_{\\theta^{\\prime}}(\\mathbf{s}_{i, t})}{\\pi_\\theta(\\mathbf{s}_{i, t})} \\frac{\\pi_{\\theta^{\\prime}}(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})}{\\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})} \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}) \\hat{Q}_{i, t} \\\\ &amp;\\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\frac{\\pi_{\\theta^{\\prime}}(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})}{\\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})} \\nabla_{\\theta^{\\prime}} \\log \\pi_{\\theta^{\\prime}}(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}) \\hat{Q}_{i, t} \\end{aligned} \\] <p>\u5176\u4e2d\u6700\u540e\u4e00\u6b65\uff0c\u5f53 \\(\\theta'\\) \u4e0e \\(\\theta\\) \u8f83\u4e3a\u63a5\u8fd1\u65f6\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fd1\u4f3c\u3002</p>"},{"location":"CS285/05.Policy%20Gradients/#55-implementing-policy-gradients","title":"5.5 Implementing Policy Gradients","text":""},{"location":"CS285/05.Policy%20Gradients/#policy-gradient-with-automatic-differentiation","title":"Policy gradient with automatic differentiation","text":"<pre><code># Given:\n# actions - (N*T) x Da tensor of actions\n# states - (N*T) x Ds tensor of states\n# q_values \u2013 (N*T) x 1 tensor of estimated state-action values\n# Build the graph:\nlogits = policy.predictions(states) # This should return (N*T) x Da tensor of action logits\nnegative_likelihoods = tf.nn.softmax_cross_entropy_with_logits(labels=actions, logits=logits)\nweighted_negative_likelihoods = tf.multiply(negative_likelihoods, q_values)\nloss = tf.reduce_mean(weighted_negative_likelihoods)\ngradients = loss.gradients(loss, variables)\n</code></pre>"},{"location":"CS285/05.Policy%20Gradients/#policy-gradient-in-practice","title":"Policy gradient in practice","text":"<p>\u4e3a\u4e86\u4f7f\u7528\u81ea\u52a8\u5fae\u5206\u5de5\u5177\uff0c\u5728\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u5c06 PG \u7684 pseudo loss \u5199\u6210\u52a0\u6743\u7248\u7684 maximum likelihood</p> <ul> <li>Gradient \u5177\u6709\u9ad8\u65b9\u5dee\uff01</li> <li>\u56e0\u6b64\u9700\u8981\u8003\u8651\u4f7f\u7528\u5927 batch size\uff08\u51e0\u5343\u3001\u51e0\u4e07\uff09</li> <li>\u8c03\u6574\u5b66\u4e60\u7387\u975e\u5e38\u56f0\u96be\uff08ADAM \u8fd8\u53ef\u4ee5\uff0c\u4f46 SGD (with Momentum) \u6bd4\u8f83\u96be\u7528\uff09</li> </ul>"},{"location":"CS285/05.Policy%20Gradients/#56-advanced-policy-gradients","title":"5.6 Advanced Policy Gradients","text":""},{"location":"CS285/06.Actor-Critic%20Algorithms/","title":"6. Actor-Critic Algorithms","text":""},{"location":"CS285/06.Actor-Critic%20Algorithms/#61-actor-critic-algorithms","title":"6.1 Actor-Critic Algorithms","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 \\(\\hat{Q}_{i,t}^\\pi\\) \u8868\u793a reward to go\uff0c\u5373\u5728\u5f53\u524d\u72b6\u6001 \\(\\mathbf{s}_t\\) \u91c7\u53d6\u52a8\u4f5c \\(\\mathbf{a}_t\\) \u5728\u63a5\u4e0b\u6765\u80fd\u591f\u5f97\u5230\u7684\u671f\u671b\u5956\u52b1\uff0c\u4f46\u7531\u4e8e\u7b56\u7565\u548c MDP \u7684\u968f\u673a\u6027\uff0c\u4ece\u540c\u4e00\u72b6\u6001\u51fa\u53d1\u91c7\u6837\u5f97\u5230\u7684\u8f68\u8ff9\u53ef\u80fd\u662f\u4e0d\u540c\u7684\uff0c\u5355\u6761\u8f68\u8ff9\u5956\u52b1\u548c\u5927\u91cf\u8f68\u8ff9\u5956\u52b1\u7684\u671f\u671b\u751a\u81f3\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u65b9\u5dee\u8f83\u5927\u3002\u7531\u6b64\u4ea7\u751f\u4e00\u4e2a\u60f3\u6cd5\uff1a\u6211\u4eec\u662f\u5426\u80fd\u5f97\u5230\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u4f30\u8ba1\uff1f\u5728\u672c\u8282\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60 Q-function\uff0c\u4f5c\u4e3a Critic \u8fdb\u884c\u66f4\u51c6\u786e\u7684\u4f30\u8ba1\u3002</p> <p>\u5b9e\u9645\u4e0a\u771f\u6b63\u7684 reward to go \u4e3a\uff1a</p> \\[ Q(\\mathbf{s}_t, \\mathbf{a}_t)=\\sum_{t^{\\prime}=t}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t, \\mathbf{a}_t\\right] \\] <p>\u5982\u679c\u6211\u4eec\u77e5\u9053 \\(Q(\\mathbf{s}_t, \\mathbf{a}_t)\\)\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u66ff\u6362 PG \u4e2d\u7684 \\(\\hat{Q}_{i,t}^\\pi\\)\uff1a</p> \\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}) Q(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) \\] <p>\u4e0a\u4e00\u8282\u63d0\u5230\u53ef\u4ee5\u6dfb\u52a0 baseline \u6765\u51cf\u5c0f\u65b9\u5dee\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a batch \u7684\u5e73\u5747 Q \u503c\u4f5c\u4e3a baseline\uff0c\u5b9e\u9645\u4e0a\u4ecd\u7136\u4f1a\u6709\u8f83\u5927\u65b9\u5dee\uff08Q \u503c\u4e0e action \u76f8\u5173\uff09\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u51cf\u5c0f\u65b9\u5dee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ea\u4e0e state \u76f8\u5173\u7684 \\(V(\\mathbf{s})\\) \u4f5c\u4e3a baseline\uff1a</p> \\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t}) A(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) \\] <p>\u5176\u4e2d \\(A(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) = Q(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) - V(\\mathbf{s}_{i, t})\\) \u4e3a advantage function\uff08\u4f18\u52bf\u51fd\u6570\uff09\u3002</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#state-state-action-value-functions","title":"State &amp; state-action value functions","text":"<p>\\(Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)=\\sum_{t^{\\prime}=t}^T E_{\\pi_{\\theta}}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t, \\mathbf{a}_t\\right]\\) : total reward from taking \\(\\mathbf{a}_t\\) in \\(\\mathbf{s}_t\\)</p> <p>\\(V^\\pi(\\mathbf{s}_t)=E_{\\mathbf{a}_t \\sim \\pi_\\theta(\\mathbf{a}_t \\mid \\mathbf{s}_t)}\\left[Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)\\right]\\) : total reward from \\(\\mathbf{s}_t\\)</p> <p>\\(A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)=Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)-V^\\pi(\\mathbf{s}_t)\\) : how much better \\(\\mathbf{a}_t\\) is</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#value-function-fitting","title":"Value function fitting","text":"<p>\u6211\u4eec\u73b0\u5728\u6709 \\(Q\\), \\(V\\), \\(A\\)\uff0c\u5e94\u8be5\u62df\u5408\u54ea\u4e2a\uff1f\u7531\u4e8e</p> \\[ \\begin{aligned} Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t) &amp;= r(\\mathbf{s}_t, \\mathbf{a}_t)+\\sum_{t^{\\prime}=t+1}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_t, \\mathbf{a}_t\\right] \\\\ &amp;= r(\\mathbf{s}_t, \\mathbf{a}_t) + E_{\\mathbf{s}_{t+1}\\sim p(\\mathbf{s}_{t+1} \\mid \\mathbf{s}_t, \\mathbf{a}_t)}\\left[V^\\pi(\\mathbf{s}_{t+1})\\right] \\\\ &amp;\\approx r(\\mathbf{s}_t, \\mathbf{a}_t) + V^\\pi(\\mathbf{s}_{t+1}) \\end{aligned} \\] <p>\u4e14</p> \\[ A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t) \\approx r(\\mathbf{s}_t, \\mathbf{a}_t) + V^\\pi(\\mathbf{s}_{t+1}) - V^\\pi(\\mathbf{s}_t) \\] <p>\\(Q\\) \u548c \\(A\\) \u90fd\u53ef\u4ee5\u901a\u8fc7 \\(V\\) \u6765\u8868\u793a\uff0c\u4e14 \\(V\\) \u66f4\u5bb9\u6613\u5b66\u4e60\uff08\\(V\\) \u53ea\u4f9d\u8d56\u4e8e state\uff0c\u6240\u4ee5\u66f4\u597d\u5b66\uff09\u3002</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#policy-evaluation","title":"Policy evaluation","text":"<p>supervised regression: \\(\\mathcal{L}(\\phi)=\\frac{1}{2} \\sum_i\\left\\|\\hat{V}_\\phi^\\pi(\\mathbf{s}_i)-y_i\\right\\|^2\\)</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#can-we-do-better-temporal-difference","title":"Can we do better? (Temporal Difference)","text":"\\[ \\begin{aligned} \\text { ideal target: } y_{i, t} &amp;= \\sum_{t^{\\prime}=t}^T E_{\\pi_\\theta}\\left[r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) \\mid \\mathbf{s}_{i, t}\\right] \\\\ &amp;\\approx r(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t})+V^\\pi(\\mathbf{s}_{i, t+1}) \\\\ &amp;\\approx r(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t})+\\hat{V}_\\phi^\\pi(\\mathbf{s}_{i, t+1}) \\end{aligned} \\] <p>\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a bootstrapped estimate\u3002\u7531\u4e8e \\(V\\) \u662f\u5bf9\u6240\u6709\u8f68\u8ff9\u6c42\u671f\u671b\uff0c\u56e0\u6b64\u6709\u66f4\u4f4e\u7684\u65b9\u5dee\uff0c\u4f46\u662f \\(\\hat{V}\\) \u4f1a\u6709\u504f\u5dee\uff08bias\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a bias-variance tradeoff\u3002</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#62-from-evaluation-to-actor-critic","title":"6.2 From Evaluation to Actor Critic","text":"Figure 1. Actor-Critic Algorithm"},{"location":"CS285/06.Actor-Critic%20Algorithms/#aside-discount-factors","title":"Aside: discount factors","text":"<p>\u5f53 \\(T\\) (episode lenth) \u4e3a \\(\\infty\\) \u65f6\uff0c\\(\\hat{V}_\\phi^\\pi\\) \u5c06\u53ef\u80fd\u53d8\u4e3a\u65e0\u7a77\u5927\uff0c</p> <p>simple trick: better to get rewards sooner than later</p> \\[ y_{i, t} \\approx r(\\mathbf{s}_{i, t}, \\mathbf{a}_{i, t}) + \\gamma \\hat{V}_\\phi^\\pi(\\mathbf{s}_{i, t+1}) \\] <p>\u5176\u4e2d \\(\\gamma \\in [0,1]\\) \u662f discount factor\uff08\u6298\u6263\u56e0\u5b50\uff09\uff0c\u901a\u5e38\u53d6 \\(\\gamma=0.99\\)\u3002</p> <p></p> Figure 2. Batch Actor-Critic Algorithm <p></p> Figure 3. On-policy Actor-Critic Algorithm"},{"location":"CS285/06.Actor-Critic%20Algorithms/#63-actor-critic-design-decisions","title":"6.3 Actor-Critic Design Decisions","text":""},{"location":"CS285/06.Actor-Critic%20Algorithms/#architecture-design","title":"Architecture design","text":"<p>\u7528\u4e00\u4e2a\u7f51\u7edc\u540c\u65f6\u5b66\u4e60 \\(\\pi_\\theta\\) \u548c \\(V_\\phi\\)</p> <p></p> Figure 4. Off-policy Actor-Critic Algorithm"},{"location":"CS285/06.Actor-Critic%20Algorithms/#64-critic-as-baselines","title":"6.4 Critic as Baselines","text":"<p>unbiased &amp; lower variance</p> \\[ \\nabla_\\theta J(\\theta) \\approx \\frac{1}{N} \\sum_{i=1}^N \\sum_{t=1}^T \\nabla_\\theta \\log \\pi_\\theta(\\mathbf{a}_{i, t} \\mid \\mathbf{s}_{i, t})\\left(\\left(\\sum_{t^{\\prime}=t}^T \\gamma^{t^{\\prime}-t} r(\\mathbf{s}_{i, t^{\\prime}}, \\mathbf{a}_{i, t^{\\prime}})\\right)-\\hat{V}_\\phi^\\pi(\\mathbf{s}_{i, t})\\right) \\]"},{"location":"CS285/06.Actor-Critic%20Algorithms/#control-variates-action-dependent-baselines","title":"Control variates: action-dependent baselines","text":""},{"location":"CS285/06.Actor-Critic%20Algorithms/#eligibility-traces-n-step-returns","title":"Eligibility traces (\u8d44\u683c\u8ff9) &amp; n-step returns","text":"<p>n-step return estimator:</p> \\[ \\hat{A}_n^\\pi(\\mathbf{s}_t, \\mathbf{a}_t) = \\sum_{t^{\\prime}=t}^{t+n} \\gamma^{t^{\\prime}-t} r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}}) - \\hat{V}_\\phi^\\pi(\\mathbf{s}_t) + \\gamma^n \\hat{V}_\\phi^\\pi(\\mathbf{s}_{t+n}) \\] <p>\u5176\u4e2d \\(n\\) \u901a\u5e38\u53d6 \\(n&gt;1\\)\u3002</p>"},{"location":"CS285/06.Actor-Critic%20Algorithms/#generalized-advantage-estimation-gae","title":"Generalized advantage estimation (GAE)","text":"\\[ \\hat{A}_{\\mathrm{GAE}}^\\pi\\left(\\mathbf{s}_t, \\mathbf{a}_t\\right)=r\\left(\\mathbf{s}_t, \\mathbf{a}_t\\right)+\\gamma\\left((1-\\lambda) \\hat{V}_\\phi^\\pi\\left(\\mathbf{s}_{t+1}\\right)+\\lambda\\left(r\\left(\\mathbf{s}_{t+1}, \\mathbf{a}_{t+1}\\right)+\\gamma\\left((1-\\lambda) \\hat{V}_\\phi^\\pi\\left(\\mathbf{s}_{t+2}\\right)+\\lambda r\\left(\\mathbf{s}_{t+2}, \\mathbf{a}_{t+2}\\right)+\\ldots\\right)\\right.\\right. \\] <p>\u6216\u8005\u5199\u6210\uff1a</p> \\[ \\hat{A}_{\\mathrm{GAE}}^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)=\\sum_{t^{\\prime}=t}^{\\infty}(\\gamma \\lambda)^{t^{\\prime}-t} \\delta_{t^{\\prime}} \\] <p>\u5176\u4e2d \\(\\delta_{t^{\\prime}}=r(\\mathbf{s}_{t^{\\prime}}, \\mathbf{a}_{t^{\\prime}})+\\gamma \\hat{V}_\\phi^\\pi(\\mathbf{s}_{t^{\\prime}+1})-\\hat{V}_\\phi^\\pi(\\mathbf{s}_{t^{\\prime}})\\)\u3002</p>"},{"location":"CS285/07.Value%20Function%20Methods/","title":"7. Value Function Methods","text":""},{"location":"CS285/07.Value%20Function%20Methods/#71-value-function-methods","title":"7.1 Value Function Methods","text":""},{"location":"CS285/07.Value%20Function%20Methods/#can-we-omit-policy-gradient-completely","title":"Can we omit policy gradient completely?","text":"<p>\u7531\u4e8e \\(A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)\\) \u8868\u793a\u5728\u72b6\u6001 \\(\\mathbf{s}_t\\) \u4e0b\uff0c\\(\\mathbf{a}_t\\) \u6bd4\u7b56\u7565 \\(\\pi\\) \u7684\u5e73\u5747\u52a8\u4f5c\u597d\u591a\u5c11\uff0c\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \\(\\arg\\max_{\\mathbf{a}_t} A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)\\) \u6765\u9009\u62e9\u72b6\u6001 \\(\\mathbf{s}_t\\) \u4e0b\u6700\u597d\u7684\u52a8\u4f5c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9009\u62e9\u51fa\u6765\u7684\u52a8\u4f5c\u81f3\u5c11\u548c\u968f\u673a\u4ece \\(\\pi\\) \u4e2d\u91c7\u6837\u51fa\u6765\u7684\u52a8\u4f5c\u4e00\u6837\u597d\uff08\u56e0\u4e3a\u662f\u6700\u597d\u7684\uff09\uff0c\u4e14\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \\(\\arg\\max\\) \u9690\u5f0f\u5730\u901a\u8fc7 \\(A^\\pi\\) \u6765\u8868\u793a\u7b56\u7565\uff0c\u907f\u514d\u4e86\u7b56\u7565\u7684\u5b66\u4e60\u3002\u4e14\u8fd9\u6837\u7b56\u7565\u80fd\u591f\u4e00\u76f4\u63d0\u5347\u3002</p>"},{"location":"CS285/07.Value%20Function%20Methods/#policy-iteration","title":"Policy iteration","text":"Figure 1. Policy Iteration Algorithm \\[ \\pi^{\\prime}(\\mathbf{a}_t \\mid \\mathbf{s}_t)=\\left\\{\\begin{array}{l} \\ 1 \\ \\text { if } \\mathbf{a}_t=\\arg \\max _{\\mathbf{a}_t} A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t) \\\\ \\ 0 \\ \\text { otherwise } \\end{array}\\right. \\] <p>\u5982\u4f55\u8bc1\u660e \\(\\pi'\\) \u6bd4 \\(\\pi\\) \u597d\uff1f\uff08\u5982\u679c \\(\\pi\\) \u4e0d\u662f\u6700\u597d\u7684\u7b56\u7565\uff09</p> <p>evaluate \\(A^\\pi\\) \u53ef\u4ee5\u8f6c\u5316\u4e3a evaluate \\(V(\\mathbf{s})\\)</p>"},{"location":"CS285/07.Value%20Function%20Methods/#dynamic-programming","title":"Dynamic programming","text":"<p>\u5047\u8bbe\u6211\u4eec\u5df2\u77e5 \\(p(\\mathbf{s}' \\mid \\mathbf{s}, \\mathbf{a})\\)\uff0c\u72b6\u6001\u548c\u52a8\u4f5c\u90fd\u662f\u79bb\u6563\u7684\uff08and small\uff0c\u53ef\u4ee5\u7528\u8868\u683c\u8868\u793a\uff09\uff0c\u4f8b\u5982 Figure 2\u3002</p> <p></p> Figure 2. Tabular Example"},{"location":"CS285/07.Value%20Function%20Methods/#policy-iteration-with-dp","title":"Policy iteration with DP","text":"Figure 3. Dynamic Programming <p>\u7531\u4e8e \\(\\pi'\\) \u662f\u786e\u5b9a\u6027\u7b56\u7565\uff0c\u6211\u4eec\u53ef\u4ee5\u628a policy evaluation \u5199\u6210\u4e0a\u5f0f\u3002\u4f46\u662f\u8fd9\u6837\u653e\u5f03\u7b56\u7565\u7684\u968f\u673a\u6027\u4f1a\u4e0d\u4f1a\u635f\u5931\u4ec0\u4e48\uff1f\u53ef\u4ee5\u8bc1\u660e\uff0c\u5728 fully observed MDP \u4e2d\uff0c\u5fc5\u5b58\u5728\u4e00\u4e2a\u786e\u5b9a\u6027\u7b56\u7565\u662f\u6700\u4f18\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u5b58\u5728\u6700\u4f18\u7684\u968f\u673a\u7b56\u7565\uff0cPOMDP \u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u3002</p>"},{"location":"CS285/07.Value%20Function%20Methods/#dp","title":"\u66f4\u7b80\u5355\u7684 DP","text":"<p>Policy Iteration \u4e2d\u6211\u4eec\u5728\u8fed\u4ee3\u5f0f\u5730 improve policy\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f improve value function\uff0c\u56e0\u6b64\u662f\u5426\u53ef\u4ee5\u8df3\u8fc7 step 2\uff0c\u76f4\u63a5 improve value function\uff1f</p> <p>\u5728 \\(\\pi'=\\arg\\max_{\\mathbf{a}_t} A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)\\) \u4e2d\uff0c\u7531\u4e8e \\(A = Q - V\\)\uff0c\u4e14 \\(V\\) \u53ea\u4e0e state \u6709\u5173\uff0c\u800c\u4e0e action \u65e0\u5173\uff0c\u56e0\u6b64 \\(\\arg\\max _{\\mathbf{a}_t} A^\\pi(\\mathbf{s}_t, \\mathbf{a}_t) = \\arg\\max_{\\mathbf{a}_t} Q^\\pi(\\mathbf{s}_t, \\mathbf{a}_t)\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u66f4\u65b0 policy\uff0c\u76f4\u63a5\u8ba1\u7b97 Q-value\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> Figure 4. Value Iteration Algorithm"},{"location":"CS285/07.Value%20Function%20Methods/#72-fitted-value-iteration-q-iteration-simple-youtube","title":"7.2 Fitted Value Iteration &amp; Q-Iteration :simple-youtube","text":"<p>\u672c\u8282\u5c06 7.1 \u4e2d\u7684 tabular setting \u62d3\u5c55\u5230\u4e86\u66f4\u4e00\u822c\u7684\u60c5\u5f62\uff0c\u7528\u795e\u7ecf\u7f51\u7edc\u62df\u5408\u4ef7\u503c\u51fd\u6570\u3002</p> <p>curse of dimensionality\uff08\u7ef4\u6570\u707e\u96be\uff09\uff1a\u5728 tabular RL \u4e2d\uff0c\u8868\u683c\u6240\u9700\u7684\u6761\u76ee\u6570\u662f\u7ef4\u6570\u7684\u6307\u6570\u3002\u4f8b\u5982 \\(200\\times 200\\) \u5927\u5c0f\u7684\u5f69\u8272\u56fe\u50cf\u72b6\u6001\u7a7a\u95f4\u5927\u5c0f\u4e3a\uff1a\\(|\\mathcal{S}|=(256^3)^{(200\\times 200)}\\)\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u4f5c\u4e3a function approximator\uff0c\u8fd1\u4f3c value function\u3002\u5047\u8bbe\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u72b6\u6001\u548c\u52a8\u4f5c\uff0c\u540c\u65f6\u6211\u4eec\u9700\u8981\u77e5\u9053 transition dynamics\uff08\u5728 step 1 \u4e2d\u6211\u4eec\u9700\u8981\u5728 \\(\\mathbf{s}_t\\) \u679a\u4e3e\u6240\u6709 action \\(\\mathbf{a}_t\\)\uff0c\u5219\u5bf9\u5e94\u7684 Value Iteration \u7b97\u6cd5\u4e3a\uff1a</p> <p></p> Figure 5. Fitted Value Iteration Algorithm <p>\u7531\u4e8e\u4e0a\u8ff0\u7b97\u6cd5\u9700\u8981\u679a\u4e3e\u6240\u6709\u72b6\u6001\u548c\u52a8\u4f5c\uff0c\u4e3a\u4e86\u8ba9\u7b97\u6cd5\u80fd\u591f\u5728\u5b9e\u9645\u4e2d\u5e94\u7528\uff0c\u6211\u4eec\u9700\u8981\u6539\u6210\u91c7\u6837\u7684\u5f62\u5f0f\uff0c\u540c\u65f6\u8981\u53bb\u6389\u5df2\u77e5 transition probabilities \u7684\u5047\u8bbe\u3002</p> Figure 6. Fitted Q Iteration Algorithm"},{"location":"CS285/07.Value%20Function%20Methods/#73","title":"7.3","text":""},{"location":"CS285/07.Value%20Function%20Methods/#74","title":"7.4","text":""},{"location":"CS285/07.Value%20Function%20Methods/#75","title":"7.5","text":""},{"location":"CS285/08.Deep%20RL%20with%20Q-Functions/","title":"08.Deep RL with Q Functions","text":""},{"location":"CS285/09.Advanced%20Policy%20Gradients/","title":"09.Advanced Policy Gradients","text":""},{"location":"CS285/10.Optimal%20Control%20and%20Planning/","title":"10.Optimal Control and Planning","text":""},{"location":"CS285/11.Model-Based%20Reinforcement%20Learning/","title":"11.Model Based Reinforcement Learning","text":""},{"location":"CS285/12.Model-Based%20Policy%20Learning/","title":"12.Model Based Policy Learning","text":""},{"location":"CS285/13.Exploration%20%28Part%201%29/","title":"13.Exploration (Part 1)","text":""},{"location":"CS285/14.Exploration%20%28Part%202%29/","title":"14.Exploration (Part 2)","text":""},{"location":"CS285/15.Offline%20Reinforcement%20Learning%20%28Part%201%29/","title":"15.Offline Reinforcement Learning (Part 1)","text":""},{"location":"CS285/16.Offline%20Reinforcement%20Learning%20%28Part%202%29/","title":"16.Offline Reinforcement Learning (Part 2)","text":""},{"location":"CS285/17.Reinforcement%20Learning%20Theory%20Basics/","title":"17.Reinforcement Learning Theory Basics","text":""},{"location":"CS285/18.Variational%20Inference%20and%20Generative%20Models/","title":"18.Variational Inference and Generative Models","text":""},{"location":"CS285/19.Connection%20between%20Inference%20and%20Control/","title":"19.Connection between Inference and Control","text":""},{"location":"CS285/20.Inverse%20Reinforcement%20Learning/","title":"20.Inverse Reinforcement Learning","text":""},{"location":"CS285/22.Meta-Learning%20and%20Transfer%20Learning/","title":"22.Meta Learning and Transfer Learning","text":""},{"location":"CS285/23.Challenges%20and%20Open%20Problems/","title":"23.Challenges and Open Problems","text":""},{"location":"Math/Bayesian%20Optimization/","title":"Bayesian Optimization","text":""},{"location":"Math/Bayesian%20Optimization/#bo","title":"BO \u662f\u4ec0\u4e48\uff1f","text":"<p>\u8d1d\u53f6\u65af\u4f18\u5316\uff08Bayesian Optimization, BO\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ed1\u76d2\u51fd\u6570\uff08black-box function\uff09\u5168\u5c40\u4f18\u5316\u7684\u987a\u5e8f\u8bbe\u8ba1\u7b56\u7565\uff0c\u4e0d\u9700\u8981\u9884\u5148\u5047\u8bbe\u4efb\u4f55\u51fd\u6570\u5f62\u5f0f\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u4f18\u5316\u8bc4\u4f30\u6210\u672c\u6602\u8d35\u7684\u51fd\u6570\u3002</p> <p>Bayesian optimization is a technique for optimizing expensive, black-box functions that are expensive to evaluate. It is used to optimize a function by constructing a probabilistic model that represents the function and using this model to guide the search for the optimal solution. Bayesian optimization is commonly used in machine learning and data science applications where the goal is to optimize hyperparameters for a model.</p> <p>BO \u5305\u62ec\u4e09\u5927\u5143\u7d20\uff1a</p> <ul> <li>Objective function\uff1aThe function we want to optimize, which is typically a black-box function that is expensive to evaluate.</li> <li>Surrogate model\uff1aA probabilistic model that approximates the objective function based on the evaluations of the function at different points.\uff08\u8bad\u7ec3\u6a21\u578b\u62df\u5408\u6570\u636e\uff09</li> <li>Acquisition function\uff1aA function that guides the search for the optimal solution by balancing exploration and exploitation.\uff08\u9009\u62e9\u4e0b\u4e00\u4e2a\u70b9\uff09</li> </ul>"},{"location":"Math/Bayesian%20Optimization/#bo_1","title":"BO \u7684\u8fc7\u7a0b\uff1a","text":"<p>The process begins by evaluating the objective function at a few initial points to create a dataset. Then, the surrogate model is fitted to this dataset. The acquisition function is used to select the next point to evaluate based on the current model. This process is repeated iteratively, with the model being updated after each evaluation, and the acquisition function guiding the search for the optimal solution.</p> <p>BO \u7684\u601d\u8def\uff1a</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570 \\(f: \\mathcal{X} \\to \\mathbb{R}\\)\uff0c\u6211\u4eec\u9700\u8981\u5728 \\(x \\subseteq \\mathcal{X}\\) \u4e2d\u627e\u5230\uff1a</p> \\[ x^* = \\arg\\max_{x\\in\\mathcal{X}} f(x) \\] <p>BO \u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a sequential decision-making problem\uff08\u5e8f\u5217\u51b3\u7b56\u95ee\u9898\uff09\uff0c\u9700\u8981\u8fdb\u884c\u597d\u591a\u8f6e iterations \u8fed\u4ee3\uff0c\u5728\u6bcf\u4e00\u8f6e iteration \\(t=1,\\cdots,T\\) \u4e2d\uff0c\u6211\u4eec\u9009\u62e9 \\(x_t\\in\\mathcal{X}\\)\uff08\u4f8b\u5982\u4e00\u7ec4\u795e\u7ecf\u7f51\u7edc\u7684\u8d85\u53c2\uff09\uff0c\u7136\u540e query \\(f\\) \u5f97\u5230\u5bf9\u5e94\u7684 \\(f(x_t)\\)\uff0c\u628a\u8fd9\u7ec4 \\((x_t, y_t)\\) \u52a0\u5165\u6211\u4eec\u7684\u6570\u636e\u96c6\u4e2d\uff0c\u63a5\u7740\u8fdb\u884c\u4e0b\u4e00\u8f6e iteration\u3002</p> <p>BO \u7684\u6838\u5fc3\u95ee\u9898\u662f\u5728\u6bcf\u4e00\u8f6e iteration \u4e2d\u9009\u62e9\u89c2\u6d4b\u54ea\u4e00\u4e2a \\(x_t\\)\uff0c\u5728 BO \u4e2d\u901a\u8fc7\u4f18\u5316 acquisition function \\(\\alpha_t\\) \u6765\u9009\u62e9 \\(x_t\\)\uff0c\u4e5f\u5c31\u662f \\(x_t=\\arg\\max_{x\\in\\mathcal{X}} \\alpha_t(x)\\)\u3002</p> <p>exploration-exploitation trade-off\uff1a\u5728\u9009\u62e9 \\(x_t\\) \u7684\u65f6\u5019\uff0c\u6211\u4eec\u65e2\u60f3\u5c1d\u8bd5\u4e4b\u524d\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u7684\u70b9\uff08exploration\uff09\uff0c\u53c8\u60f3\u9009\u62e9\u6839\u636e\u5f53\u524d\u89c2\u6d4b\u70b9\u9884\u6d4b\u7684\u503c\u6bd4\u8f83\u5c0f\u7684\u70b9\uff08exploitation\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u65e2\u9700\u8981\u77e5\u9053 exploitation \u6240\u9700\u7684 \\(f(x)\\)\uff0c\u53c8\u9700\u8981\u77e5\u9053 exploration \u6240\u9700\u7684 uncertainty\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6700\u9002\u5408\u7684\u6a21\u578b\u662f\u9ad8\u65af\u8fc7\u7a0b\uff08Gaussian Process\uff0cGP\uff09\u3002</p>"},{"location":"Math/Bayesian%20Optimization/#gaussian-process-gp","title":"Gaussian Process (GP)","text":"<p>\u5047\u5982\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u8fdb\u884c\u4e86\u524d \\(t-1\\) \u8f6e iteration\uff0c\u83b7\u53d6\u5230\u7684\u6570\u636e\u4e3a \\(\\mathcal{D}_{t-1}=\\{(x_1,y_1),(x_2,y_2),\\cdots,(x_{t-1},y_{t-1})\\}\\)\uff0c\u6b64\u65f6 posterior mean \u548c posterior variance \u5206\u522b\u8868\u793a\u4e3a \\(\\mu_{t-1}(x)\\) \u548c \\(\\sigma_{t-1}^2(x)\\)\uff0c\u5206\u522b\u53ef\u4ee5\u7406\u89e3\u4e3a exploitation \u548c exploration \u7684\u4fe1\u606f\u3002</p> <p>\u6709\u4e86 posterior mean \u548c posterior variance\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97 acquisition function \\(\\alpha_t\\)\u3002</p>"},{"location":"Math/Bayesian%20Optimization/#surrogate-model","title":"Surrogate Model","text":""},{"location":"Math/Bayesian%20Optimization/#acquisition-function","title":"Acquisition Function","text":"<p>Acquisition function \u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li>GP-UCB\uff1a\u57fa\u4e8e MAB \u4e2d\u7684 UCB \u7b97\u6cd5\u63d0\u51fa\uff0c\u7406\u8bba\u5f88\u5b8c\u7f8e\uff0c\u53ef\u4ee5\u57fa\u4e8e MAB \u63a8\u5bfc</li> <li>Expected Improvement (EI)\uff1a\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u5f88\u591a\u65f6\u5019\u6548\u679c\u5f88\u597d</li> <li>Predictive Entropy Search (PES) &amp; Entropy Search (ES)\uff1a\u57fa\u4e8e\u4fe1\u606f\u8bba\u7684\u7b56\u7565</li> <li>Thompson Sampling (TS)\uff1a\u4ece MAB \u8fc1\u79fb\u8fc7\u6765\u7684\u7b97\u6cd5\uff0c\u5728 BO \u4e2d\u7528\u7684\u4e0d\u591a</li> <li>Probability of Improvement (PI)\uff1a\u7ecf\u5178\u7b97\u6cd5\uff0c\u73b0\u5728\u4e0d\u5e38\u7528</li> <li>Knowledge Gradient (KG)</li> <li>Max-Value Entropy Search\uff1a\u5728 PES \u7684\u57fa\u7840\u4e0a\uff0c\u628a \\(x^*\\) \u7684\u5206\u5e03\u6362\u6210 \\(y^*\\) \u7684\u5206\u5e03</li> </ul>"},{"location":"Math/Bayesian%20Optimization/#gaussian-process-upper-confidence-bound-gp-ucb","title":"Gaussian Process-Upper Confidence Bound (GP-UCB)","text":"\\[ x_t=\\arg\\max_{x \\in \\mathcal{X}} \\alpha_t(x) = \\arg\\max_{x \\in \\mathcal{X}} \\mu_{t-1}(x) + \\sqrt{\\beta_t} \\sigma_{t-1}(x) \\] Figure 1. GP-UCB Algorithm"},{"location":"Math/Bayesian%20Optimization/#expected-improvement-ei","title":"Expected Improvement (EI)","text":"<p>EI \u5047\u8bbe\u6ca1\u6709 observation noise\uff0c\u6bcf\u4e2a Iteration \u90fd\u80fd\u76f4\u63a5\u89c2\u5bdf\u5230 \\(f(x_t)\\)\uff0c\u800c\u4e0d\u662f \\(y_t\\)\u3002</p> <p>EI \u7684\u7b56\u7565\u5b9a\u4e49\u4e3a\uff1a</p> \\[ \\begin{aligned} x_t &amp;= \\arg\\max_{x \\in \\mathcal{X}} \\mathbb{E}_{f(x) \\sim \\mathcal{N}(\\mu_{t-1}(x), \\sigma_{t-1}^2(x))} [\\max(f(x)-f_{t-1}^{+}, 0)] \\\\ &amp;=\\arg \\max _{x \\in \\mathcal{X}}(\\mu_{t-1}(x)-f_{t-1}^{+}) \\Phi(\\frac{\\mu_{t-1}(x)-f_{t-1}^{+}}{\\sigma_{t-1}(x)}) + \\sigma_{t-1}(x) \\phi(\\frac{\\mu_{t-1}(x)-f_{t-1}^{+}}{\\sigma_{t-1}(x)}) \\end{aligned} \\]"},{"location":"Math/Bayesian%20Optimization/#predictive-entropy-search-pes-entropy-search-es","title":"Predictive Entropy Search (PES) &amp; Entropy Search (ES)","text":""},{"location":"Math/Bayesian%20Optimization/#thompson-sampling-ts","title":"Thompson Sampling (TS)","text":""},{"location":"Math/Bayesian%20Optimization/#probability-of-improvement-pi","title":"Probability of Improvement (PI)","text":""},{"location":"Math/Bayesian%20Optimization/#knowledge-gradient-kg","title":"Knowledge Gradient (KG)","text":""},{"location":"Math/Bayesian%20Optimization/#max-value-entropy-search","title":"Max-Value Entropy Search","text":""},{"location":"Math/Bayesian%20Optimization/#smbo","title":"SMBO","text":"<p>Sequential Model-based Optimization (SMBO) \u662f\u8d1d\u53f6\u65af\u4f18\u5316\u7684\u6700\u7b80\u5f62\u5f0f</p> <p>Problem Formulation\uff1a</p> <p>\u5047\u8bbe\u641c\u7d22\u7a7a\u95f4\u4e3a \\(\\mathcal{X}\\)\uff0c\\(\\mathcal{D}\\) \u662f\u7531\u6570\u636e\u5bf9 \\((\\mathbf{x}_i, y_i)\\) \u7ec4\u6210\u7684\u6570\u636e\u96c6\uff0c</p>"},{"location":"Math/Bayesian%20Optimization/#_1","title":"\u4f8b\u5b50","text":"<p>\u5047\u5982\u73b0\u5728</p>"},{"location":"Math/Bayesian%20Optimization/#bo_2","title":"BO \u7684\u4f18\u70b9","text":""},{"location":"Math/Bayesian%20Optimization/#_2","title":"\u5e94\u7528","text":""},{"location":"Math/Bayesian%20Optimization/#_3","title":"\u53c2\u8003\u6587\u732e","text":"<p>\u8d1d\u53f6\u65af\u4f18\u5316/Bayesian Optimization - \u8d1d\u53f6\u65af\u6709\u8bdd\u7684\u6587\u7ae0 - \u77e5\u4e4e https://zhuanlan.zhihu.com/p/76269142</p> <p>\u4e00\u6587\u770b\u61c2\u8d1d\u53f6\u65af\u4f18\u5316/Bayesian Optimization - \u591a\u591a\u7b14\u8bb0\u7684\u6587\u7ae0 - \u77e5\u4e4e https://zhuanlan.zhihu.com/p/359392849</p> <p>https://en.wikipedia.org/wiki/Bayesian_optimization</p> <p>https://www.cnblogs.com/marsggbo/p/9866764.html</p> <p>Srinivas, N., et. al. Gaussian process optimization in the bandit setting: No regret and experimental design. ICML 2010.</p>"},{"location":"Math/Optimal%20Transport/","title":"Optimal Transport","text":"<p>\u5047\u8bbe\u4e24\u4e2a\u5728\u57df \\(\\Omega \\in \\mathbb{R}^d\\) \u7684\u5206\u5e03 \\(\\mathbb{P}\\) \u548c \\(\\mathbb{Q}\\)\uff0c\u8bbe \\(d(\\mathbf{x}, \\mathbf{y})\\) \u4e3a\u975e\u8d1f\u8fde\u7eed\u7684\u4ee3\u4ef7\u51fd\u6570\u6216\u5ea6\u91cf\u3002</p> <p>OT \u7528\u6570\u5b66\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\u5bfb\u627e\u4e00\u4e2a\u6700\u5c0f\u7684\u4ece \\(\\mathbb{Q}\\) \u5230 \\(\\mathbb{P}\\) \u7684\u8f6c\u79fb\u4ee3\u4ef7\uff1a $$ \\mathcal{M}d(\\mathbb{Q}, \\mathbb{P}) := \\min \\mathbb{Q}=\\mathbb{P}} \\mathbb{E}_{\\mathbf{x} \\sim \\mathbb{Q}}[d(\\mathbf{x}, T(\\mathbf{x}))] $$</p>"},{"location":"Math/Optimal%20Transport/#_1","title":"\u79bb\u6563\u5206\u5e03","text":"<p>\u5bf9\u4e8e\u79bb\u6563\u5206\u5e03 \\(\\mathbf{\\mu} := \\sum_{i=1}^m u_i \\delta_{\\mathbf{x}_i}\\) \u548c \\(\\mathbf{\\nu} := \\sum_{j=1}^n v_j \\delta_{\\mathbf{y}_j}\\)\uff0c\u5176\u4e2d \\(\\delta_{\\mathbf{x}}\\) \u8868\u793a\u4ee5 \\(\\mathbf{x}\\) \u4e3a\u4e2d\u5fc3\u7684 Dirac \u6d4b\u5ea6\u3002\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u5047\u8bbe \\(n \\le m\\)\uff0c\u8003\u8651\u76f8\u5bf9\u4e8e\uff08w.r.t.\uff09\u5ea6\u91cf \\(d\\) \u7684 Wasserstein \u8ddd\u79bb \\(\\mathcal{W}_d(\\mathbb{P}, \\mathbb{Q})\\)\u3002</p> <p>\u4e24\u4e2a\u79bb\u6563\u5206\u5e03 \\(\\mathbb{P}\\) \u548c \\(\\mathbb{Q}\\) \u4e4b\u95f4\u7684 (squared) Wasserstein \u8ddd\u79bb\u4e3a\uff1a $$ \\begin{aligned} \\mathcal{D}w(\\boldsymbol{\\mu}, \\boldsymbol{\\nu}) &amp;= \\inf \\in \\Pi(\\boldsymbol{\\mu}, \\boldsymbol{\\nu})} \\mathbb{E}{(\\boldsymbol{x}, \\boldsymbol{y}) \\sim \\boldsymbol{\\gamma}}[c(\\boldsymbol{x}, \\boldsymbol{y})] \\ &amp;= \\min \\in \\Pi(\\mathbf{u}, \\mathbf{v})} \\sum_{i=1}^m \\sum_{j=1}^n \\mathbf{T}_{ij} \\cdot c(\\boldsymbol{x}_i, \\boldsymbol{y}_j) \\end{aligned} $$</p> <p>$$ \\mathcal{W}^2(\\mathbf{\\mu}, \\mathbf{\\nu}) = \\min_{\\mathbf{T} \\in \\Pi(\\mathbf{u}, \\mathbf{v})} \\sum_{i=1}^m \\sum_{j=1}^{n} \\mathbf{T}_{ij} \\cdot c(\\mathbf{x}_i, \\mathbf{y}_j) $$ \u5176\u4e2d \\(c: \\mathcal{X} \\times \\mathcal{Y} \\to \\mathbb{R}\\) \u662f\u4e24\u4e2a\u7279\u5f81\u5411\u91cf\u7684\u4ee3\u4ef7\u5ea6\u91cf\uff08cost metric\uff09\uff0c\\(\\Pi(\\mathbf{u}, \\mathbf{v})=\\left\\{\\mathbf{T} \\in \\mathbb{R}_{+}^{m \\times n} \\mid \\mathbf{T} \\mathbf{1}_n=\\mathbf{u}, \\mathbf{T}^{\\top} \\mathbf{1}_m=\\mathbf{v}\\right\\}\\)\uff0c\\(\\mathbf{1}_n\\) \u8868\u793a \\(n\\)-dimensional all-one vector\u3002</p> <p>Gromov-Wasserstein distance (GWD) between \\(\\boldsymbol{\\mu}, \\boldsymbol{\\nu}\\) is: $$ \\begin{aligned} \\mathcal{D}{gw}(\\boldsymbol{\\mu}, \\boldsymbol{\\nu}) &amp;= \\inf \\in \\Pi(\\boldsymbol{\\mu}, \\boldsymbol{\\nu})} \\mathbb{E}{(\\boldsymbol{x}, \\boldsymbol{y}) \\sim \\boldsymbol{\\gamma},(\\boldsymbol{x}^{\\prime}, \\boldsymbol{y}^{\\prime}) \\sim \\boldsymbol{\\gamma}} [L(\\boldsymbol{x}, \\boldsymbol{y}, \\boldsymbol{x}^{\\prime}, \\boldsymbol{y}^{\\prime})] \\ &amp; =\\min} \\in \\Pi(\\mathbf{u}, \\mathbf{v})} \\sum_{i, i^{\\prime}, j, j^{\\prime}} \\hat{\\mathbf{T}}{ij} \\hat{\\mathbf{T}} j^{\\prime}} L(\\boldsymbol{x}_i, \\boldsymbol{y}_j, \\boldsymbol{x}_i^{\\prime}, \\boldsymbol{y}_j^{\\prime}) \\end{aligned} $$ \u5176\u4e2d \\(L(\\boldsymbol{x}_i, \\boldsymbol{y}_j, \\boldsymbol{x}_i^{\\prime}, \\boldsymbol{y}_j^{\\prime}) = \\left\\|c_1(\\boldsymbol{x}_i, \\boldsymbol{x}_i^{\\prime}) - c_2(\\boldsymbol{y}_i, \\boldsymbol{y}_i^{\\prime})\\right\\|\\)\u3002</p>"},{"location":"Offline%20RL/1.BCQ/","title":"Off-Policy Deep Reinforcement Learning without Exploration (ICML'19)","text":"<p>BCQ\u51fa\u81ea Off-Policy Deep Reinforcement Learning without Exploration\uff0cICML19\u7684paper\uff0c\u4e00\u4f5cFujimoto\uff08TD3\u7684\u4f5c\u8005\uff09\u3002\u4e2a\u4eba\u89c9\u5f97\u8fd9\u7bc7paper\u975e\u5e38\u597d\uff0c\u7cfb\u7edf\u5730\u7814\u7a76\u4e86Offline RL\u7684\u6838\u5fc3\u95ee\u9898\u5e76\u7ed9\u51fa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u5373BCQ\uff0cBCQ\u57fa\u672c\u786e\u5b9a\u5e76\u5f15\u5bfc\u4e86Offline RL\u7684\u4e00\u4e2a\u4e3b\u57fa\u8c03 -- \u201cconservation\u201d\uff08\u5373\u5728\u5b66\u7684policy\u8f93\u51fa\u7684action\u4e0d\u8981\u504f\u79bb\u91c7\u96c6\u6570\u636e\u96c6\u7684behavior policy\u7684action\uff09\u3002\u597d\u7684paper\uff0c\u503c\u5f97\u518d\u8bfb\u3002</p> <p>Note</p> <p>ddd</p> <p>Note</p> <pre><code>ddd\n</code></pre> <p>Note</p> <p>123</p>"},{"location":"Offline%20RL/2.BEAR/","title":"RL","text":"<p>RL.</p>"},{"location":"Offline%20RL/3.Diffuser/","title":"RL","text":"<p>RL.</p>"},{"location":"Offline%20RL/4.Decision%20Transformer/","title":"RL","text":"<p>RL.</p>"},{"location":"Offline%20RL/5.Trajectory%20Transformer/","title":"RL","text":"<p>RL.</p>"},{"location":"Offline%20RL/6.Dicision%20Diffuser/","title":"RL","text":"<p>RL.</p>"},{"location":"Reinforcement%20Learning/1.Basis/","title":"\u5f3a\u5316\u5b66\u4e60\u57fa\u7840","text":"<p>...</p>"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b","text":""},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_2","title":"\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b","text":""},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_3","title":"\u9a6c\u5c14\u53ef\u592b\u6027\u8d28","text":"<p>\u4e0b\u4e00\u72b6\u6001\u53ea\u53d6\u51b3\u4e8e\u4e0a\u4e00\u72b6\u6001\uff0c\u800c\u4e0e\u4e4b\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002</p> <p>\u5047\u8bbe\u968f\u673a\u53d8\u91cf \\(X_0, X_1, \\dots, X_T\\) \u6784\u6210\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\uff0c\u5219</p> \\[ p(X_{t+1}=x_{t+1} \\mid X_t=x_t, \\dots, X_0=x_0) = p(X_{t+1}=x_{t+1} \\mid X_t=x_t) \\] <p>\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff08Markov Process\uff0cMP\uff09\u53ef\u4ee5\u7528\u4e00\u4e2a\u5143\u7ec4 \\(&lt;\\mathcal{S}, \\mathbf{P}&gt;\\) \u8868\u793a\uff0c\u5176\u4e2d \\(\\mathcal{S}\\) \u4e3a\u6709\u9650\u72b6\u6001\u96c6\uff08State Set\uff09\uff0c\\(\\mathbf{P}\\) \u4e3a\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\uff08State Transition Matrix\uff09\u3002</p>"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_4","title":"\u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u8fc7\u7a0b","text":"<p>\u9a6c\u5c14\u53ef\u592b\u5956\u52b1\u8fc7\u7a0b\uff08Markov Reward Process\uff0cMRP\uff09\u5c06 MDP \u4ece \\(&lt;\\mathcal{S}, \\mathbf{P}&gt;\\) \u62d3\u5c55\u5230 \\(&lt;\\mathcal{S}, \\mathbf{P}, R, \\gamma&gt;\\)\uff0c\u5176\u4e2d \\(R\\) \u548c \\(\\gamma\\) \u5206\u522b\u8868\u793a\u5956\u52b1\u51fd\u6570\uff08Reward Function\uff09\u548c\u6298\u6263\u56e0\u5b50\uff08Discount Factor\uff09\u3002</p> <p>\u56de\u62a5\uff08Return\uff09\u662f\u667a\u80fd\u4f53\u8f68\u8ff9\u7684\u7d2f\u79ef\u5956\u52b1\uff08Cumulative Reward\uff09\u3002\u5047\u8bbe\u65f6\u523b \\(t\\) \u540e\u7684\u5956\u52b1\u5206\u522b\u4e3a \\(R_{t+1}, R_{t+2}, R_{t+3}, \\dots\\)\uff0c\u5219\u65f6\u523b \\(t\\) \u7684\u975e\u6298\u6263\u5316\u56de\u62a5\uff08Undiscounted Return\uff09\u5b9a\u4e49\u4e3a</p> \\[ G_t = R_{t+1} + R_{t+2} + R_{t+3} + \\dots = \\sum_{k=0}^{\\infty} R_{t+k+1} \\] <p>\u7531\u4e8e\u8ddd\u79bb\u5f53\u524d\u65f6\u523b\u8f83\u8fd1\u7684\u65f6\u95f4\u6b65\u6bd4\u8f83\u8fdc\u65f6\u95f4\u6b65\u7684\u5f71\u54cd\u66f4\u5927\uff0c\u56e0\u6b64\u5f15\u5165\u6298\u6263\u56e0\u5b50 \\(\\gamma\\)\uff0c\u5bf9\u4e0d\u540c\u65f6\u95f4\u6b65\u7684\u5956\u52b1\u8fdb\u884c\u52a0\u6743\uff0c\u6298\u6263\u5316\u56de\u62a5\uff08Discounted Return\uff09\u5b9a\u4e49\u4e3a</p> \\[ G_t = R_{t+1} + \\gamma R_{t+2} + \\gamma^2 R_{t+3} + \\dots = \\sum_{k=0}^{\\infty} \\gamma^k R_{t+k+1} \\] <p>\u4ef7\u503c\u51fd\u6570\uff08Value Function\uff09\u5b9a\u4e49\u4e3a\u72b6\u6001\u7684\u671f\u671b\u56de\u62a5\uff0c\u8bb0\u7b56\u7565 \\(\\pi\\) \u4e0b\u72b6\u6001 \\(s\\) \u7684\u4ef7\u503c\u51fd\u6570\u4e3a \\(V^\\pi(s)\\)\uff0c\u5373\u4ece\u72b6\u6001 \\(s\\) \u5f00\u59cb\uff0c\u667a\u80fd\u4f53\u6309\u7167\u7b56\u7565 \\(\\pi\\) \u8fdb\u884c\u51b3\u7b56\u5f97\u5230\u56de\u62a5\u7684\u671f\u671b\u503c\uff1a </p> \\[ V^\\pi(s) = \\mathbb{E}_{\\tau \\sim \\pi} [R(\\tau) \\mid S_0=s] \\]"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_5","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b","text":"<p>\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08Markov Decision Process\uff0cMDP\uff09\u5728 MRP \u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u52a8\u4f5c\u7a7a\u95f4\uff0c\u8868\u793a\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4 \\(\\mathcal{M} = (\\mathcal{S}, \\mathcal{A}, \\mathbf{P}, R, \\gamma)\\)\uff0c\u5176\u4e2d \\(\\mathcal{A}\\) \u4e3a\u6709\u9650\u52a8\u4f5c\u96c6\u5408\uff08Action Set\uff09\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u4e3a\uff1a</p> \\[ p(s' \\mid s, a) = p(S_{t+1}=s' \\mid S_t=s, A_t=a) \\] <p>\u5956\u52b1\u4e3a\uff1a</p> \\[ R_t = R(S_t, A_t) \\] <p>\u7b56\u7565\uff08Policy\uff09\\(\\pi(a \\mid s)\\)\u662f\u4e00\u4e2a\u4ece\u72b6\u6001 \\(s \\in \\mathcal{S}\\) \u5230\u52a8\u4f5c \\(a \\in \\mathcal{A}\\) \u7684\u6620\u5c04\u3002</p> \\[ \\pi(a \\mid s) = p(A_t=a \\mid S_t=s) \\] <p>\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff08Action-Value Function\uff09\u5b9a\u4e49\u4e3a\u5728\u67d0\u4e2a\u72b6\u6001\u91c7\u53d6\u67d0\u4e2a\u52a8\u4f5c\u7684\u671f\u671b\u56de\u62a5\uff0c\u8bb0\u7b56\u7565 \\(\\pi\\) \u4e0b\u5728\u72b6\u6001 \\(s\\) \u6267\u884c\u52a8\u4f5c \\(a\\) \u7684\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u4e3a \\(Q^\\pi(s, a)\\)\uff0c\u5219</p> \\[ \\begin{aligned} Q^\\pi (s, a) &amp;= \\mathbb{E}_{\\tau\\sim\\pi} \\left[ R(\\tau) \\mid S_0=s, A_0=a \\right] \\\\ &amp;= \\mathbb{E}_{A_t\\sim\\pi(\\cdot\\mid S_t)} \\left[ \\sum_{t=0}^{\\infty} \\gamma^t R(S_t, A_t) \\mid S_0=s, A_0=a \\right] \\end{aligned} \\] <p>\u4ef7\u503c\u51fd\u6570 \\(v_\\pi(s)\\) \u548c\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(q_\\pi(s,a)\\) \u6709\u5982\u4e0b\u5173\u7cfb\uff1a</p> \\[ \\begin{aligned} q_\\pi (s, a) &amp;= \\mathbb{E}_{\\tau\\sim\\pi} [R(\\tau) \\mid S_0=s, A_0=a] \\\\ v_\\pi (s) &amp;= \\mathbb{E}_{a\\sim\\pi} [q_\\pi (s, a)] \\end{aligned} \\]"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#partially-observed-markov-decision-process-pomdp","title":"Partially Observed Markov Decision Process (POMDP)","text":"<p>\\(\\mathcal{M}=\\{\\mathcal{S},\\mathcal{A},\\mathcal{O},\\mathcal{T},\\mathcal{E},r,\\gamma\\}\\)</p> <p>State space: \\(\\mathcal{S}\\), state \\(s \\in \\mathcal{S}\\) (discrete or continuous)</p> <p>Action space: \\(\\mathcal{A}\\), action \\(a \\in \\mathcal{A}\\) (discrete or continuous)</p> <p>Observation space: \\(\\mathcal{O}\\), observation \\(o \\in \\mathcal{O}\\) (discrete or continuous)</p> <p>Transition operator: \\(\\mathcal{T}\\)</p> <p>Emission probability: \\(p(o_t\\mid s_t)\\)</p> <p>Reward function: \\(r: \\mathcal{S}\\times\\mathcal{A}\\to\\mathbb{R}\\)</p>"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_6","title":"\u8d1d\u5c14\u66fc\u65b9\u7a0b","text":"<p>\\(v_\\pi\\) \u7684\u8d1d\u5c14\u66fc\u65b9\u7a0b\uff08Bellman Equation\uff09\u4e3a</p> \\[ \\begin{aligned} v_\\pi(s) &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R\\left(\\tau_{t: T}\\right) \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma R_{t+1}+\\gamma^2 R_{t+2}+\\cdots+\\gamma^{\\mathrm{T}} R_T \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma\\left(R_{t+1}+\\gamma R_{t+2}+\\cdots+\\gamma^{T-1} R_T\\right) \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma R_{\\tau_{t+1: T}} \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{A_t \\sim \\pi\\left(\\cdot \\mid S_t\\right), S_{t+1} \\sim p\\left(\\cdot \\mid S_t, A_t\\right)}\\left[R_t+\\gamma \\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_{\\tau_{t+1: T}}\\right] \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{A_t \\sim \\pi\\left(\\cdot \\mid S_t\\right), S_{t+1} \\sim p\\left(\\cdot \\mid S_t, A_t\\right)}\\left[R_t+\\gamma v_\\pi\\left(S_{t+1}\\right) \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[r+\\gamma v_\\pi\\left(s^{\\prime}\\right)\\right] \\end{aligned} \\] <p>\\(q_\\pi\\) \u7684\u8d1d\u5c14\u66fc\u65b9\u7a0b\u4e3a</p> \\[ \\begin{aligned} q_\\pi(s, a) &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R\\left(\\tau_{t: T}\\right) \\mid S_t=s, A_t=a\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma R_{t+1}+\\gamma^2 R_{t+2}+\\cdots+\\gamma^{\\mathrm{T}} R_T \\mid S_t=s, A_t=a\\right] \\\\ &amp;=\\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma\\left(R_{t+1}+\\gamma R_{t+2}+\\cdots+\\gamma^{T-1} R_T\\right) \\mid S_t=s, A_t=a\\right] \\\\ &amp;=\\mathbb{E}_{S_{t+1} \\sim p\\left(\\cdot \\mid S_t, A_t\\right)}\\left[R_t+\\gamma \\mathbb{E}_{a \\sim \\pi(\\cdot \\mid s), s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_{\\tau_{t+1: T}}\\right] \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{S_{t+1} \\sim p\\left(\\cdot \\mid S_t, A_t\\right)}\\left[R_t+\\gamma \\mathbb{E}_{A_{t+1} \\sim \\pi\\left(\\cdot \\mid S_{t+1}\\right)}\\left[q_\\pi\\left(S_{t+1}, A_{t+1}\\right)\\right] \\mid S_t=s\\right] \\\\ &amp;=\\mathbb{E}_{s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R(s, a)+\\gamma \\mathbb{E}_{a^{\\prime} \\sim \\pi\\left(\\cdot \\mid s^{\\prime}\\right)}[q_\\pi(s^\\prime, a^{\\prime})]\\right] \\end{aligned} \\]"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_7","title":"\u6700\u4f18\u7b56\u7565\u548c\u6700\u4f18\u4ef7\u503c\u51fd\u6570","text":"<p>\u82e5\u5bf9\u4e8e\u6240\u6709\u7684 \\(s \\in \\mathcal{S}\\)\uff0c\\(\\pi \\ge \\pi'\\)\uff0c\u6709 \\(v_\\pi(s) \\ge v_{\\pi'}(s)\\) \u6210\u7acb\uff0c\u5219\u79f0\u7b56\u7565 \\(\\pi\\) \u4e0d\u52a3\u4e8e\u7b56\u7565 \\(\\pi'\\)\u3002</p> <p>\u82e5\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u7b56\u7565\u4e0d\u52a3\u4e8e\u5176\u4ed6\u6240\u6709\u7b56\u7565\uff0c\u5219\u8fd9\u79cd\u7b56\u7565\u4e3a\u6700\u4f18\u7b56\u7565\uff0c\u8bb0\u5b83\u4eec\u4e3a \\(\\pi_*\\)\uff0c\u5b83\u4eec\u7684\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u4e3a\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570\uff08Optimal State-Value Function\uff09\uff0c\u8bb0\u4e3a \\(v_*\\)\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a\u5bf9\u4e8e \\(\\forall s \\in \\mathcal{S}\\)\uff0c</p> \\[ v_*(s) = \\max_\\pi v_\\pi(s) \\] <p>\u6700\u4f18\u7684\u7b56\u7565\u4e5f\u5171\u4eab\u76f8\u540c\u7684\u6700\u4f18\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff08Optimal Action-Value Function\uff09\uff0c\u8bb0\u4e3a \\(q_*\\)\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a\u5bf9\u4e8e \\(\\forall s \\in \\mathcal{S}, a \\in \\mathcal{A}\\)\uff0c</p> \\[ q_*(s, a) = \\max_\\pi q_\\pi(s, a) \\] <p>\u7528 \\(v_*\\) \u8868\u793a \\(q_*\\)\uff1a</p> \\[ q_*(s, a) = \\mathbb{E} \\left[ R_{t+1} + \\gamma v_*(S_{t+1}) \\mid S_t=s, A_t=a \\right] \\]"},{"location":"Reinforcement%20Learning/2.Markov%20Decision%20Process/#_8","title":"\u8d1d\u5c14\u66fc\u6700\u4f18\u65b9\u7a0b","text":"<p>\u6700\u4f18\u72b6\u6001\u4ef7\u503c\u51fd\u6570 \\(v_*\\) \u7684\u8d1d\u5c14\u66fc\u6700\u4f18\u65b9\u7a0b\u4e3a</p> \\[ v_*(s) = \\max_a \\mathbb{E}_{s^\\prime\\sim p(\\cdot\\mid s,a)} \\left[ R(s,a) + \\gamma v_*(s^\\prime) \\right] \\] <p>\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> \\[ \\begin{aligned} v_*(s) &amp;=\\max _a \\mathbb{E}_{\\pi^*, s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R\\left(\\tau_{t: T}\\right) \\mid S_t=s\\right] \\\\ &amp;=\\max _a \\mathbb{E}_{\\pi^*, s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma R_{t+1}+\\gamma^2 R_{t+2}+\\cdots+\\gamma^{\\mathrm{T}} R_T \\mid S_t=s\\right] \\\\ &amp;=\\max _a \\mathbb{E}_{\\pi^*, s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma R_{\\tau_{t+1: T}} \\mid S_t=s\\right] \\\\ &amp;=\\max _a \\mathbb{E}_{s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma \\max _{a^{\\prime}} \\mathbb{E}_{\\pi^*, s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_{\\tau_{t+1: T}}\\right] \\mid S_t=s\\right] \\\\ &amp;=\\max _a \\mathbb{E}_{s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R_t+\\gamma v_*\\left(S_{t+1}\\right) \\mid S_t=s\\right] \\\\ &amp;=\\max _a \\mathbb{E}_{s^{\\prime} \\sim p(\\cdot \\mid s, a)}\\left[R(s,a)+\\gamma v_*(s^\\prime) \\right] \\end{aligned} \\] <p>\u6700\u4f18\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(q_*\\) \u7684\u8d1d\u5c14\u66fc\u6700\u4f18\u65b9\u7a0b\u4e3a</p> \\[ q_*(s,a) = \\mathbb{E}_{s^\\prime\\sim p(\\cdot\\mid s,a)} [R(s,a) + \\gamma \\max_{a^\\prime} q_*(s^\\prime, a^\\prime)] \\] <p>\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> \\[ \\begin{aligned} q_*(s,a) &amp;= \\\\ \\end{aligned} \\]"},{"location":"Reinforcement%20Learning/3.Dynamic%20Programming/","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff0cDP\uff09\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4f7f\u7528\u4ef7\u503c\u51fd\u6570\u7ed3\u6784\u5316\u5730\u641c\u7d22\u6700\u4f18\u7b56\u7565\u3002</p>"},{"location":"Reinforcement%20Learning/3.Dynamic%20Programming/#_2","title":"\u7b56\u7565\u8fed\u4ee3","text":"<p>\u7b56\u7565\u8fed\u4ee3\uff08Policy Iteration\uff09\u7531\u7b56\u7565\u8bc4\u4f30\uff08Policy Evaluation\uff09\u548c\u7b56\u7565\u6539\u8fdb\uff08Policy Improvement\uff09\u4e24\u4e2a\u6b65\u9aa4\u7ec4\u6210\u3002</p> <p>\u7b56\u7565\u8bc4\u4f30\uff1a</p> \\[ v_\\pi(s) = \\mathbb{E}_\\pi [R_t + \\gamma v_\\pi(S_{t+1}) \\mid S_t=s] \\] <p>\u7b56\u7565\u6539\u8fdb\uff1a</p> \\[ \\pi^\\prime(s) = \\text{greedy}(v_\\pi) = \\arg\\max_{a\\in\\mathcal{A}} q_\\pi(s,a) \\] <p>\u4ef7\u503c\u51fd\u6570\u66f4\u65b0\u53ef\u4ee5\u88ab\u8d1d\u5c14\u66fc\u671f\u671b\u56de\u6eaf\u7b97\u5b50 \\(\\mathcal{T}^\\pi\\) \u91cd\u5199\uff1a</p> \\[ \\left(\\mathcal{T}^\\pi V\\right)(s)=\\left(\\mathcal{R}^\\pi+\\gamma \\mathcal{P}^\\pi V\\right)(s)=\\sum_{r, s^{\\prime}}(r+\\gamma V(s^{\\prime})) P(r, s^{\\prime} \\mid s, \\pi(s)) \\]"},{"location":"Reinforcement%20Learning/3.Dynamic%20Programming/#_3","title":"\u4ef7\u503c\u8fed\u4ee3","text":"<p>\u7b56\u7565\u8fed\u4ee3\u7684\u7f3a\u70b9\u662f\u6bcf\u4e00\u6b65\u8fed\u4ee3\u90fd\u8fdb\u884c\u4e86\u7b56\u7565\u8bc4\u4f30\uff0c\u9700\u8981\u591a\u6b21\u904d\u5386\u72b6\u6001\u96c6\u5408\u3002</p> <p>\u4ef7\u503c\u8fed\u4ee3\uff08Value Iteration\uff09\u7684\u7406\u8bba\u57fa\u7840\u662f\u6700\u4f18\u6027\u539f\u5219\u3002</p> <p>\u901a\u8fc7\u4e00\u6b65\u5b8c\u5168\u56de\u6eaf\uff08One-Step Full Backup\uff09\uff1a</p> \\[ v_*(s) = \\max_{a\\in\\mathcal{A}} R(s,a) + \\gamma \\sum_{s^\\prime\\in\\mathcal{S}} P(s^\\prime\\mid s,a) v_*(s^\\prime) \\] <p>\u8d1d\u5c14\u66fc\u6700\u4f18\u7b97\u5b50 \\(\\mathcal{T}^*\\) \u4e3a\uff1a</p> \\[ \\left(\\mathcal{T}^* V\\right)(s) = (\\max _{a \\in \\mathcal{A}} \\mathcal{R}^a+\\gamma \\mathcal{P}^a V)(s)=\\max _{a \\in \\mathcal{A}} R(s, a)+\\gamma \\sum_{s^{\\prime} \\in \\mathcal{S}} P(s^{\\prime} \\mid s, a) V(s^{\\prime}) \\]"},{"location":"Reinforcement%20Learning/4.Monte%20Carlo%20Methods/","title":"\u8499\u7279\u5361\u7f57","text":"<p>\u8499\u7279\u5361\u7f57\uff08Monte Carlo\uff0cMC\uff09\u662f\u4e00\u79cd\u901a\u8fc7\u7ecf\u9a8c\u5b66\u4e60\u7684\u65b9\u6cd5\u3002\u4e0e DP \u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e MC \u4e0d\u9700\u8981\u77e5\u9053\u73af\u5883\u52a8\u6001\u53d8\u5316\u7684\u5148\u9a8c\u4fe1\u606f\uff0c\u901a\u8fc7\u5e73\u5747\u6837\u672c\u56de\u62a5\u6765\u89e3\u51b3\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e\u6837\u672c\uff08Sampling-Based\uff09\u7684\u65b9\u6cd5\u3002</p>"},{"location":"Reinforcement%20Learning/4.Monte%20Carlo%20Methods/#_2","title":"\u8499\u7279\u5361\u7f57\u9884\u6d4b","text":"<p>\u9996\u6b21\u8499\u7279\u5361\u7f57\uff08First-Visit Monte Carlo\uff09\u548c\u6bcf\u6b21\u8499\u7279\u5361\u7f57\uff08Every-Visit Monte Carlo\uff09\u3002</p> <p>\u9996\u6b21\u8499\u7279\u5361\u7f57\u53ea\u8003\u8651\u6bcf\u4e2a\u56de\u5408\u7b2c\u4e00\u6b21\u8bbf\u95ee\u72b6\u6001 \\(s\\)\uff0c\u800c\u6bcf\u6b21\u8499\u7279\u5361\u7f57\u8003\u8651\u6bcf\u6b21\u8bbf\u95ee\u72b6\u6001 \\(s\\)\u3002</p>"},{"location":"Reinforcement%20Learning/4.Monte%20Carlo%20Methods/#_3","title":"\u8499\u7279\u5361\u7f57\u63a7\u5236","text":"<p>\u8499\u7279\u5361\u7f57\u63a7\u5236\u5305\u62ec\u7b56\u7565\u8bc4\u4f30\u4e0e\u7b56\u7565\u63d0\u5347\uff0c\u5176\u4e2d\u7b56\u7565\u8bc4\u4f30\u4e0e DP \u76f8\u540c\u3002</p>"},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/","title":"\u65f6\u5e8f\u5dee\u5206\u5b66\u4e60","text":"<p>\u65f6\u5e8f\u5dee\u5206\uff08Temporal-Difference\uff0cTD\uff09\u5b66\u4e60\u7ed3\u5408\u4e86\u52a8\u6001\u89c4\u5212\u548c\u8499\u7279\u5361\u7f57\u7684\u601d\u60f3\uff0c\u662f\u5f3a\u5316\u5b66\u4e60\u4e2d\u6700\u6838\u5fc3\u3001\u6700\u65b0\u9896\u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e MC\uff0cTD \u4e0d\u4ec5\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u7ecf\u9a8c\u5b66\u4e60\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u77e5\u9053\u73af\u5883\u52a8\u6001\u5148\u9a8c\u77e5\u8bc6\u3002\u7c7b\u4f3c\u4e8e DP\uff0cTD \u4f7f\u7528\u4e86 Bootstrapping\uff08\u81ea\u4e3e\u6cd5\uff09\uff0c\u901a\u8fc7\u5df2\u5f97\u5230\u7684\u5176\u4ed6\u72b6\u6001\u7684\u4f30\u8ba1\u503c\u6765\u66f4\u65b0\u5f53\u524d\u7684\u4ef7\u503c\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u4ea4\u4e92\u7684\u6700\u7ec8\u7ed3\u679c\u3002</p>"},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/#_2","title":"\u65f6\u5e8f\u5dee\u5206\u9884\u6d4b","text":"<p>\u65f6\u5e8f\u5dee\u5206\u901a\u8fc7\u76ee\u6807\u503c\u548c\u4f30\u8ba1\u503c\u5728\u4e0d\u540c\u65f6\u95f4\u6b65\u4e0a\u7684\u5dee\u5f02\u8fdb\u884c\u5b66\u4e60\u3002</p>"},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/#td0","title":"TD(0)","text":"<p>\u6700\u7b80\u5355\u7684 TD \u65b9\u6cd5\u5728\u72b6\u6001\u8f6c\u79fb\u5230 \\(S_{t+1}\\) \u5e76\u6536\u5230\u5956\u52b1 \\(R_{t+1}\\) \u65f6\u4f1a\u505a\u5982\u4e0b\u66f4\u65b0\uff1a $$ V(S_t) \\leftarrow V(S_t) + \\alpha [R_{t+1} + \\gamma V (S_{t+1} ) - V(S_t)] $$ \u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a \\(TD(0)\\) \u6216\u5355\u6b65 \\(TD\\)\u3002MC \u7684\u66f4\u65b0\u76ee\u6807\u4e3a \\(G_t\\)\uff0c\u800c TD \u7684\u66f4\u65b0\u76ee\u6807\u4e3a \\(R_{t+1} + \\gamma V(S_{t+1})\\)\u3002</p>"},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/#tdlambda","title":"TD(\\(\\lambda\\))","text":""},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/#sarsaon-policy-td","title":"Sarsa\uff1aOn-policy TD \u63a7\u5236","text":"<p>\u5bf9\u4e8e TD \u63a7\u5236\uff0c\u6211\u4eec\u9700\u8981\u5c06\u72b6\u6001\u5230\u72b6\u6001\u7684\u8f6c\u79fb\u53d8\u4e3a\u72b6\u6001-\u52a8\u4f5c\u5bf9\u7684\u4ea4\u66ff\uff0c\u66f4\u65b0\u89c4\u5219\u4e3a\uff1a $$ Q(S_t, A_t) \\leftarrow Q(S_t, A_t) + \\alpha [R_{t+1} + \\gamma Q(S_{t+1}, A_{t+1}) - Q(S_t, A_t)] $$ n \u6b65 Sarsa \u7684 TD target\uff1a $$ G_{t: t+n} = R_{t+1} + \\gamma R_{t+2} + \\cdots + \\gamma^{n-1} R_{t+n} + \\gamma^n Q_{t+n-1}(S_{t+n}, A_{t+n}) $$</p>"},{"location":"Reinforcement%20Learning/5.Temporal-Difference%20Learning/#q-learningoff-policy-td","title":"Q-Learning\uff1aOff-policy TD \u63a7\u5236","text":"<p>Q-Learning \u662f\u4e00\u79cd off-policy \u63a7\u5236\u65b9\u6cd5\uff0c\u5728 DL \u5e94\u7528\u4e2d\u6709\u5f88\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u5982 DQN\u3002Q-Learning \u4e0e Sarsa \u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u5b83\u7684\u76ee\u6807\u4e0d\u4f9d\u8d56\u4e8e\u6240\u4f7f\u7528\u7684\u7b56\u7565\uff0c\u800c\u53ea\u4f9d\u8d56\u4e8e\u72b6\u6001-\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff1a $$ Q(S_t, A_t) \\leftarrow Q(S_t, A_t) + \\alpha [R_{t+1} + \\gamma \\max_a Q(S_{t+1}, a) - Q(S_t, A_t)] $$ \u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06 Q-Learning \u53d8\u4e3a n \u6b65\u7684\u7248\u672c\u3002</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/","title":"\u6df1\u5ea6 Q \u7f51\u7edc","text":""},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#dqn","title":"DQN","text":"<p>DQN \u901a\u8fc7\u4ef7\u503c\u51fd\u6570\u8fd1\u4f3c\uff08value function approximation\uff09\u8fd1\u4f3c\u8ba1\u7b97 \\(Q^\\pi(s,a)\\)\uff1a $$ Q_\\phi(s,a) \\approx Q^\\pi(s,a) $$ \u5176\u4e2d \\(\\phi\\) \u4e3a Q \u7f51\u7edc\u7684\u53c2\u6570\u3002</p> <p>DQN \u901a\u8fc7\u56de\u653e\u7f13\u5b58\uff08replay buffer\uff09\u548c\u76ee\u6807\u7f51\u7edc\u89e3\u51b3\u4e86\u7528\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c Q-Learning \u4e0d\u7a33\u5b9a\u7684\u95ee\u9898\u3002</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#_1","title":"\u56de\u653e\u7f13\u5b58","text":"<p>\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0cDQN \u5148\u5c06\u667a\u80fd\u4f53\u5f53\u524d\u65f6\u95f4\u6b65 \\(t\\) \u83b7\u5f97\u7684\u7ecf\u9a8c \\((S_t, A_t, R_t, S_{t+1})\\) \u653e\u5165\u56de\u653e\u7f13\u5b58\uff0c\u518d\u4ece\u56de\u653e\u7f13\u5b58\u4e2d\u968f\u673a\u91c7\u6837\u5c0f\u6279\u91cf\u6837\u672c\u66f4\u65b0 Q \u51fd\u6570\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\uff1a</p> <ul> <li>\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u8fc7\u53bb\u7684\u7ecf\u9a8c\u5b66\u4e60 Q \u51fd\u6570</li> <li>\u5982\u679c\u6ca1\u6709\u56de\u653e\u7f13\u5b58\uff0c\u5219\u6bcf\u4e2a\u6279\u6b21\u4e2d\u7684\u6570\u636e\u90fd\u662f\u8fde\u7eed\u91c7\u96c6\u3001\u9ad8\u5ea6\u76f8\u5173\u7684\uff0c\u8fd9\u6837\u4f1a\u589e\u52a0\u66f4\u65b0\u7684\u65b9\u5dee</li> <li>\u9632\u6b62\u7528\u4e8e\u8bad\u7ec3\u7684\u6837\u672c\u53ea\u6765\u81ea\u4e0a\u4e00\u4e2a\u7b56\u7565\uff0c\u80fd\u8ba9\u5b66\u4e60\u8fc7\u7a0b\u66f4\u5e73\u6ed1\uff0c\u51cf\u5c11\u53c2\u6570\u7684\u9707\u8361\u6216\u53d1\u6563</li> </ul> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u4e3a\u4e86\u8282\u7701\u5185\u5b58\uff0c\u6211\u4eec\u5f80\u5f80\u53ea\u5c06\u6700\u540e \\(N\\) \u4e2a\u7ecf\u9a8c\u5b58\u5165 buffer\uff08FIFO\uff09\u3002</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#_2","title":"\u76ee\u6807\u7f51\u7edc","text":"<p>DQN \u5f15\u5165\u76ee\u6807\u7f51\u7edc\u4ee3\u66ff Q \u7f51\u7edc\u751f\u6210 Q-Learning \u7684 target\u3002\u76ee\u6807\u7f51\u7edc\u7684\u5f15\u5165\u53ef\u4ee5\u4f7f Q-Learning \u7684\u76ee\u6807\u503c\u4e0d\u53d7\u6700\u65b0\u53c2\u6570\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u5927\u5927\u51cf\u5c11\u8bad\u7ec3\u9707\u8361\u6216\u53d1\u6563\u7684\u60c5\u51b5\u3002</p> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u76ee\u6807\u7f51\u7edc\u7684\u66f4\u65b0\u6709\u4e24\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a</p> <ul> <li>\u6bcf \\(C\\) \u6b65\u5c06\u6700\u65b0\u7684 Q \u7f51\u7edc\u590d\u5236\u5230\u76ee\u6807\u7f51\u7edc\uff08\u786c\u66f4\u65b0\uff09</li> <li>\u6307\u6570\u8870\u51cf\u5e73\u5747\uff08\u8f6f\u66f4\u65b0\uff09</li> </ul>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#double-dqn","title":"Double DQN","text":"<p>\u7531\u4e8e Q-Learning \u76ee\u6807\u4e2d\u5305\u542b\u6700\u5927\u5316\u7b97\u5b50 \\(\\max\\) \u7684\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u5f15\u8d77 Q \u503c\u8fc7\u9ad8\u4f30\u8ba1\u7684\u95ee\u9898\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e00\u95ee\u9898\uff0cDouble DQN\uff08DDQN\uff09\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684 Q \u7f51\u7edc\uff0c\u6807\u51c6 DQN \u7684\u5b66\u4e60\u76ee\u6807\u53ef\u4ee5\u88ab\u5199\u4e3a\uff1a $$ R_t + \\gamma \\hat{Q}(S_{t+1}, \\arg\\max_a \\hat{Q}(S_{t+1}, a; \\hat{\\theta}); \\hat{\\theta}) $$</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#dueling-dqn","title":"Dueling DQN","text":"<p>\u5bf9\u4e8e\u67d0\u4e9b\u72b6\u6001\uff0c\u4e0d\u540c\u7684\u52a8\u4f5c\u4e0e\u9884\u671f\u503c\u65e0\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u5b66\u4e60\u5404\u4e2a\u52a8\u4f5c\u5bf9\u8be5\u72b6\u6001\u7684\u5f71\u54cd\u3002Dueling DQN \u5c06 Q \u503c\u5206\u89e3\u4e3a\u72b6\u6001\u503c\u548c\u52a8\u4f5c\u4f18\u52bf\u4e24\u90e8\u5206\uff1a $$ Q^\\pi(s,a) = V^\\pi(s) + A^\\pi(s,a) $$ Dueling DQN \u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u5c06\u8fd9\u4e24\u90e8\u5206\u7684\u8868\u793a\u5206\u5f00\uff1a</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#per","title":"\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\uff08PER\uff09","text":"<p>\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\uff08Prioritized Experience Replay\uff0cPER\uff09\u662f\u4e00\u79cd\u5c06\u7ecf\u9a8c\u6309\u7167\u4f18\u5148\u7ea7\u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u91cd\u8981\u7684\u72b6\u6001\u8f6c\u79fb\u7ecf\u9a8c\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u3002</p>"},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#rainbow","title":"Rainbow","text":""},{"location":"Reinforcement%20Learning/6.Deep%20Q-Learning/#distributional-rl","title":"Distributional RL","text":""},{"location":"Reinforcement%20Learning/7.Policy%20Gradient/","title":"\u7b56\u7565\u68af\u5ea6","text":""},{"location":"Reinforcement%20Learning/7.Policy%20Gradient/#reinforce","title":"REINFORCE","text":""},{"location":"Reinforcement%20Learning/8.Actor-Critic/","title":"RL","text":"<p>RL.</p>"},{"location":"Reinforcement%20Learning/9.Imitation%20Learning/","title":"RL","text":"<p>RL.</p>"},{"location":"Tools/Git/","title":"Git: fork \u540e\u7684\u4ed3\u5e93\u5982\u4f55\u4e0e\u539f\u4ed3\u5e93\u540c\u6b65","text":"<p>\u67e5\u770b\u4ed3\u5e93\u7684\u8def\u5f84\uff1a</p> <pre><code>git remote -v\n</code></pre> <p>\u68c0\u67e5\u672c\u5730\u662f\u5426\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539\uff1a</p> <pre><code>git status\n</code></pre> <p>\u6293\u53d6\u539f\u4ed3\u5e93\u7684\u66f4\u65b0\uff1a</p> <pre><code>git fetch upstream\n</code></pre> <p>\u5207\u6362\u5230 <code>master</code> \u5206\u652f\uff1a</p> <pre><code>git checkout master\n</code></pre> <p>\u5408\u5e76\u539f\u4ed3\u5e93\u7684\u66f4\u65b0\uff1a</p> <pre><code>git merge upstream/master\n</code></pre> <p>\u6253\u5f00 <code>GitHub Desktop</code> \u548c <code>VSCode</code> \u5904\u7406\u51b2\u7a81\uff08\u82e5\u6709\uff09</p> <p>\u5904\u7406\u5b8c\u51b2\u7a81\uff1a</p> <pre><code>git push\n</code></pre>"}]}